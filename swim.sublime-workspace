{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"protected",
				"protected 	Language Construct"
			],
			[
				"sign",
				"signup_for"
			],
			[
				"group",
				"groupdetail"
			],
			[
				"address",
				"addressRepository"
			],
			[
				"Group",
				"GroupSignupType"
			],
			[
				"form",
				"formtype"
			],
			[
				"creat",
				"createView"
			],
			[
				"fetch",
				"fetchAll"
			],
			[
				"add",
				"addStudent"
			],
			[
				"free",
				"freezeStudentSignup"
			],
			[
				"unfee",
				"unfreezeStudentSignup"
			],
			[
				"STUDENT",
				"STUDENT_COLLECTION"
			],
			[
				"array",
				"array_combine"
			],
			[
				"stu",
				"student_form"
			],
			[
				"Stu",
				"StudentCollection"
			],
			[
				"mar",
				"margin"
			],
			[
				"font",
				"font-size"
			],
			[
				"fun",
				"fun	function …"
			],
			[
				"pre",
				"preference"
			],
			[
				"Hos",
				"HostRegistration"
			],
			[
				"host",
				"HostRegistration"
			],
			[
				"Regis",
				"HostRegistrationType"
			],
			[
				"Ho",
				"HostRegistrationType"
			],
			[
				"Host",
				"HostRegistration"
			],
			[
				"S",
				"Swim"
			],
			[
				"addre",
				"addressForm"
			],
			[
				"in",
				"inline-block"
			],
			[
				"spo",
				"spouse_lastname"
			],
			[
				"sp",
				"spouse_firstname"
			],
			[
				"choice",
				"choiceGroupName"
			],
			[
				"modifier",
				"modifiers"
			],
			[
				"item",
				"itemID"
			],
			[
				"itemI",
				"itemImageId"
			],
			[
				"req",
				"request"
			],
			[
				"choiceGrou",
				"choiceGroupData"
			],
			[
				"modifer",
				"modifierID"
			],
			[
				"Modi",
				"ModifierRepository"
			],
			[
				"choiceG",
				"choiceGroupRepo"
			],
			[
				"modi",
				"modifier"
			],
			[
				"Choice",
				"ChoiceGroupRepository"
			],
			[
				"mo",
				"modifierList"
			],
			[
				"modif",
				"modifierList"
			],
			[
				"for",
				"foreach	foreach …"
			],
			[
				"fet",
				"fetchAll"
			],
			[
				"ch",
				"choiceGroupName"
			],
			[
				"produc",
				"productClass"
			],
			[
				"pro",
				"productClass"
			],
			[
				"product",
				"productClasses"
			],
			[
				"class",
				"classesData"
			],
			[
				"var",
				"var_dump"
			],
			[
				"medi",
				"media_list"
			],
			[
				"reset",
				"reset_name"
			],
			[
				"device",
				"device_id"
			],
			[
				"qu",
				"query"
			],
			[
				"me",
				"media_id"
			],
			[
				"__show",
				"__showcase_advert_vendor_media"
			],
			[
				"data",
				"dataType"
			],
			[
				"set",
				"setQuery"
			],
			[
				"print",
				"print_r"
			],
			[
				"advert",
				"advert_device_arr"
			],
			[
				"__jos",
				"__jos_showcase_advert_vendor_media"
			],
			[
				"eq",
				"equal"
			],
			[
				"get",
				"getFullYear"
			],
			[
				"cone",
				"contents"
			],
			[
				"backg",
				"backgroundColor	(str)"
			],
			[
				"proto",
				"prototype	{}"
			]
		]
	},
	"buffers":
	[
		{
			"file": "web/index.php",
			"settings":
			{
				"buffer_size": 256,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/app.php",
			"settings":
			{
				"buffer_size": 4051,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Swim/Repository/UserRepository.php",
			"settings":
			{
				"buffer_size": 8950,
				"line_ending": "Unix"
			}
		},
		{
			"file": "vendor/symfony/security/Core/Authentication/Provider/UserAuthenticationProvider.php",
			"settings":
			{
				"buffer_size": 5231,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Swim/Controller/AdminUserController.php",
			"settings":
			{
				"buffer_size": 3489,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Swim/Controller/AdminController.php",
			"settings":
			{
				"buffer_size": 377,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/routes.php",
			"settings":
			{
				"buffer_size": 5528,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Swim/Controller/IndexController.php",
			"settings":
			{
				"buffer_size": 394,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Swim/Controller/SignupController.php",
			"settings":
			{
				"buffer_size": 36962,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Swim/Entity/Group.php",
			"settings":
			{
				"buffer_size": 2800,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/sopae/Library/Application Support/Sublime Text 3/Packages/User/php-getters-setters.sublime-settings",
			"settings":
			{
				"buffer_size": 33,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Swim/Repository/GroupRepository.php",
			"settings":
			{
				"buffer_size": 6887,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Swim/Repository/LessonRepository.php",
			"settings":
			{
				"buffer_size": 7087,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Swim/Repository/PoolRepository.php",
			"settings":
			{
				"buffer_size": 6519,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Swim/Repository/AddressRepository.php",
			"settings":
			{
				"buffer_size": 6674,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Swim/Repository/HelperRepository.php",
			"settings":
			{
				"buffer_size": 6593,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/db.sql",
			"settings":
			{
				"buffer_size": 4644,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Swim/Form/Type/UserSignupType.php",
			"settings":
			{
				"buffer_size": 740,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Swim/Form/Type/StudentSignupType.php",
			"settings":
			{
				"buffer_size": 1183,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Swim/Form/Type/GroupSignupType.php",
			"settings":
			{
				"buffer_size": 2359,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Swim/Entity/StudentCollection.php",
			"settings":
			{
				"buffer_size": 1302,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/views/form.signup.student.html.twig",
			"settings":
			{
				"buffer_size": 3990,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/views/form.signup.user.html.twig",
			"settings":
			{
				"buffer_size": 1401,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/views/form.signup.group.html.twig",
			"settings":
			{
				"buffer_size": 1228,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/views/form.signup.payment.html.twig",
			"settings":
			{
				"buffer_size": 3692,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/views/form.signup.payment.confirm.html.twig",
			"settings":
			{
				"buffer_size": 1919,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Swim/Form/Type/GroupDetailSignupType.php",
			"settings":
			{
				"buffer_size": 2446,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/views/form.host.step2.html.twig",
			"settings":
			{
				"buffer_size": 3865,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/views/form.host.step1.html.twig",
			"settings":
			{
				"buffer_size": 5318,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Swim/Form/field_errors.html.twig",
			"settings":
			{
				"buffer_size": 303,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/views/index.html.twig",
			"settings":
			{
				"buffer_size": 83,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/views/index.signup.html.twig",
			"settings":
			{
				"buffer_size": 290,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/views/host.signup.html.twig",
			"settings":
			{
				"buffer_size": 93688,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/views/layout.html.twig.travis",
			"settings":
			{
				"buffer_size": 17067,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/views/layout.html.twig",
			"settings":
			{
				"buffer_size": 2326,
				"line_ending": "Unix"
			}
		},
		{
			"file": "web/css/main.css",
			"settings":
			{
				"buffer_size": 341,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 5184 files for \"main.css\" (regex, case sensitive)\n\n/Users/sopae/Projects/AkinsParker/app/views/host.signup.html.twig:\n  481  \n  482  <link rel='stylesheet' id='gforms_reset_css-css'  href='http://mobs.akinsparker.com/wp-content/plugins/gravityforms/css/formreset.min.css' type='text/css' media='all' />\n  483: <link rel='stylesheet' id='gforms_formsmain_css-css'  href='http://mobs.akinsparker.com/wp-content/plugins/gravityforms/css/formsmain.min.css' type='text/css' media='all' />\n  484  <link rel='stylesheet' id='gforms_ready_class_css-css'  href='http://mobs.akinsparker.com/wp-content/plugins/gravityforms/css/readyclass.min.css' type='text/css' media='all' />\n  485  <link rel='stylesheet' id='gforms_browsers_css-css'  href='http://mobs.akinsparker.com/wp-content/plugins/gravityforms/css/browsers.min.css' type='text/css' media='all' />\n\n/Users/sopae/Projects/AkinsParker/app/views/layout.html.twig:\n   18      <![endif]-->\n   19      <script type=\"text/javascript\" src=\"http://fast.fonts.net/jsapi/62b696df-7481-4b37-a366-89163bfee23a.js\"></script>\n   20:     <!-- <link href=\"{{ app.request.basepath }}/css/main.css\" rel=\"stylesheet\" type='text/css'> -->\n   21    </head>\n   22    <body>\n\n/Users/sopae/Projects/AkinsParker/web/less/reset.less:\n  149  // Printing\n  150  // -------------------------\n  151: // Source: https://github.com/h5bp/html5-boilerplate/blob/master/css/main.css\n  152  \n  153  @media print {\n\n/Users/sopae/Projects/AkinsParker/web/scss/_reset.scss:\n  149  // Printing\n  150  // -------------------------\n  151: // Source: https://github.com/h5bp/html5-boilerplate/blob/master/css/main.css\n  152  \n  153  @media print {\n\n<untitled 1053>:\n  468  \n  469    <link rel='stylesheet' id='gforms_reset_css-css'  href='http://mobs.akinsparker.com/wp-content/plugins/gravityforms/css/formreset.min.css' type='text/css' media='all' />\n  470: <link rel='stylesheet' id='gforms_formsmain_css-css'  href='http://mobs.akinsparker.com/wp-content/plugins/gravityforms/css/formsmain.min.css' type='text/css' media='all' />\n  471  <link rel='stylesheet' id='gforms_ready_class_css-css'  href='http://mobs.akinsparker.com/wp-content/plugins/gravityforms/css/readyclass.min.css' type='text/css' media='all' />\n  472  <link rel='stylesheet' id='gforms_browsers_css-css'  href='http://mobs.akinsparker.com/wp-content/plugins/gravityforms/css/browsers.min.css' type='text/css' media='all' />\n\n5 matches across 5 files\n\n\nSearching 5210 files for \"ture\" (regex, case sensitive)\n\n/Users/sopae/Projects/AkinsParker/composer.lock:\n  738                  }\n  739              ],\n  740:             \"description\": \"Swiftmailer, free feature-rich PHP mailer\",\n  741              \"homepage\": \"http://swiftmailer.org\",\n  742              \"keywords\": [\n\n/Users/sopae/Projects/AkinsParker/.idea/workspace.xml:\n  686        <window_info id=\"TODO\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" weight=\"0.33\" sideWeight=\"0.5\" order=\"6\" side_tool=\"false\" content_ui=\"tabs\" />\n  687        <window_info id=\"Database\" active=\"false\" anchor=\"right\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" weight=\"0.33\" sideWeight=\"0.5\" order=\"-1\" side_tool=\"false\" content_ui=\"tabs\" />\n  688:       <window_info id=\"Structure\" active=\"false\" anchor=\"left\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" weight=\"0.25\" sideWeight=\"0.5\" order=\"1\" side_tool=\"false\" content_ui=\"tabs\" />\n  689        <window_info id=\"Application Servers\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" weight=\"0.33\" sideWeight=\"0.5\" order=\"-1\" side_tool=\"false\" content_ui=\"tabs\" />\n  690        <window_info id=\"Project\" active=\"false\" anchor=\"left\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"true\" weight=\"0.22109374\" sideWeight=\"0.5\" order=\"0\" side_tool=\"false\" content_ui=\"combo\" />\n\n/Users/sopae/Projects/AkinsParker/app/db.sql:\n    8  \n    9  --\n   10: -- Table structure for table `lessons`\n   11  --\n   12  \n   ..\n   24  \n   25  --\n   26: -- Table structure for table `groups`\n   27  --\n   28  \n   ..\n   38  \n   39  --\n   40: -- Table structure for table group student placement\n   41  --\n   42  \n   ..\n   49  ) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=25 ;\n   50  --\n   51: -- Table structure for table `addresses`\n   52  --\n   53  \n   ..\n   69  \n   70  --\n   71: -- Table structure for table `users`\n   72  --\n   73  \n   ..\n   92  \n   93  --\n   94: -- Table structure for table `users`\n   95  --\n   96  \n   ..\n  108  \n  109  --\n  110: -- Table structure for table `pools`\n  111  --\n  112  \n\n/Users/sopae/Projects/AkinsParker/app/swim.sql:\n   17  \n   18  --\n   19: -- Table structure for table `addresses`\n   20  --\n   21  \n   ..\n   47  \n   48  --\n   49: -- Table structure for table `coupons`\n   50  --\n   51  \n   ..\n   72  \n   73  --\n   74: -- Table structure for table `exp_levels`\n   75  --\n   76  \n   ..\n   96  \n   97  --\n   98: -- Table structure for table `groups`\n   99  --\n  100  \n  ...\n  124  \n  125  --\n  126: -- Table structure for table `lessons`\n  127  --\n  128  \n  ...\n  154  \n  155  --\n  156: -- Table structure for table `placements`\n  157  --\n  158  \n  ...\n  179  \n  180  --\n  181: -- Table structure for table `pools`\n  182  --\n  183  \n  ...\n  206  \n  207  --\n  208: -- Table structure for table `students`\n  209  --\n  210  \n  ...\n  234  \n  235  --\n  236: -- Table structure for table `users`\n  237  --\n  238  \n\n/Users/sopae/Projects/AkinsParker/src/Swim/Form/Type/GroupDetailSignupType.php:\n   30                      array('All', 'Some', 'None')),\n   31                  'label' => 'I prefer to fill ___________ of the available spots in my group',\n   32:                 'expanded' => ture\n   33                  ))\n   34              ->add('addition', 'choice', array(\n\n/Users/sopae/Projects/AkinsParker/vendor/composer/installed.json:\n 1805              }\n 1806          ],\n 1807:         \"description\": \"Swiftmailer, free feature-rich PHP mailer\",\n 1808          \"homepage\": \"http://swiftmailer.org\",\n 1809          \"keywords\": [\n\n/Users/sopae/Projects/AkinsParker/vendor/doctrine/collections/lib/Doctrine/Common/Collections/Collection.php:\n   28   * The missing (SPL) Collection/Array/OrderedMap interface.\n   29   *\n   30:  * A Collection resembles the nature of a regular PHP array. That is,\n   31   * it is essentially an <b>ordered map</b> that can also be used\n   32   * like a list.\n\n/Users/sopae/Projects/AkinsParker/vendor/doctrine/collections/tests/Doctrine/Tests/Common/Collections/CollectionTest.php:\n  196      }\n  197  \n  198:     public function fillMatchingFixture()\n  199      {\n  200          $std1 = new \\stdClass();\n  ...\n  212      public function testMatching()\n  213      {\n  214:         $this->fillMatchingFixture();\n  215  \n  216          $col = $this->collection->matching(new Criteria(Criteria::expr()->eq(\"foo\", \"bar\")));\n  ...\n  225      public function testMatchingOrdering()\n  226      {\n  227:         $this->fillMatchingFixture();\n  228  \n  229          $col = $this->collection->matching(new Criteria(null, array('foo' => 'DESC')));\n  ...\n  241      public function testMatchingSlice()\n  242      {\n  243:         $this->fillMatchingFixture();\n  244  \n  245          $col = $this->collection->matching(new Criteria(null, null, 1, 1));\n\n/Users/sopae/Projects/AkinsParker/vendor/doctrine/common/lib/Doctrine/Common/Persistence/Mapping/ClassMetadata.php:\n   40       * Gets the mapped identifier field name.\n   41       *\n   42:      * The returned structure is an array of the identifier field names.\n   43       *\n   44       * @return array\n\n/Users/sopae/Projects/AkinsParker/vendor/doctrine/common/lib/Doctrine/Common/Persistence/Mapping/Driver/FileDriver.php:\n  166       * Initializes the class cache from all the global files.\n  167       *\n  168:      * Using this feature adds a substantial performance hit to file drivers as\n  169       * more metadata has to be loaded into memory than might actually be\n  170       * necessary. This may not be relevant to scenarios where caching of\n\n/Users/sopae/Projects/AkinsParker/vendor/doctrine/common/lib/Doctrine/Common/Proxy/ProxyDefinition.php:\n   21  \n   22  /**\n   23:  * Definition structure how to create a proxy.\n   24   *\n   25   * @author Benjamin Eberlei <kontakt@beberlei.de>\n\n/Users/sopae/Projects/AkinsParker/vendor/doctrine/common/lib/Doctrine/Common/Reflection/ClassFinderInterface.php:\n   21  \n   22  /**\n   23:  * Finds a class in a PSR-0 structure.\n   24   *\n   25   * @author Karoly Negyesi <karoly@negyesi.net>\n\n/Users/sopae/Projects/AkinsParker/vendor/doctrine/common/lib/Doctrine/Common/Reflection/Psr0FindFile.php:\n   21  \n   22  /**\n   23:  * Finds a class in a PSR-0 structure.\n   24   *\n   25   * @author Karoly Negyesi <karoly@negyesi.net>\n\n/Users/sopae/Projects/AkinsParker/vendor/doctrine/common/tests/Doctrine/Tests/TestInit.php:\n   23  \n   24  \\Doctrine\\Common\\Annotations\\AnnotationRegistry::registerAutoloadNamespace(\n   25:     'Doctrine\\Tests\\Common\\Annotations\\Fixtures', __DIR__ . '/../../'\n   26  );\n   27  \n\n/Users/sopae/Projects/AkinsParker/vendor/doctrine/common/tests/Doctrine/Tests/Common/Proxy/ProxyLogicTest.php:\n   27  \n   28  /**\n   29:  * Test the generated proxies behavior. These tests make assumptions about the structure of LazyLoadableObject\n   30   *\n   31   * @author Marco Pivetta <ocramius@gmail.com>\n\n/Users/sopae/Projects/AkinsParker/vendor/doctrine/dbal/README.md:\n    1  # Doctrine DBAL\n    2  \n    3: Powerful database abstraction layer with many features for database schema introspection, schema management and PDO abstraction.\n    4  \n    5  * Master: [![Build Status](https://secure.travis-ci.org/doctrine/dbal.png?branch=master)](http://travis-ci.org/doctrine/dbal) [![Dependency Status](https://www.versioneye.com/php/doctrine:dbal/dev-master/badge.png)](https://www.versioneye.com/php/doctrine:dbal/dev-master)\n\n/Users/sopae/Projects/AkinsParker/vendor/doctrine/dbal/UPGRADE.md:\n    7  Duplicate indexes are considered indexes that pass ``isFullfilledBy()`` or ``overrules()``\n    8  in ``Doctrine\\DBAL\\Schema\\Index``.\n    9: This is required to make the index renaming feature introduced in 2.5.0 work properly and avoid\n   10  issues in the ORM schema tool / DBAL schema manager which pretends users from updating\n   11  their schemas and migrate to DBAL 2.5.*.\n   ..\n   43  portions to use ``getDatabasePlatform()`` instead to retrieve the underlying database\n   44  platform.\n   45: The reason for this change is the new automatic platform version detection feature,\n   46  which lazily evaluates the appropriate platform class to use for the underlying database\n   47  server version at runtime.\n   ..\n  195  \n  196  DBAL 2.1 and before were actually only compatible to SQL Server 2008, not earlier versions.\n  197: Still other parts of the platform did use old features instead of newly introduced datatypes\n  198  in SQL Server 2005. Starting with DBAL 2.2 you can pick the Doctrine abstraction exactly\n  199  matching your SQL Server version.\n  200  \n  201  The PDO SqlSrv driver now uses the new `SQLServer2008Platform` as default platform.\n  202: This platform uses new features of SQL Server as of version 2008. This also includes a switch\n  203  in the used fields for \"text\" and \"blob\" field types to:\n  204  \n  ...\n  210  SQLServer 2008 platform makes this dependency explicit.\n  211  \n  212: An `SQLServer2005Platform` was also introduced to differentiate the features between\n  213  versions 2003, earlier and 2005.\n  214  \n  215  With this change the `SQLServerPlatform` now throws an exception for using limit queries\n  216: with an offset, since SQLServer 2003 and lower do not support this feature.\n  217  \n  218  To use the old SQL Server Platform, because you are using SQL Server 2003 and below use\n\n/Users/sopae/Projects/AkinsParker/vendor/doctrine/dbal/lib/Doctrine/DBAL/Connection.php:\n   35  \n   36  /**\n   37:  * A wrapper around a Doctrine\\DBAL\\Driver\\Connection that adds features like\n   38   * events, transaction isolation levels, configuration, emulated transaction nesting,\n   39   * lazy connecting and more.\n\n/Users/sopae/Projects/AkinsParker/vendor/doctrine/dbal/lib/Doctrine/DBAL/SQLParserUtils.php:\n  192       * Slice the SQL statement around pairs of quotes and\n  193       * return string fragments of SQL outside of quoted literals.\n  194:      * Each fragment is captured as a 2-element array:\n  195       *\n  196       * 0 => matched fragment string,\n\n/Users/sopae/Projects/AkinsParker/vendor/doctrine/dbal/lib/Doctrine/DBAL/VersionAwarePlatformDriver.php:\n   24   *\n   25   * Doctrine uses different platform classes for different vendor versions to\n   26:  * support the correct features and SQL syntax of each version.\n   27   * This interface should be implemented by drivers that are capable to do this\n   28   * distinction.\n\n/Users/sopae/Projects/AkinsParker/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractPostgreSQLDriver.php:\n   48              case '0A000':\n   49                  // Foreign key constraint violations during a TRUNCATE operation\n   50:                 // are considered \"feature not supported\" in PostgreSQL.\n   51                  if (strpos($exception->getMessage(), 'truncate') !== false) {\n   52                      return new Exception\\ForeignKeyConstraintViolationException($message, $exception);\n\n/Users/sopae/Projects/AkinsParker/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:\n   40      public function setFetchMode($fetchMode, $arg2 = null, $arg3 = null)\n   41      {\n   42:         // This thin wrapper is necessary to shield against the weird signature\n   43          // of PDOStatement::setFetchMode(): even if the second and third\n   44          // parameters are optional, PHP will not let us remove it from this\n\n/Users/sopae/Projects/AkinsParker/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/OCI8/OCI8Statement.php:\n  267              }\n  268          } else {\n  269:             $fetchStructure = OCI_FETCHSTATEMENT_BY_ROW;\n  270              if ($fetchMode == PDO::FETCH_COLUMN) {\n  271:                 $fetchStructure = OCI_FETCHSTATEMENT_BY_COLUMN;\n  272              }\n  273  \n  274              oci_fetch_all($this->_sth, $result, 0, -1,\n  275:                 self::$fetchModeMap[$fetchMode] | OCI_RETURN_NULLS | $fetchStructure | OCI_RETURN_LOBS);\n  276  \n  277              if ($fetchMode == PDO::FETCH_COLUMN) {\n\n/Users/sopae/Projects/AkinsParker/vendor/doctrine/dbal/lib/Doctrine/DBAL/Platforms/AbstractPlatform.php:\n   46  /**\n   47   * Base class for all DatabasePlatforms. The DatabasePlatforms are the central\n   48:  * point of abstraction of platform-specific behaviors, features and SQL dialects.\n   49   * They are a passive source of information.\n   50   *\n\n/Users/sopae/Projects/AkinsParker/vendor/doctrine/dbal/lib/Doctrine/DBAL/Platforms/MySQL57Platform.php:\n   24  \n   25  /**\n   26:  * Provides the behavior, features and SQL dialect of the MySQL 5.7 database platform.\n   27   *\n   28   * @author Steve Müller <st.mueller@dzh-online.de>\n\n/Users/sopae/Projects/AkinsParker/vendor/doctrine/dbal/lib/Doctrine/DBAL/Platforms/MySqlPlatform.php:\n   28  \n   29  /**\n   30:  * The MySqlPlatform provides the behavior, features and SQL dialect of the\n   31   * MySQL database platform. This platform represents a MySQL 5.0 or greater platform that\n   32   * uses the InnoDB storage engine.\n\n/Users/sopae/Projects/AkinsParker/vendor/doctrine/dbal/lib/Doctrine/DBAL/Platforms/PostgreSQL91Platform.php:\n   21  \n   22  /**\n   23:  * Provides the behavior, features and SQL dialect of the PostgreSQL 9.1 database platform.\n   24   *\n   25   * @author Martin Hasoň <martin.hason@gmail.com>\n\n/Users/sopae/Projects/AkinsParker/vendor/doctrine/dbal/lib/Doctrine/DBAL/Platforms/PostgreSQL92Platform.php:\n   21  \n   22  /**\n   23:  * Provides the behavior, features and SQL dialect of the PostgreSQL 9.2 database platform.\n   24   *\n   25   * @author Steve Müller <st.mueller@dzh-online.de>\n\n/Users/sopae/Projects/AkinsParker/vendor/doctrine/dbal/lib/Doctrine/DBAL/Platforms/SQLAnywhere11Platform.php:\n   21  \n   22  /**\n   23:  * The SQLAnywhere11Platform provides the behavior, features and SQL dialect of the\n   24   * SAP Sybase SQL Anywhere 11 database platform.\n   25   *\n\n/Users/sopae/Projects/AkinsParker/vendor/doctrine/dbal/lib/Doctrine/DBAL/Platforms/SQLAnywhere12Platform.php:\n   24  \n   25  /**\n   26:  * The SQLAnywhere12Platform provides the behavior, features and SQL dialect of the\n   27   * SAP Sybase SQL Anywhere 12 database platform.\n   28   *\n\n/Users/sopae/Projects/AkinsParker/vendor/doctrine/dbal/lib/Doctrine/DBAL/Platforms/SQLAnywhere16Platform.php:\n   24  \n   25  /**\n   26:  * The SQLAnywhere16Platform provides the behavior, features and SQL dialect of the\n   27   * SAP Sybase SQL Anywhere 16 database platform.\n   28   *\n\n/Users/sopae/Projects/AkinsParker/vendor/doctrine/dbal/lib/Doctrine/DBAL/Platforms/SQLAnywherePlatform.php:\n   33  \n   34  /**\n   35:  * The SQLAnywherePlatform provides the behavior, features and SQL dialect of the\n   36   * SAP Sybase SQL Anywhere 10 database platform.\n   37   *\n\n/Users/sopae/Projects/AkinsParker/vendor/doctrine/dbal/lib/Doctrine/DBAL/Platforms/SQLServerPlatform.php:\n   30  \n   31  /**\n   32:  * The SQLServerPlatform provides the behavior, features and SQL dialect of the\n   33   * Microsoft SQL Server database platform.\n   34   *\n   ..\n  507                  \"', '\" . $column->getQuotedName($this) . \"', 'COLUMN'\";\n  508  \n  509:             // Recreate default constraint with new column name if necessary (for future reference).\n  510              if ($column->getDefault() !== null) {\n  511                  $queryParts[] = $this->getAlterTableDropDefaultConstraintClause(\n  ...\n  536               * to match the new table name.\n  537               * This is necessary to ensure that the default\n  538:              * constraints can be referenced in future table\n  539               * alterations as the table name is encoded in\n  540               * default constraints' names.\n\n/Users/sopae/Projects/AkinsParker/vendor/doctrine/dbal/lib/Doctrine/DBAL/Query/QueryBuilder.php:\n   26   * QueryBuilder class is responsible to dynamically create SQL queries.\n   27   *\n   28:  * Important: Verify that every feature you use will work with your database vendor.\n   29   * SQL Query Builder does not attempt to validate the generated SQL at all.\n   30   *\n   31:  * The query builder does no validation whatsoever if certain features even work with the\n   32   * underlying database vendor. Limit queries and joins are NOT applied to UPDATE and DELETE statements\n   33   * even if some vendors such as MySQL support it.\n\n/Users/sopae/Projects/AkinsParker/vendor/doctrine/dbal/lib/Doctrine/DBAL/Schema/AbstractSchemaManager.php:\n   28  /**\n   29   * Base class for schema managers. Schema managers are used to inspect and/or\n   30:  * modify the database schema/structure.\n   31   *\n   32   * @author Konsta Vesterinen <kvesteri@cc.hut.fi>\n\n/Users/sopae/Projects/AkinsParker/vendor/doctrine/dbal/lib/Doctrine/DBAL/Schema/Sequence.php:\n   23  \n   24  /**\n   25:  * Sequence structure.\n   26   *\n   27   * @link   www.doctrine-project.org\n\n/Users/sopae/Projects/AkinsParker/vendor/silex/silex/doc/changelog.rst:\n  104  \n  105  * Removed or replaced deprecated Symfony code\n  106: * Updated code to take advantages of 2.3 new features\n  107  * Only convert attributes on the request that actually exist.\n  108  \n\n/Users/sopae/Projects/AkinsParker/vendor/silex/silex/doc/contributing.rst:\n    7  * Fork `the Silex repository <https://github.com/silexphp/Silex>`_;\n    8  \n    9: * Make your feature addition or bug fix;\n   10  \n   11  * Add tests for it;\n   ..\n   25  =====================\n   26  \n   27: The documentation is written in `reStructuredText\n   28  <http://docutils.sourceforge.net/rst.html>`_ and can be generated using `sphinx\n   29  <http://sphinx-doc.org>`_.\n\n/Users/sopae/Projects/AkinsParker/vendor/silex/silex/doc/usage.rst:\n    6  \n    7  If you want to get started fast, `download`_ Silex as an archive and extract\n    8: it, you should have the following directory structure:\n    9  \n   10  .. code-block:: text\n   ..\n  712  .. caution::\n  713  \n  714:     You need to use PHP 5.4 or later to benefit from this feature.\n  715  \n  716  Almost all built-in service providers have some corresponding PHP traits. To\n\n/Users/sopae/Projects/AkinsParker/vendor/silex/silex/doc/cookbook/session_storage.rst:\n   78      });\n   79  \n   80: Database structure\n   81  ------------------\n   82  \n\n/Users/sopae/Projects/AkinsParker/vendor/silex/silex/doc/providers/security.rst:\n   71  .. caution::\n   72  \n   73:     The security features are only available after the Application has been\n   74      booted. So, if you want to use it outside of the handling of a request,\n   75      don't forget to call ``boot()`` first::\n\n/Users/sopae/Projects/AkinsParker/vendor/silex/silex/src/Silex/Application.php:\n  516       * @return BinaryFileResponse\n  517       *\n  518:      * @throws \\RuntimeException When the feature is not supported, before http-foundation v2.2\n  519       */\n  520      public function sendFile($file, $status = 200, array $headers = array(), $contentDisposition = null)\n\n/Users/sopae/Projects/AkinsParker/vendor/silex/silex/src/Silex/Util/Compiler.php:\n   44  \n   45          $phar = new \\Phar($pharFile, 0, 'silex.phar');\n   46:         $phar->setSignatureAlgorithm(\\Phar::SHA1);\n   47  \n   48          $phar->startBuffering();\n\n/Users/sopae/Projects/AkinsParker/vendor/silex/silex/tests/Silex/Tests/ExceptionHandlerTest.php:\n  360          // second more specific error handler should not fire since\n  361          // the \\Exception error handler is registered first and also\n  362:         // captures all exceptions that extend it\n  363          $app->error(function (\\Exception $e) {\n  364              return 'Caught Exception';\n\n/Users/sopae/Projects/AkinsParker/vendor/stripe/stripe-php/CHANGELOG.md:\n  255  \n  256  * Switch from using HTTP Basic auth to Bearer auth. (Note: Stripe will\n  257:   support Basic auth for the indefinite future, but recommends Bearer\n  258    auth when possible going forward)\n  259  \n\n/Users/sopae/Projects/AkinsParker/vendor/stripe/stripe-php/data/ca-certificates.crt:\n 3046  ================================================================\n 3047  C: US\n 3048: O: Digital Signature Trust\n 3049  OU: DST ACES\n 3050  CN: DST ACES CA X6\n ....\n 3076  ================================================================\n 3077  C: US\n 3078: O: Digital Signature Trust Co.\n 3079  OU: DSTCA E1\n 3080  -----BEGIN CERTIFICATE-----\n ....\n 3100  ================================================================\n 3101  C: US\n 3102: O: Digital Signature Trust Co.\n 3103  OU: DSTCA E2\n 3104  -----BEGIN CERTIFICATE-----\n ....\n 4936  \n 4937  ================================================================\n 4938: O: Digital Signature Trust Co.\n 4939  CN: DST Root CA X3\n 4940  -----BEGIN CERTIFICATE-----\n\n/Users/sopae/Projects/AkinsParker/vendor/stripe/stripe-php/lib/Charge.php:\n   66       * @param array|string|null $options\n   67       *\n   68:      * @return Charge The captured charge.\n   69       */\n   70:     public function capture($params = null, $options = null)\n   71      {\n   72:         $url = $this->instanceUrl() . '/capture';\n   73          list($response, $opts) = $this->_request('post', $url, $params, $options);\n   74          $this->refreshFrom($response, $opts);\n\n/Users/sopae/Projects/AkinsParker/vendor/stripe/stripe-php/lib/HttpClient/CurlClient.php:\n   48          }\n   49  \n   50:         // Create a callback to capture HTTP headers for the response\n   51          $rheaders = array();\n   52          $headerCallback = function ($curl, $header_line) use (&$rheaders) {\n\n/Users/sopae/Projects/AkinsParker/vendor/swiftmailer/swiftmailer/CHANGES:\n    5  ------------------\n    6  \n    7:  * made Swiftmailer exceptions confirm to PHP base exception constructor signature\n    8   * fixed MAIL FROM & RCPT TO headers to be RFC compliant\n    9  \n   ..\n   11  ------------------\n   12  \n   13:  * added the possibility to add extra certs to PKCS#7 signature\n   14   * fix base64 encoding with streams\n   15   * added a new RESULT_SPOOLED status for SpoolTransport\n   ..\n  196  ----------------------\n  197  \n  198: New features:\n  199  \n  200   * changed the Decorator Plugin to allow replacements in all headers\n\n/Users/sopae/Projects/AkinsParker/vendor/swiftmailer/swiftmailer/composer.json:\n    2      \"name\": \"swiftmailer/swiftmailer\",\n    3      \"type\": \"library\",\n    4:     \"description\": \"Swiftmailer, free feature-rich PHP mailer\",\n    5      \"keywords\": [\"mail\",\"mailer\",\"email\"],\n    6      \"homepage\": \"http://swiftmailer.org\",\n\n/Users/sopae/Projects/AkinsParker/vendor/swiftmailer/swiftmailer/doc/headers.rst:\n   23  ``setContentType()`` and ``getContentType()``. This is because headers are a\n   24  moderately complex area of the library. Each header has a slightly different\n   25: required structure that it must meet in order to comply with the standards that\n   26  govern email (and that are checked by spam blockers etc).\n   27  \n   ..\n  313  The data on which a date header is modeled is simply a UNIX timestamp such as\n  314  that returned by ``time()`` or ``strtotime()``.  The timestamp is used to create\n  315: a correctly structured RFC 2822 formatted date such as\n  316  ``Tue, 17 Feb 2009 22:26:31 +1100``.\n  317  \n  ...\n  461  \n  462  Any ID passed to the header's ``setId()`` method absolutely MUST conform to\n  463: this structure, otherwise you'll get an Exception thrown at you by Swift Mailer\n  464  (a ``Swift_RfcComplianceException``).  This is to ensure that the generated\n  465  email complies with relevant RFC documents and therefore is less likely to be\n\n/Users/sopae/Projects/AkinsParker/vendor/swiftmailer/swiftmailer/doc/help-resources.rst:\n    3  \n    4  There are a number of ways you can get help when using Swift Mailer, depending\n    5: upon the nature of your problem. For bug reports and feature requests create a\n    6  new ticket in GitHub. For general advice ask on the Google Group\n    7  (swiftmailer).\n    8  \n    9: Submitting Bugs & Feature Requests\n   10  ----------------------------------\n   11  \n   12: Bugs and feature requests should be posted on GitHub.\n   13  \n   14: If you post a bug or request a feature in the forum, or on the Google Group\n   15  you will most likely be asked to create a ticket in `GitHub`_ since it is\n   16  simply not feasible to manage such requests from a number of a different\n\n/Users/sopae/Projects/AkinsParker/vendor/swiftmailer/swiftmailer/doc/introduction.rst:\n   74  project, but members of the forum began to adopt it and make use of it.\n   75  \n   76: Very quickly feature requests were coming for the ability to add attachments\n   77  and use SMTP authentication, along with a number of other \"obvious\" missing\n   78: features. Considering the only alternative was PHPMailer it seemed like a good\n   79  time to bring some fresh tools to the table. Chris began working towards a\n   80  more component based, PHP5-like approach unlike the existing single-class,\n   ..\n   85  2005 and 2006, which by then had been broken down into smaller classes\n   86  offering more flexibility and supporting plugins. To this day the Swift Mailer\n   87: team still receive a lot of feature requests from users both on the forum and\n   88  in by email.\n   89  \n   ..\n  100  \n  101  By no means is Swift Mailer ready to call \"finished\". There are still many\n  102: features that can be added to the library along with the constant refactoring\n  103  that happens behind the scenes.\n  104  \n  ...\n  121  ability to send emails.\n  122  \n  123: The component-based structure of the library means that you are free to\n  124  implement it in a number of different ways and that you can pick and choose\n  125  what you want to use.\n  ...\n  130  application.\n  131  \n  132: Embrace the structure of the library and use the components it offers to your\n  133  advantage. Learning what the components do, rather than blindly copying and\n  134  pasting existing code will put you in a great position to build a powerful\n\n/Users/sopae/Projects/AkinsParker/vendor/swiftmailer/swiftmailer/doc/messages.rst:\n   80  Encoders and different Header types to generate the entity.\n   81  \n   82: The Structure of a Message\n   83  ~~~~~~~~~~~~~~~~~~~~~~~~~~\n   84  \n   ..\n  447  .. note::\n  448  \n  449:     You can embed files in two stages if you prefer. Just capture the return\n  450      value of ``embed()`` in a variable and use that as the ``src`` attribute.\n  451  \n  ...\n  523  .. note::\n  524  \n  525:     You can embed files in two stages if you prefer. Just capture the return\n  526      value of ``embed()`` in a variable and use that as the ``src`` attribute.\n  527  \n  ...\n  866  S/MIME can sign and/or encrypt a message using the OpenSSL extension.\n  867  \n  868: When signing a message, the signer creates a signature of the entire content of the message (including attachments).\n  869  \n  870  The certificate and private key must be PEM encoded, and can be either created using for example OpenSSL or\n  871  obtained at an official Certificate Authority (CA).\n  872  \n  873: **The recipient must have the CA certificate in the list of trusted issuers in order to verify the signature.**\n  874  \n  875  **Make sure the certificate supports emailProtection.**\n  ...\n  895      $message->attachSigner($smimeSigner);\n  896  \n  897: By default the signature is added as attachment,\n  898  making the message still readable for mailing agents not supporting signed messages.\n  899  \n\n/Users/sopae/Projects/AkinsParker/vendor/swiftmailer/swiftmailer/doc/overview.rst:\n    2  ================\n    3  \n    4: Most features (and more) of your every day mail client software are provided\n    5  by Swift Mailer, using object-oriented PHP code as the interface.\n    6  \n    .\n   79  \n   80  +---------------------------------+---------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------+\n   81: | Class                           | Features                                                                                    | Pros/cons                                                                                                                                     |\n   82  +=================================+=============================================================================================+===============================================================================================================================================+\n   83  | ``Swift_SmtpTransport``         | Sends messages over SMTP; Supports Authentication; Supports Encryption                      | Very portable; Pleasingly predictable results; Provides good feedback                                                                         |\n   ..\n   96  \n   97  Everything that forms part of a Message is called a MIME Entity. All MIME\n   98: entities in Swift Mailer share a common set of features. There are various\n   99  types of MIME entity that serve different purposes such as Attachments and\n  100  MIME parts.\n\n/Users/sopae/Projects/AkinsParker/vendor/swiftmailer/swiftmailer/doc/plugins.rst:\n  151  The Logger plugin comes in two parts. There's the plugin itself, along with\n  152  one of a number of possible Loggers that you may choose to use. For example,\n  153: the logger may output messages directly in realtime, or it may capture\n  154  messages in an array.\n  155  \n  156: One other notable feature is the way in which the Logger plugin changes\n  157  Exception messages. If Exceptions are being thrown but the error message does\n  158  not provide conclusive information as to the source of the problem (such as an\n\n/Users/sopae/Projects/AkinsParker/vendor/swiftmailer/swiftmailer/lib/mime_types.php:\n   51      'aps' => 'application/postscript',\n   52      'arc' => 'application/x-freearc',\n   53:     'asc' => 'application/pgp-signature',\n   54      'asf' => 'video/x-ms-asf',\n   55      'asm' => 'text/x-asm',\n   ..\n  581      'p7m' => 'application/pkcs7-mime',\n  582      'p7r' => 'application/x-pkcs7-certreqresp',\n  583:     'p7s' => 'application/pkcs7-signature',\n  584      'p8' => 'application/pkcs8',\n  585      'pas' => 'text/x-pascal',\n  ...\n  727      'shf' => 'application/shf+xml',\n  728      'sid' => 'image/x-mrsid-image',\n  729:     'sig' => 'application/pgp-signature',\n  730      'sil' => 'audio/silk',\n  731      'silo' => 'model/mesh',\n  ...\n  752      'spc' => 'application/x-pkcs7-certificates',\n  753      'spf' => 'application/vnd.yamaha.smaf-phrase',\n  754:     'spl' => 'application/x-futuresplash',\n  755      'spot' => 'text/vnd.in3d.spot',\n  756      'spp' => 'application/scvp-vp-response',\n\n/Users/sopae/Projects/AkinsParker/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Message.php:\n   93  \n   94      /**\n   95:      * Attach a new signature handler to the message.\n   96       *\n   97       * @param Swift_Signer $signer\n   ..\n  111  \n  112      /**\n  113:      * Attach a new signature handler to the message.\n  114       *\n  115       * @param Swift_Signer $signer\n  ...\n  190  \n  191      /**\n  192:      * loops through signers and apply the signatures.\n  193       */\n  194      protected function doSign()\n  ...\n  211              $signer->endBody();\n  212  \n  213:             $signer->addSignature($this->getHeaders());\n  214          }\n  215      }\n  216  \n  217      /**\n  218:      * save the message before any signature is applied.\n  219       */\n  220      protected function saveMessage()\n\n/Users/sopae/Projects/AkinsParker/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Signer.php:\n   10  \n   11  /**\n   12:  * Base Class of Signer Infrastructure.\n   13   *\n   14   *\n\n/Users/sopae/Projects/AkinsParker/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Mime/SimpleHeaderFactory.php:\n   92      public function createTextHeader($name, $value = null)\n   93      {\n   94:         $header = new Swift_Mime_Headers_UnstructuredHeader($name, $this->_encoder, $this->_grammar);\n   95          if (isset($value)) {\n   96              $header->setFieldBodyModel($value);\n\n/Users/sopae/Projects/AkinsParker/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Mime/SimpleMessage.php:\n   31              'Return-Path',\n   32              'Received',\n   33:             'DKIM-Signature',\n   34:             'DomainKey-Signature',\n   35              'Sender',\n   36              'Message-ID',\n\n/Users/sopae/Projects/AkinsParker/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Mime/SimpleMimeEntity.php:\n   92          // is $contentType then it should be treated as if it's level is\n   93          // $neededLevel instead.  I tried to write that unambiguously! :-\\\n   94:         // Data Structure:\n   95          // array (\n   96          //   $compoundLevel => array(\n\n/Users/sopae/Projects/AkinsParker/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Mime/Headers/ParameterizedHeader.php:\n   14   * @author Chris Corbyn\n   15   */\n   16: class Swift_Mime_Headers_ParameterizedHeader extends Swift_Mime_Headers_UnstructuredHeader implements Swift_Mime_ParameterizedHeader\n   17  {\n   18      /**\n\n/Users/sopae/Projects/AkinsParker/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Mime/Headers/UnstructuredHeader.php:\n   14   * @author Chris Corbyn\n   15   */\n   16: class Swift_Mime_Headers_UnstructuredHeader extends Swift_Mime_Headers_AbstractHeader\n   17  {\n   18      /**\n\n/Users/sopae/Projects/AkinsParker/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Signers/BodySigner.php:\n   10  \n   11  /**\n   12:  * Body Signer Interface used to apply Body-Based Signature to a message.\n   13   *\n   14   * @author Xavier De Cock <xdecock@gmail.com>\n\n/Users/sopae/Projects/AkinsParker/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Signers/DKIMSigner.php:\n   10  \n   11  /**\n   12:  * DKIM Signer used to apply DKIM Signature to a message.\n   13   *\n   14   * @author Xavier De Cock <xdecock@gmail.com>\n   ..\n   87  \n   88      /**\n   89:      * Embbed bodyLen in signature.\n   90       *\n   91       * @var bool\n   ..\n   94  \n   95      /**\n   96:      * When the signature has been applied (true means time()), false means not embedded.\n   97       *\n   98       * @var mixed\n   99       */\n  100:     protected $_signatureTimestamp = true;\n  101  \n  102      /**\n  103:      * When will the signature expires false means not embedded, if sigTimestamp is auto\n  104       * Expiration is relative, otherwhise it's absolute.\n  105       *\n  106       * @var int\n  107       */\n  108:     protected $_signatureExpiration = false;\n  109  \n  110      /**\n  ...\n  138  \n  139      /**\n  140:      * Stores the signature header.\n  141       *\n  142       * @var Swift_Mime_Headers_ParameterizedHeader\n  ...\n  393  \n  394      /**\n  395:      * Set the signature timestamp.\n  396       *\n  397       * @param timestamp $time\n  ...\n  399       * @return Swift_Signers_DKIMSigner\n  400       */\n  401:     public function setSignatureTimestamp($time)\n  402      {\n  403:         $this->_signatureTimestamp = $time;\n  404  \n  405          return $this;\n  ...\n  407  \n  408      /**\n  409:      * Set the signature expiration timestamp.\n  410       *\n  411       * @param timestamp $time\n  ...\n  413       * @return Swift_Signers_DKIMSigner\n  414       */\n  415:     public function setSignatureExpiration($time)\n  416      {\n  417:         $this->_signatureExpiration = $time;\n  418  \n  419          return $this;\n  ...\n  467      {\n  468          if ($this->_debugHeaders) {\n  469:             return array('DKIM-Signature', 'X-DebugHash');\n  470          } else {\n  471:             return array('DKIM-Signature');\n  472          }\n  473      }\n  ...\n  518  \n  519      /**\n  520:      * Add the signature to the given Headers.\n  521       *\n  522       * @param Swift_Mime_HeaderSet $headers\n  ...\n  524       * @return Swift_Signers_DKIMSigner\n  525       */\n  526:     public function addSignature(Swift_Mime_HeaderSet $headers)\n  527      {\n  528:         // Prepare the DKIM-Signature\n  529          $params = array('v' => '1', 'a' => $this->_hashAlgorithm, 'bh' => base64_encode($this->_bodyHash), 'd' => $this->_domainName, 'h' => implode(': ', $this->_signedHeaders), 'i' => $this->_signerIdentity, 's' => $this->_selector);\n  530          if ($this->_bodyCanon != 'simple') {\n  ...\n  536              $params['l'] = $this->_bodyLen;\n  537          }\n  538:         if ($this->_signatureTimestamp === true) {\n  539              $params['t'] = time();\n  540:             if ($this->_signatureExpiration !== false) {\n  541:                 $params['x'] = $params['t'] + $this->_signatureExpiration;\n  542              }\n  543          } else {\n  544:             if ($this->_signatureTimestamp !== false) {\n  545:                 $params['t'] = $this->_signatureTimestamp;\n  546              }\n  547:             if ($this->_signatureExpiration !== false) {\n  548:                 $params['x'] = $this->_signatureExpiration;\n  549              }\n  550          }\n  ...\n  557          }\n  558          $string = trim($string);\n  559:         $headers->addTextHeader('DKIM-Signature', $string);\n  560:         // Add the last DKIM-Signature\n  561:         $tmp = $headers->getAll('DKIM-Signature');\n  562          $this->_dkimHeader = end($tmp);\n  563          $this->_addHeader(trim($this->_dkimHeader->toString()).\"\\r\\n b=\", true);\n  ...\n  682      private function _getEncryptedHash()\n  683      {\n  684:         $signature = '';\n  685          switch ($this->_hashAlgorithm) {\n  686              case 'rsa-sha1':\n  ...\n  695              throw new Swift_SwiftException('Unable to load DKIM Private Key ['.openssl_error_string().']');\n  696          }\n  697:         if (openssl_sign($this->_headerCanonData, $signature, $pkeyId, $algorithm)) {\n  698:             return $signature;\n  699          }\n  700          throw new Swift_SwiftException('Unable to sign DKIM Hash ['.openssl_error_string().']');\n\n/Users/sopae/Projects/AkinsParker/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Signers/DomainKeySigner.php:\n   10  \n   11  /**\n   12:  * DomainKey Signer used to apply DomainKeys Signature to a message.\n   13   *\n   14   * @author Xavier De Cock <xdecock@gmail.com>\n   ..\n   81  \n   82      /**\n   83:      * Stores the signature header.\n   84       *\n   85       * @var Swift_Mime_Headers_ParameterizedHeader\n   ..\n  336      {\n  337          if ($this->_debugHeaders) {\n  338:             return array('DomainKey-Signature', 'X-DebugHash');\n  339          } else {\n  340:             return array('DomainKey-Signature');\n  341          }\n  342      }\n  ...\n  389  \n  390      /**\n  391:      * Add the signature to the given Headers.\n  392       *\n  393       * @param Swift_Mime_HeaderSet $headers\n  ...\n  395       * @return Swift_Signers_DomainKeySigner\n  396       */\n  397:     public function addSignature(Swift_Mime_HeaderSet $headers)\n  398      {\n  399:         // Prepare the DomainKey-Signature Header\n  400          $params = array('a' => $this->_hashAlgorithm, 'b' => chunk_split(base64_encode($this->_getEncryptedHash()), 73, ' '), 'c' => $this->_canon, 'd' => $this->_domainName, 'h' => implode(': ', $this->_signedHeaders), 'q' => 'dns', 's' => $this->_selector);\n  401          $string = '';\n  ...\n  404          }\n  405          $string = trim($string);\n  406:         $headers->addTextHeader('DomainKey-Signature', $string);\n  407  \n  408          return $this;\n  ...\n  513      private function _getEncryptedHash()\n  514      {\n  515:         $signature = '';\n  516          $pkeyId = openssl_get_privatekey($this->_privateKey);\n  517          if (!$pkeyId) {\n  518              throw new Swift_SwiftException('Unable to load DomainKey Private Key ['.openssl_error_string().']');\n  519          }\n  520:         if (openssl_sign($this->_canonData, $signature, $pkeyId, OPENSSL_ALGO_SHA1)) {\n  521:             return $signature;\n  522          }\n  523          throw new Swift_SwiftException('Unable to sign DomainKey Hash  ['.openssl_error_string().']');\n\n/Users/sopae/Projects/AkinsParker/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Signers/HeaderSigner.php:\n   10  \n   11  /**\n   12:  * Header Signer Interface used to apply Header-Based Signature to a message.\n   13   *\n   14   * @author Xavier De Cock <xdecock@gmail.com>\n   ..\n   55       * @return Swift_Signers_HeaderSigner\n   56       */\n   57:     public function addSignature(Swift_Mime_HeaderSet $headers);\n   58  \n   59      /**\n\n/Users/sopae/Projects/AkinsParker/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Signers/OpenDKIMSigner.php:\n   10  \n   11  /**\n   12:  * DKIM Signer used to apply DKIM Signature to a message\n   13   * Takes advantage of pecl extension.\n   14   *\n   ..\n   43      }\n   44  \n   45:     public function addSignature(Swift_Mime_HeaderSet $headers)\n   46      {\n   47:         $header = new Swift_Mime_Headers_OpenDKIMHeader('DKIM-Signature');\n   48:         $headerVal = $this->_dkimHandler->getSignatureHeader();\n   49          if (!$headerVal) {\n   50              throw new Swift_SwiftException('OpenDKIM Error: '.$this->_dkimHandler->getError());\n   ..\n   66          $headerCanon = ($this->_headerCanon == 'simple') ? OpenDKIMSign::CANON_SIMPLE : OpenDKIMSign::CANON_RELAXED;\n   67          $this->_dkimHandler = new OpenDKIMSign($this->_privateKey, $this->_selector, $this->_domainName, $headerCanon, $bodyCanon, $hash, $bodyLen);\n   68:         // Hardcode signature Margin for now\n   69          $this->_dkimHandler->setMargin(78);\n   70  \n   71:         if (!is_numeric($this->_signatureTimestamp)) {\n   72              OpenDKIM::setOption(OpenDKIM::OPTS_FIXEDTIME, time());\n   73          } else {\n   74:             if (!OpenDKIM::setOption(OpenDKIM::OPTS_FIXEDTIME, $this->_signatureTimestamp)) {\n   75:                 throw new Swift_SwiftException('Unable to force signature timestamp ['.openssl_error_string().']');\n   76              }\n   77          }\n   ..\n  129  \n  130      /**\n  131:      * Set the signature timestamp.\n  132       *\n  133       * @param timestamp $time\n  ...\n  135       * @return Swift_Signers_DKIMSigner\n  136       */\n  137:     public function setSignatureTimestamp($time)\n  138      {\n  139:         $this->_signatureTimestamp = $time;\n  140  \n  141          return $this;\n  ...\n  143  \n  144      /**\n  145:      * Set the signature expiration timestamp.\n  146       *\n  147       * @param timestamp $time\n  ...\n  149       * @return Swift_Signers_DKIMSigner\n  150       */\n  151:     public function setSignatureExpiration($time)\n  152      {\n  153:         $this->_signatureExpiration = $time;\n  154  \n  155          return $this;\n\n/Users/sopae/Projects/AkinsParker/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Signers/SMimeSigner.php:\n   10  \n   11  /**\n   12:  * MIME Message Signer used to apply S/MIME Signature/Encryption to a message.\n   13   *\n   14   *\n\n/Users/sopae/Projects/AkinsParker/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Transport/MailTransport.php:\n   13   *\n   14   * It is advised that users do not use this transport if at all possible\n   15:  * since a number of plugin features cannot be used in conjunction with this\n   16   * transport due to the internal interface in PHP itself.\n   17   *\n\n/Users/sopae/Projects/AkinsParker/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Transport/Esmtp/Auth/NTLMAuthenticator.php:\n  655          $message = bin2hex($message);\n  656          $messageId = substr($message, 16, 8);\n  657:         echo substr($message, 0, 16).\" NTLMSSP Signature<br />\\n\";\n  658          echo $messageId.\" Type Indicator<br />\\n\";\n  659  \n\n/Users/sopae/Projects/AkinsParker/vendor/swiftmailer/swiftmailer/tests/bug/Swift/Bug111Test.php:\n    3  class Swift_Bug111Test extends \\PHPUnit_Framework_TestCase\n    4  {\n    5:     public function testUnstructuredHeaderSlashesShouldNotBeEscaped()\n    6      {\n    7          $complicated_header = array(\n    .\n   37          $header = $headers->get('X-SMTPAPI');\n   38  \n   39:         $this->assertEquals('Swift_Mime_Headers_UnstructuredHeader', get_class($header));\n   40          $this->assertEquals($json, $header->getFieldBody());\n   41      }\n\n/Users/sopae/Projects/AkinsParker/vendor/swiftmailer/swiftmailer/tests/bug/Swift/Bug38Test.php:\n   15      }\n   16  \n   17:     public function testWritingMessageToByteStreamProducesCorrectStructure()\n   18      {\n   19          $message = new Swift_Message();\n   ..\n   69      }\n   70  \n   71:     public function testWritingMessageToByteStreamTwiceProducesCorrectStructure()\n   72      {\n   73          $message = new Swift_Message();\n\n/Users/sopae/Projects/AkinsParker/vendor/swiftmailer/swiftmailer/tests/fixtures/EsmtpTransportFixture.php:\n    1  <?php\n    2  \n    3: class EsmtpTransportFixture extends Swift_Transport_EsmtpTransport\n    4  {\n    5      /** This is so Mockery doesn't throw a fit. */\n\n/Users/sopae/Projects/AkinsParker/vendor/swiftmailer/swiftmailer/tests/fixtures/MimeEntityFixture.php:\n    1  <?php\n    2  \n    3: class MimeEntityFixture implements Swift_Mime_MimeEntity\n    4  {\n    5      private $level;\n\n/Users/sopae/Projects/AkinsParker/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Mime/AbstractMimeEntityTest.php:\n    1  <?php\n    2  \n    3: require_once dirname(dirname(dirname(__DIR__))).'/fixtures/MimeEntityFixture.php';\n    4  \n    5  abstract class Swift_Mime_AbstractMimeEntityTest extends \\SwiftMailerTestCase\n    .\n  196          The ability to associate some descriptive information with a given\n  197          body is often desirable.  For example, it may be useful to mark an\n  198:         \"image\" body as \"a picture of the Space Shuttle Endeavor.\"  Such text\n  199          may be placed in the Content-Description header field.  This header\n  200          field is always optional.\n  ...\n  538          $headers = $this->_createHeaderSet(array(), false);\n  539  \n  540:         $child1 = new MimeEntityFixture(Swift_Mime_MimeEntity::LEVEL_ALTERNATIVE,\n  541              \"Content-Type: text/plain\\r\\n\".\n  542              \"\\r\\n\".\n  ...\n  544              );\n  545  \n  546:         $child2 = new MimeEntityFixture(Swift_Mime_MimeEntity::LEVEL_ALTERNATIVE,\n  547              \"Content-Type: text/html\\r\\n\".\n  548              \"\\r\\n\".\n  ...\n  703      public function testOrderingTextBeforeHtml()\n  704      {\n  705:         $htmlChild = new MimeEntityFixture(Swift_Mime_MimeEntity::LEVEL_ALTERNATIVE,\n  706              \"Content-Type: text/html\\r\\n\".\n  707              \"\\r\\n\".\n  ...\n  709              'text/html'\n  710              );\n  711:         $textChild = new MimeEntityFixture(Swift_Mime_MimeEntity::LEVEL_ALTERNATIVE,\n  712              \"Content-Type: text/plain\\r\\n\".\n  713              \"\\r\\n\".\n\n/Users/sopae/Projects/AkinsParker/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Mime/SimpleHeaderFactoryTest.php:\n   51      {\n   52          $header = $this->_factory->createTextHeader('X-Foo');\n   53:         $this->assertInstanceof('Swift_Mime_Headers_UnstructuredHeader', $header);\n   54      }\n   55  \n\n/Users/sopae/Projects/AkinsParker/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Mime/Headers/ParameterizedHeaderTest.php:\n   89          Note that quotes around parameter values are part of the value\n   90          syntax; they are NOT part of the value itself.  Furthermore, it is\n   91:         explicitly permitted to have a mixture of quoted and unquoted\n   92          continuation fields.\n   93          */\n   ..\n  185  \n  186       (3)   A value presented using multiple continuations may\n  187:            contain a mixture of encoded and unencoded segments.\n  188  \n  189       (4)   The first segment of a continuation MUST be encoded if\n  ...\n  297  \n  298          RFC 2047 provides support for non-US-ASCII character sets in RFC 822\n  299:         message header comments, phrases, and any unstructured text field.\n  300          This is done by defining an encoded word construct which can appear\n  301          in any of these places.  Given that these are fields intended for\n\n/Users/sopae/Projects/AkinsParker/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Mime/Headers/UnstructuredHeaderTest.php:\n    1  <?php\n    2  \n    3: class Swift_Mime_Headers_UnstructuredHeaderTest extends \\SwiftMailerTestCase\n    4  {\n    5      private $_charset = 'utf-8';\n    .\n   24      }\n   25  \n   26:     public function testBasicStructureIsKeyValuePair()\n   27      {\n   28          /* -- RFC 2822, 2.2\n   ..\n   84      }\n   85  \n   86:     public function testEncodedWordsFollowGeneralStructure()\n   87      {\n   88          /* -- RFC 2047, 1.\n   ..\n  293  \n  294          RFC 2047 provides support for non-US-ASCII character sets in RFC 822\n  295:         message header comments, phrases, and any unstructured text field.\n  296          This is done by defining an encoded word construct which can appear\n  297          in any of these places.  Given that these are fields intended for\n  ...\n  338      private function _getHeader($name, $encoder)\n  339      {\n  340:         $header = new Swift_Mime_Headers_UnstructuredHeader($name, $encoder, new Swift_Mime_Grammar());\n  341          $header->setCharset($this->_charset);\n  342  \n\n/Users/sopae/Projects/AkinsParker/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Signers/DKIMSignerTest.php:\n   27          $signer->endBody();\n   28          // Signing\n   29:         $signer->addSignature($headers);\n   30      }\n   31  \n   ..\n   36          $messageContent = 'Hello World';\n   37          $signer = new Swift_Signers_DKIMSigner(file_get_contents(dirname(dirname(dirname(__DIR__))).'/_samples/dkim/dkim.test.priv'), 'dummy.nxdomain.be', 'dummySelector');\n   38:         $signer->setSignatureTimestamp('1299879181');\n   39          $altered = $signer->getAlteredHeaders();\n   40:         $this->assertEquals(array('DKIM-Signature'), $altered);\n   41          $signer->reset();\n   42          $signer->setHeaders($headerSet);\n   43:         $this->assertFalse($headerSet->has('DKIM-Signature'));\n   44          $signer->startBody();\n   45          $signer->write($messageContent);\n   46          $signer->endBody();\n   47:         $signer->addSignature($headerSet);\n   48:         $this->assertTrue($headerSet->has('DKIM-Signature'));\n   49:         $dkim = $headerSet->getAll('DKIM-Signature');\n   50          $sig = reset($dkim);\n   51          $this->assertEquals($sig->getValue(), 'v=1; a=rsa-sha1; bh=wlbYcY9O9OPInGJ4D0E/rGsvMLE=; d=dummy.nxdomain.be; h=; i=@dummy.nxdomain.be; s=dummySelector; t=1299879181; b=RMSNelzM2O5MAAnMjT3G3/VF36S3DGJXoPCXR001F1WDReu0prGphWjuzK/m6V1pwqQL8cCNg Hi74mTx2bvyAvmkjvQtJf1VMUOCc9WHGcm1Yec66I3ZWoNMGSWZ1EKAm2CtTzyG0IFw4ml9DI wSkyAFxlgicckDD6FibhqwX4w=');\n   ..\n   59          $signer = new Swift_Signers_DKIMSigner(file_get_contents(dirname(dirname(dirname(__DIR__))).'/_samples/dkim/dkim.test.priv'), 'dummy.nxdomain.be', 'dummySelector');\n   60          $signer->setHashAlgorithm('rsa-sha256');\n   61:         $signer->setSignatureTimestamp('1299879181');\n   62          $altered = $signer->getAlteredHeaders();\n   63:         $this->assertEquals(array('DKIM-Signature'), $altered);\n   64          $signer->reset();\n   65          $signer->setHeaders($headerSet);\n   66:         $this->assertFalse($headerSet->has('DKIM-Signature'));\n   67          $signer->startBody();\n   68          $signer->write($messageContent);\n   69          $signer->endBody();\n   70:         $signer->addSignature($headerSet);\n   71:         $this->assertTrue($headerSet->has('DKIM-Signature'));\n   72:         $dkim = $headerSet->getAll('DKIM-Signature');\n   73          $sig = reset($dkim);\n   74          $this->assertEquals($sig->getValue(), 'v=1; a=rsa-sha256; bh=f+W+hu8dIhf2VAni89o8lF6WKTXi7nViA4RrMdpD5/U=; d=dummy.nxdomain.be; h=; i=@dummy.nxdomain.be; s=dummySelector; t=1299879181; b=jqPmieHzF5vR9F4mXCAkowuphpO4iJ8IAVuioh1BFZ3VITXZj5jlOFxULJMBiiApm2keJirnh u4mzogj444QkpT3lJg8/TBGAYQPdcvkG3KC0jdyN6QpSgpITBJG2BwWa+keXsv2bkQgLRAzNx qRhP45vpHCKun0Tg9LrwW/KCg=');\n   ..\n   82          $signer = new Swift_Signers_DKIMSigner(file_get_contents(dirname(dirname(dirname(__DIR__))).'/_samples/dkim/dkim.test.priv'), 'dummy.nxdomain.be', 'dummySelector');\n   83          $signer->setHashAlgorithm('rsa-sha256');\n   84:         $signer->setSignatureTimestamp('1299879181');\n   85          $signer->setBodyCanon('relaxed');\n   86          $signer->setHeaderCanon('relaxed');\n   87          $altered = $signer->getAlteredHeaders();\n   88:         $this->assertEquals(array('DKIM-Signature'), $altered);\n   89          $signer->reset();\n   90          $signer->setHeaders($headerSet);\n   91:         $this->assertFalse($headerSet->has('DKIM-Signature'));\n   92          $signer->startBody();\n   93          $signer->write($messageContent);\n   94          $signer->endBody();\n   95:         $signer->addSignature($headerSet);\n   96:         $this->assertTrue($headerSet->has('DKIM-Signature'));\n   97:         $dkim = $headerSet->getAll('DKIM-Signature');\n   98          $sig = reset($dkim);\n   99          $this->assertEquals($sig->getValue(), 'v=1; a=rsa-sha256; bh=f+W+hu8dIhf2VAni89o8lF6WKTXi7nViA4RrMdpD5/U=; d=dummy.nxdomain.be; h=; i=@dummy.nxdomain.be; s=dummySelector; c=relaxed/relaxed; t=1299879181; b=gzOI+PX6HpZKQFzwwmxzcVJsyirdLXOS+4pgfCpVHQIdqYusKLrhlLeFBTNoz75HrhNvGH6T0 Rt3w5aTqkrWfUuAEYt0Ns14GowLM7JojaFN+pZ4eYnRB3CBBgW6fee4NEMD5WPca3uS09tr1E 10RYh9ILlRtl+84sovhx5id3Y=');\n  ...\n  107          $signer = new Swift_Signers_DKIMSigner(file_get_contents(dirname(dirname(dirname(__DIR__))).'/_samples/dkim/dkim.test.priv'), 'dummy.nxdomain.be', 'dummySelector');\n  108          $signer->setHashAlgorithm('rsa-sha256');\n  109:         $signer->setSignatureTimestamp('1299879181');\n  110          $signer->setHeaderCanon('relaxed');\n  111          $altered = $signer->getAlteredHeaders();\n  112:         $this->assertEquals(array('DKIM-Signature'), $altered);\n  113          $signer->reset();\n  114          $signer->setHeaders($headerSet);\n  115:         $this->assertFalse($headerSet->has('DKIM-Signature'));\n  116          $signer->startBody();\n  117          $signer->write($messageContent);\n  118          $signer->endBody();\n  119:         $signer->addSignature($headerSet);\n  120:         $this->assertTrue($headerSet->has('DKIM-Signature'));\n  121:         $dkim = $headerSet->getAll('DKIM-Signature');\n  122          $sig = reset($dkim);\n  123          $this->assertEquals($sig->getValue(), 'v=1; a=rsa-sha256; bh=f+W+hu8dIhf2VAni89o8lF6WKTXi7nViA4RrMdpD5/U=; d=dummy.nxdomain.be; h=; i=@dummy.nxdomain.be; s=dummySelector; c=relaxed; t=1299879181; b=dLPJNec5v81oelyzGOY0qPqTlGnQeNfUNBOrV/JKbStr3NqWGI9jH4JAe2YvO2V32lfPNoby1 4MMzZ6EPkaZkZDDSPa+53YbCPQAlqiD9QZZIUe2UNM33HN8yAMgiWEF5aP7MbQnxeVZMfVLEl 9S8qOImu+K5JZqhQQTL0dgLwA=');\n  ...\n  131          $signer = new Swift_Signers_DKIMSigner(file_get_contents(dirname(dirname(dirname(__DIR__))).'/_samples/dkim/dkim.test.priv'), 'dummy.nxdomain.be', 'dummySelector');\n  132          $signer->setHashAlgorithm('rsa-sha256');\n  133:         $signer->setSignatureTimestamp('1299879181');\n  134          $signer->setBodyCanon('relaxed');\n  135          $altered = $signer->getAlteredHeaders();\n  136:         $this->assertEquals(array('DKIM-Signature'), $altered);\n  137          $signer->reset();\n  138          $signer->setHeaders($headerSet);\n  139:         $this->assertFalse($headerSet->has('DKIM-Signature'));\n  140          $signer->startBody();\n  141          $signer->write($messageContent);\n  142          $signer->endBody();\n  143:         $signer->addSignature($headerSet);\n  144:         $this->assertTrue($headerSet->has('DKIM-Signature'));\n  145:         $dkim = $headerSet->getAll('DKIM-Signature');\n  146          $sig = reset($dkim);\n  147          $this->assertEquals($sig->getValue(), 'v=1; a=rsa-sha256; bh=f+W+hu8dIhf2VAni89o8lF6WKTXi7nViA4RrMdpD5/U=; d=dummy.nxdomain.be; h=; i=@dummy.nxdomain.be; s=dummySelector; c=simple/relaxed; t=1299879181; b=M5eomH/zamyzix9kOes+6YLzQZxuJdBP4x3nP9zF2N26eMLG2/cBKbnNyqiOTDhJdYfWPbLIa 1CWnjST0j5p4CpeOkGYuiE+M4TWEZwhRmRWootlPO3Ii6XpbBJKFk1o9zviS7OmXblUUE4aqb yRSIMDhtLdCK5GlaCneFLN7RQ=');\n  ...\n  216          $headers->shouldReceive('addTextHeader')\n  217                  ->zeroOrMoreTimes()\n  218:                 ->with('DKIM-Signature', \\Mockery::any())\n  219                  ->andReturn(true);\n  220          $headers->shouldReceive('getAll')\n  221                  ->zeroOrMoreTimes()\n  222:                 ->with('DKIM-Signature')\n  223:                 ->andReturn(array($headerFactory->createTextHeader('DKIM-Signature', 'Foo Bar Text Message')));\n  224  \n  225          return $headers;\n\n/Users/sopae/Projects/AkinsParker/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Signers/SMimeSignerTest.php:\n   59  Here is the message itself\n   60  --$boundary\n   61: Content-Type: application/(x\\-)?pkcs7-signature; name=\"smime\\.p7s\"\n   62  Content-Transfer-Encoding: base64\n   63  Content-Disposition: attachment; filename=\"smime\\.p7s\"\n   ..\n  102  Here is the message itself\n  103  --$boundary\n  104: Content-Type: application/(x\\-)?pkcs7-signature; name=\"smime\\.p7s\"\n  105  Content-Transfer-Encoding: base64\n  106  Content-Disposition: attachment; filename=\"smime\\.p7s\"\n  ...\n  200  \n  201  --$boundary\n  202: Content-Type: application/(x\\-)?pkcs7-signature; name=\"smime\\\\.p7s\"\n  203  Content-Transfer-Encoding: base64\n  204  Content-Disposition: attachment; filename=\"smime\\\\.p7s\"\n  ...\n  347  Here is the message itself\n  348  --$boundary\n  349: Content-Type: application/(x\\-)?pkcs7-signature; name=\"smime\\.p7s\"\n  350  Content-Transfer-Encoding: base64\n  351  Content-Disposition: attachment; filename=\"smime\\.p7s\"\n  ...\n  402  \n  403  )--$boundary\n  404: Content-Type: application/(x\\-)?pkcs7-signature; name=\"smime\\.p7s\"\n  405  Content-Transfer-Encoding: base64\n  406  Content-Disposition: attachment; filename=\"smime\\.p7s\"\n\n/Users/sopae/Projects/AkinsParker/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Transport/AbstractSmtpEventSupportTest.php:\n   80      }\n   81  \n   82:     public function testSendEventCapturesFailures()\n   83      {\n   84          $buf = $this->_getBuffer();\n\n/Users/sopae/Projects/AkinsParker/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Transport/AbstractSmtpTest.php:\n 1007          channel until it sends a QUIT command and SHOULD wait until it\n 1008          receives the reply (even if there was an error response to a previous\n 1009:         command).  If the connection is closed prematurely due to violations\n 1010          of the above or system or network failure, the server MUST cancel any\n 1011          pending transaction, but not undo any previously completed\n\n/Users/sopae/Projects/AkinsParker/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Transport/EsmtpTransport/ExtensionSupportTest.php:\n    2  \n    3  require_once dirname(__DIR__).'/EsmtpTransportTest.php';\n    4: require_once dirname(dirname(dirname(dirname(__DIR__)))).'/fixtures/EsmtpTransportFixture.php';\n    5  \n    6  interface Swift_Transport_EsmtpHandlerMixin extends Swift_Transport_EsmtpHandler\n    .\n  143          $buf = $this->_getBuffer();\n  144          $dispatcher = $this->_createEventDispatcher();\n  145:         $smtp = new EsmtpTransportFixture($buf, array(), $dispatcher);\n  146          $ext1 = $this->getMockery('Swift_Transport_EsmtpHandler')->shouldIgnoreMissing();\n  147          $ext2 = $this->getMockery('Swift_Transport_EsmtpHandler')->shouldIgnoreMissing();\n  ...\n  229          $buf = $this->_getBuffer();\n  230          $dispatcher = $this->_createEventDispatcher();\n  231:         $smtp = new EsmtpTransportFixture($buf, array(), $dispatcher);\n  232          $ext1 = $this->getMockery('Swift_Transport_EsmtpHandler')->shouldIgnoreMissing();\n  233          $ext2 = $this->getMockery('Swift_Transport_EsmtpHandler')->shouldIgnoreMissing();\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/config/README.md:\n    2  ================\n    3  \n    4: Config provides the infrastructure for loading configurations from different\n    5  data sources and optionally monitoring these data sources for changes. There\n    6  are additional tools for validating, normalizing and handling of defaults that\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/config/Tests/FileLocatorTest.php:\n   43      public function testLocate()\n   44      {\n   45:         $loader = new FileLocator(__DIR__.'/Fixtures');\n   46  \n   47          $this->assertEquals(\n   ..\n   52  \n   53          $this->assertEquals(\n   54:             __DIR__.'/Fixtures'.DIRECTORY_SEPARATOR.'foo.xml',\n   55              $loader->locate('foo.xml', __DIR__),\n   56              '->locate() returns the absolute filename if the file exists in one of the paths given in the constructor'\n   ..\n   58  \n   59          $this->assertEquals(\n   60:             __DIR__.'/Fixtures'.DIRECTORY_SEPARATOR.'foo.xml',\n   61:             $loader->locate(__DIR__.'/Fixtures'.DIRECTORY_SEPARATOR.'foo.xml', __DIR__),\n   62              '->locate() returns the absolute filename if the file exists in one of the paths given in the constructor'\n   63          );\n   64  \n   65:         $loader = new FileLocator(array(__DIR__.'/Fixtures', __DIR__.'/Fixtures/Again'));\n   66  \n   67          $this->assertEquals(\n   68:             array(__DIR__.'/Fixtures'.DIRECTORY_SEPARATOR.'foo.xml', __DIR__.'/Fixtures/Again'.DIRECTORY_SEPARATOR.'foo.xml'),\n   69              $loader->locate('foo.xml', __DIR__, false),\n   70              '->locate() returns an array of absolute filenames'\n   ..\n   72  \n   73          $this->assertEquals(\n   74:             array(__DIR__.'/Fixtures'.DIRECTORY_SEPARATOR.'foo.xml', __DIR__.'/Fixtures/Again'.DIRECTORY_SEPARATOR.'foo.xml'),\n   75:             $loader->locate('foo.xml', __DIR__.'/Fixtures', false),\n   76              '->locate() returns an array of absolute filenames'\n   77          );\n   78  \n   79:         $loader = new FileLocator(__DIR__.'/Fixtures/Again');\n   80  \n   81          $this->assertEquals(\n   82:             array(__DIR__.'/Fixtures'.DIRECTORY_SEPARATOR.'foo.xml', __DIR__.'/Fixtures/Again'.DIRECTORY_SEPARATOR.'foo.xml'),\n   83:             $loader->locate('foo.xml', __DIR__.'/Fixtures', false),\n   84              '->locate() returns an array of absolute filenames'\n   85          );\n   ..\n   92      public function testLocateThrowsAnExceptionIfTheFileDoesNotExists()\n   93      {\n   94:         $loader = new FileLocator(array(__DIR__.'/Fixtures'));\n   95  \n   96          $loader->locate('foobar.xml', __DIR__);\n   ..\n  102      public function testLocateThrowsAnExceptionIfTheFileDoesNotExistsInAbsolutePath()\n  103      {\n  104:         $loader = new FileLocator(array(__DIR__.'/Fixtures'));\n  105  \n  106:         $loader->locate(__DIR__.'/Fixtures/foobar.xml', __DIR__);\n  107      }\n  108  \n  ...\n  113      public function testLocateEmpty()\n  114      {\n  115:         $loader = new FileLocator(array(__DIR__.'/Fixtures'));\n  116  \n  117          $loader->locate(null, __DIR__);\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/config/Tests/Definition/Builder/ArrayNodeDefinitionTest.php:\n  167  \n  168      /**\n  169:      * @dataProvider getEnableableNodeFixtures\n  170       */\n  171      public function testTrueEnableEnabledNode($expected, $config, $message)\n  ...\n  186      }\n  187  \n  188:     public function getEnableableNodeFixtures()\n  189      {\n  190          return array(\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/config/Tests/Definition/Builder/TreeBuilderTest.php:\n   15  use Symfony\\Component\\Config\\Definition\\Builder\\TreeBuilder;\n   16  \n   17: require __DIR__.'/../../Fixtures/Builder/NodeBuilder.php';\n   18: require __DIR__.'/../../Fixtures/Builder/BarNodeDefinition.php';\n   19: require __DIR__.'/../../Fixtures/Builder/VariableNodeDefinition.php';\n   20  \n   21  class TreeBuilderTest extends \\PHPUnit_Framework_TestCase\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/config/Tests/Definition/Dumper/XmlReferenceDumperTest.php:\n   13  \n   14  use Symfony\\Component\\Config\\Definition\\Dumper\\XmlReferenceDumper;\n   15: use Symfony\\Component\\Config\\Tests\\Fixtures\\Configuration\\ExampleConfiguration;\n   16  \n   17  class XmlReferenceDumperTest extends \\PHPUnit_Framework_TestCase\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/config/Tests/Definition/Dumper/YamlReferenceDumperTest.php:\n   13  \n   14  use Symfony\\Component\\Config\\Definition\\Dumper\\YamlReferenceDumper;\n   15: use Symfony\\Component\\Config\\Tests\\Fixtures\\Configuration\\ExampleConfiguration;\n   16  \n   17  class YamlReferenceDumperTest extends \\PHPUnit_Framework_TestCase\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/config/Tests/Fixtures/Configuration/ExampleConfiguration.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\Config\\Tests\\Fixtures\\Configuration;\n   13  \n   14  use Symfony\\Component\\Config\\Definition\\Builder\\TreeBuilder;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/config/Tests/Util/XmlUtilsTest.php:\n   18      public function testLoadFile()\n   19      {\n   20:         $fixtures = __DIR__.'/../Fixtures/Util/';\n   21  \n   22          try {\n   23:             XmlUtils::loadFile($fixtures.'invalid.xml');\n   24              $this->fail();\n   25          } catch (\\InvalidArgumentException $e) {\n   ..\n   28  \n   29          try {\n   30:             XmlUtils::loadFile($fixtures.'document_type.xml');\n   31              $this->fail();\n   32          } catch (\\InvalidArgumentException $e) {\n   ..\n   35  \n   36          try {\n   37:             XmlUtils::loadFile($fixtures.'invalid_schema.xml', $fixtures.'schema.xsd');\n   38              $this->fail();\n   39          } catch (\\InvalidArgumentException $e) {\n   ..\n   42  \n   43          try {\n   44:             XmlUtils::loadFile($fixtures.'invalid_schema.xml', 'invalid_callback_or_file');\n   45              $this->fail();\n   46          } catch (\\InvalidArgumentException $e) {\n   ..\n   52  \n   53          try {\n   54:             XmlUtils::loadFile($fixtures.'valid.xml', array($mock, 'validate'));\n   55              $this->fail();\n   56          } catch (\\InvalidArgumentException $e) {\n   ..\n   58          }\n   59  \n   60:         $this->assertInstanceOf('DOMDocument', XmlUtils::loadFile($fixtures.'valid.xml', array($mock, 'validate')));\n   61          $this->assertSame(array(), libxml_get_errors());\n   62      }\n   ..\n   67  \n   68          $this->assertSame(array(), libxml_get_errors());\n   69:         $this->assertInstanceOf('DOMDocument', XmlUtils::loadFile(__DIR__.'/../Fixtures/Util/invalid_schema.xml'));\n   70          $this->assertSame(array(), libxml_get_errors());\n   71      }\n   ..\n  147      public function testLoadEmptyXmlFile()\n  148      {\n  149:         $file = __DIR__.'/../Fixtures/foo.xml';\n  150          $this->setExpectedException('InvalidArgumentException', 'File '.$file.' does not contain valid XML, it is empty.');\n  151          XmlUtils::loadFile($file);\n  ...\n  162          });\n  163  \n  164:         $file = __DIR__.'/../Fixtures/foo.xml';\n  165          try {\n  166              try {\n  ...\n  188  \n  189          // should not throw an exception\n  190:         XmlUtils::loadFile(__DIR__.'/../Fixtures/Util/valid.xml', __DIR__.'/../Fixtures/Util/schema.xsd');\n  191      }\n  192  }\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/css-selector/Tests/XPath/TranslatorTest.php:\n   35      {\n   36          $translator = new Translator();\n   37:         $document = new \\SimpleXMLElement(file_get_contents(__DIR__.'/Fixtures/lang.xml'));\n   38          $elements = $document->xpath($translator->cssToXPath($css));\n   39          $this->assertEquals(count($elementsId), count($elements));\n   ..\n   51          $document->strictErrorChecking = false;\n   52          $internalErrors = libxml_use_internal_errors(true);\n   53:         $document->loadHTMLFile(__DIR__.'/Fixtures/ids.html');\n   54          $document = simplexml_import_dom($document);\n   55          $elements = $document->xpath($translator->cssToXPath($css));\n   ..\n   71          $document = new \\DOMDocument();\n   72          $document->strictErrorChecking = false;\n   73:         $document->loadHTMLFile(__DIR__.'/Fixtures/shakespear.html');\n   74          $document = simplexml_import_dom($document);\n   75          $bodies = $document->xpath('//body');\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/debug/ErrorHandler.php:\n  363  \n  364          if (PHP_VERSION_ID < 50400 && isset($context['GLOBALS']) && ($this->scopedErrors & $type)) {\n  365:             $e = $context;                  // Whatever the signature of the method,\n  366              unset($e['GLOBALS'], $context); // $context is always a reference in 5.3\n  367              $context = $e;\n  ...\n  577       * we plug an error handler that only stacks errors for later.\n  578       *\n  579:      * The most important feature of this is to prevent\n  580       * autoloading until unstackErrors() is called.\n  581       */\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/debug/README.md:\n   31  from the Symfony ClassLoader component when available.\n   32  \n   33: This component can optionally take advantage of the features of the HttpKernel\n   34  and HttpFoundation components.\n   35  \n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/debug/Resources/ext/README.md:\n    7  -------------------\n    8  \n    9: - exposes zval_hash/refcounts, allowing e.g. efficient exploration of arbitrary structures in PHP,\n   10  - does work with references, preventing memory copying.\n   11  \n   ..\n   18  {\n   19  \n   20:     // $options is currently not used, but could be in future version.\n   21  \n   22      if (!array_key_exists($key, $array)) {\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/debug/Tests/DebugClassLoaderTest.php:\n  141      public function testFileCaseMismatch()\n  142      {\n  143:         if (!file_exists(__DIR__.'/Fixtures/CaseMismatch.php')) {\n  144              $this->markTestSkipped('Can only be run on case insensitive filesystems');\n  145          }\n  146  \n  147:         class_exists(__NAMESPACE__.'\\Fixtures\\CaseMismatch', true);\n  148      }\n  149  \n  ...\n  153      public function testPsr4CaseMismatch()\n  154      {\n  155:         class_exists(__NAMESPACE__.'\\Fixtures\\Psr4CaseMismatch', true);\n  156      }\n  157  \n  158      public function testNotPsr0()\n  159      {\n  160:         $this->assertTrue(class_exists(__NAMESPACE__.'\\Fixtures\\NotPSR0', true));\n  161      }\n  162  \n  163      public function testNotPsr0Bis()\n  164      {\n  165:         $this->assertTrue(class_exists(__NAMESPACE__.'\\Fixtures\\NotPSR0bis', true));\n  166      }\n  167  \n  168      public function testClassAlias()\n  169      {\n  170:         $this->assertTrue(class_exists(__NAMESPACE__.'\\Fixtures\\ClassAlias', true));\n  171      }\n  172  \n  ...\n  190          $xError = array(\n  191              'type' => E_USER_DEPRECATED,\n  192:             'message' => 'The Test\\Symfony\\Component\\Debug\\Tests\\\\'.$class.' class '.$type.' Symfony\\Component\\Debug\\Tests\\Fixtures\\\\'.$super.' that is deprecated but this is a test deprecation notice.',\n  193          );\n  194  \n  ...\n  210          trigger_error('', E_USER_NOTICE);\n  211  \n  212:         class_exists('Symfony\\Bridge\\Debug\\Tests\\Fixtures\\ExtendsDeprecatedParent', true);\n  213  \n  214          error_reporting($e);\n  ...\n  261      public function getClassMap()\n  262      {\n  263:         return array(__NAMESPACE__.'\\Fixtures\\NotPSR0bis' => __DIR__.'/Fixtures/notPsr0Bis.php');\n  264      }\n  265  \n  266      public function findFile($class)\n  267      {\n  268:         $fixtureDir = __DIR__.DIRECTORY_SEPARATOR.'Fixtures'.DIRECTORY_SEPARATOR;\n  269  \n  270          if (__NAMESPACE__.'\\TestingUnsilencing' === $class) {\n  ...\n  274          } elseif (__NAMESPACE__.'\\TestingCaseMismatch' === $class) {\n  275              eval('namespace '.__NAMESPACE__.'; class TestingCaseMisMatch {}');\n  276:         } elseif (__NAMESPACE__.'\\Fixtures\\CaseMismatch' === $class) {\n  277:             return $fixtureDir.'CaseMismatch.php';\n  278:         } elseif (__NAMESPACE__.'\\Fixtures\\Psr4CaseMismatch' === $class) {\n  279:             return $fixtureDir.'psr4'.DIRECTORY_SEPARATOR.'Psr4CaseMismatch.php';\n  280:         } elseif (__NAMESPACE__.'\\Fixtures\\NotPSR0' === $class) {\n  281:             return $fixtureDir.'reallyNotPsr0.php';\n  282:         } elseif (__NAMESPACE__.'\\Fixtures\\NotPSR0bis' === $class) {\n  283:             return $fixtureDir.'notPsr0Bis.php';\n  284:         } elseif (__NAMESPACE__.'\\Fixtures\\DeprecatedInterface' === $class) {\n  285:             return $fixtureDir.'DeprecatedInterface.php';\n  286:         } elseif ('Symfony\\Bridge\\Debug\\Tests\\Fixtures\\ExtendsDeprecatedParent' === $class) {\n  287:             eval('namespace Symfony\\Bridge\\Debug\\Tests\\Fixtures; class ExtendsDeprecatedParent extends \\\\'.__NAMESPACE__.'\\Fixtures\\DeprecatedClass {}');\n  288          } elseif ('Test\\\\'.__NAMESPACE__.'\\DeprecatedParentClass' === $class) {\n  289:             eval('namespace Test\\\\'.__NAMESPACE__.'; class DeprecatedParentClass extends \\\\'.__NAMESPACE__.'\\Fixtures\\DeprecatedClass {}');\n  290          } elseif ('Test\\\\'.__NAMESPACE__.'\\DeprecatedInterfaceClass' === $class) {\n  291:             eval('namespace Test\\\\'.__NAMESPACE__.'; class DeprecatedInterfaceClass implements \\\\'.__NAMESPACE__.'\\Fixtures\\DeprecatedInterface {}');\n  292          } elseif ('Test\\\\'.__NAMESPACE__.'\\Float' === $class) {\n  293              eval('namespace Test\\\\'.__NAMESPACE__.'; class Float {}');\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/debug/Tests/FatalErrorHandler/ClassNotFoundFatalErrorHandlerTest.php:\n   34  \n   35              if ($function[0] instanceof ComposerClassLoader) {\n   36:                 $function[0]->add('Symfony_Component_Debug_Tests_Fixtures', dirname(dirname(dirname(dirname(dirname(__DIR__))))));\n   37                  break;\n   38              }\n   ..\n  134                      'message' => 'Class \\'PEARClass\\' not found',\n  135                  ),\n  136:                 \"Attempted to load class \\\"PEARClass\\\" from the global namespace.\\nDid you forget a \\\"use\\\" statement for \\\"Symfony_Component_Debug_Tests_Fixtures_PEARClass\\\"?\",\n  137              ),\n  138              array(\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/debug/Tests/Fixtures/casemismatch.php:\n    1  <?php\n    2  \n    3: namespace Symfony\\Component\\Debug\\Tests\\Fixtures;\n    4  \n    5  class CaseMismatch\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/debug/Tests/Fixtures/ClassAlias.php:\n    1  <?php\n    2  \n    3: class_alias('Symfony\\Component\\Debug\\Tests\\Fixtures\\NotPSR0bis', 'Symfony\\Component\\Debug\\Tests\\Fixtures\\ClassAlias');\n    4  \n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/debug/Tests/Fixtures/DeprecatedClass.php:\n    1  <?php\n    2  \n    3: namespace Symfony\\Component\\Debug\\Tests\\Fixtures;\n    4  \n    5  /**\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/debug/Tests/Fixtures/DeprecatedInterface.php:\n    1  <?php\n    2  \n    3: namespace Symfony\\Component\\Debug\\Tests\\Fixtures;\n    4  \n    5  /**\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/debug/Tests/Fixtures/notPsr0Bis.php:\n    1  <?php\n    2  \n    3: namespace Symfony\\Component\\Debug\\Tests\\Fixtures;\n    4  \n    5  class NotPSR0bis\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/debug/Tests/Fixtures/PEARClass.php:\n    1  <?php\n    2  \n    3: class Symfony_Component_Debug_Tests_Fixtures_PEARClass\n    4  {\n    5  }\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/debug/Tests/Fixtures/reallyNotPsr0.php:\n    1  <?php\n    2  \n    3: namespace Symfony\\Component\\Debug\\Tests\\Fixtures;\n    4  \n    5  class NotPSR0\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/debug/Tests/Fixtures/psr4/Psr4CaseMismatch.php:\n    1  <?php\n    2  \n    3: namespace Symfony\\Component\\Debug\\Tests\\Fixtures;\n    4  \n    5  class PSR4CaseMismatch\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/debug/Tests/Fixtures2/RequiredTwice.php:\n    1  <?php\n    2  \n    3: namespace Symfony\\Component\\Debug\\Tests\\Fixtures2;\n    4  \n    5  class RequiredTwice\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/dom-crawler/Tests/CrawlerTest.php:\n  110      {\n  111          $crawler = new Crawler();\n  112:         $crawler->addHtmlContent(file_get_contents(__DIR__.'/Fixtures/windows-1250.html'), 'Windows-1250');\n  113  \n  114          $this->assertEquals('Žťčýů', $crawler->filterXPath('//p')->text());\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/dom-crawler/Tests/FormTest.php:\n  133              'apples' => array('1', '2'),\n  134              'form_name' => 'form-1',\n  135:             'button_1' => 'Capture fields',\n  136              'outer_field' => 'success',\n  137          );\n  ...\n  903                  <input form=\"form_2\" type=\"checkbox\" name=\"oranges[]\" value=\"1\" checked />\n  904                  <div><label></label><input form=\"form-1\" type=\"hidden\" name=\"form_name\" value=\"form-1\" /></div>\n  905:                 <input form=\"form-1\" type=\"submit\" name=\"button_1\" value=\"Capture fields\" />\n  906                  <button form=\"form_2\" type=\"submit\" name=\"button_2\">Submit form_2</button>\n  907              </form>\n  ...\n  940                  <input type=\"checkbox\" name=\"oranges[]\" value=\"1\" checked />\n  941                  <div><label></label><input type=\"hidden\" name=\"form_name\" value=\"form-1\" /></div>\n  942:                 <input type=\"submit\" name=\"button_1\" value=\"Capture fields\" />\n  943                  <button type=\"submit\" name=\"button_2\">Submit form_2</button>\n  944              </form>\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/dom-crawler/Tests/Field/FileFormFieldTest.php:\n   69          );\n   70  \n   71:         $field->$method(__DIR__.'/../Fixtures/no-extension');\n   72          $value = $field->getValue();\n   73  \n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/event-dispatcher/Tests/EventTest.php:\n   31  \n   32      /**\n   33:      * Sets up the fixture, for example, opens a network connection.\n   34       * This method is called before a test is executed.\n   35       */\n   ..\n   41  \n   42      /**\n   43:      * Tears down the fixture, for example, closes a network connection.\n   44       * This method is called after a test is executed.\n   45       */\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/filesystem/Tests/FilesystemTest.php:\n  676          $link = $this->workspace.DIRECTORY_SEPARATOR.'link';\n  677  \n  678:         // $file does not exists right now: creating \"broken\" links is a wanted feature\n  679          $this->filesystem->symlink($file, $link);\n  680  \n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/CHANGELOG.md:\n  294     * `isChoiceGroup`\n  295     * `isChoiceSelected`\n  296:  * [BC BREAK] renamed method `renderBlock` in FormHelper to `block` and changed its signature\n  297   * made FormView properties public and deprecated their accessor methods\n  298   * made the normalized data of a form accessible in the template through the variable \"form.vars.data\"\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/DataMapperInterface.php:\n   20       * Maps properties of some data to a list of forms.\n   21       *\n   22:      * @param mixed           $data  Structured data.\n   23       * @param FormInterface[] $forms A list of {@link FormInterface} instances.\n   24       *\n   ..\n   31       *\n   32       * @param FormInterface[] $forms A list of {@link FormInterface} instances.\n   33:      * @param mixed           $data  Structured data.\n   34       *\n   35       * @throws Exception\\UnexpectedTypeException if the type of the data parameter is not supported.\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/FormErrorIterator.php:\n   25   *\n   26   * You can also wrap the iterator into a {@link \\RecursiveIteratorIterator} to\n   27:  * flatten the recursive structure into a flat list of errors.\n   28   *\n   29   * @author Bernhard Schussek <bschussek@gmail.com>\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/FormInterface.php:\n   15  \n   16  /**\n   17:  * A form group bundling multiple forms in a hierarchical structure.\n   18   *\n   19   * @author Bernhard Schussek <bschussek@gmail.com>\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/FormTypeInterface.php:\n   85       * You can also return a type instance from this method, although doing so\n   86       * is discouraged because it leads to a performance penalty. The support\n   87:      * for returning type instances may be dropped from future releases.\n   88       *\n   89       * @return string|null|FormTypeInterface The name of the parent type if any, null otherwise.\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/ChoiceList/ArrayChoiceList.php:\n   38       * @var array\n   39       */\n   40:     protected $structuredValues;\n   41  \n   42      /**\n   ..\n   89          // choice groups), flatten the array. The grouping information is needed\n   90          // in the view only.\n   91:         $this->flatten($choices, $value, $choicesByValues, $keysByValues, $structuredValues);\n   92  \n   93          $this->choices = $choicesByValues;\n   94          $this->originalKeys = $keysByValues;\n   95:         $this->structuredValues = $structuredValues;\n   96      }\n   97  \n   ..\n  115       * {@inheritdoc}\n  116       */\n  117:     public function getStructuredValues()\n  118      {\n  119:         return $this->structuredValues;\n  120      }\n  121  \n  ...\n  187       * @internal Must not be used by user-land code\n  188       */\n  189:     protected function flatten(array $choices, $value, &$choicesByValues, &$keysByValues, &$structuredValues)\n  190      {\n  191          if (null === $choicesByValues) {\n  192              $choicesByValues = array();\n  193              $keysByValues = array();\n  194:             $structuredValues = array();\n  195          }\n  196  \n  197          foreach ($choices as $key => $choice) {\n  198              if (is_array($choice)) {\n  199:                 $this->flatten($choice, $value, $choicesByValues, $keysByValues, $structuredValues[$key]);\n  200  \n  201                  continue;\n  ...\n  205              $choicesByValues[$choiceValue] = $choice;\n  206              $keysByValues[$choiceValue] = $key;\n  207:             $structuredValues[$key] = $choiceValue;\n  208          }\n  209      }\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/ChoiceList/ArrayKeyChoiceList.php:\n  163       * @internal Must not be used by user-land code\n  164       */\n  165:     protected function flatten(array $choices, $value, &$choicesByValues, &$keysByValues, &$structuredValues)\n  166      {\n  167          if (null === $choicesByValues) {\n  168              $choicesByValues = array();\n  169              $keysByValues = array();\n  170:             $structuredValues = array();\n  171          }\n  172  \n  173          foreach ($choices as $choice => $key) {\n  174              if (is_array($key)) {\n  175:                 $this->flatten($key, $value, $choicesByValues, $keysByValues, $structuredValues[$choice]);\n  176  \n  177                  continue;\n  ...\n  181              $choicesByValues[$choiceValue] = $choice;\n  182              $keysByValues[$choiceValue] = $key;\n  183:             $structuredValues[$key] = $choiceValue;\n  184          }\n  185      }\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/ChoiceList/ChoiceListInterface.php:\n   43  \n   44      /**\n   45:      * Returns the values in the structure originally passed to the list.\n   46       *\n   47       * Contrary to {@link getValues()}, the result is indexed by the original\n   ..\n   65       * @return string[] The choice values\n   66       */\n   67:     public function getStructuredValues();\n   68  \n   69      /**\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/ChoiceList/LazyChoiceList.php:\n   93       * {@inheritdoc}\n   94       */\n   95:     public function getStructuredValues()\n   96      {\n   97          if (!$this->loadedList) {\n   ..\n   99          }\n  100  \n  101:         return $this->loadedList->getStructuredValues();\n  102      }\n  103  \n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/ChoiceList/LegacyChoiceListAdapter.php:\n   42       * @var array|null\n   43       */\n   44:     private $structuredValues;\n   45  \n   46      /**\n   ..\n   81       * {@inheritdoc}\n   82       */\n   83:     public function getStructuredValues()\n   84      {\n   85:         if (!$this->structuredValues) {\n   86              $this->initialize();\n   87          }\n   88  \n   89:         return $this->structuredValues;\n   90      }\n   91  \n   ..\n   95      public function getOriginalKeys()\n   96      {\n   97:         if (!$this->structuredValues) {\n   98              $this->initialize();\n   99          }\n  100  \n  101:         return array_flip($this->structuredValues);\n  102      }\n  103  \n  ...\n  132          $this->choices = array();\n  133          $this->values = array();\n  134:         $this->structuredValues = $this->adaptedList->getValues();\n  135  \n  136          $innerChoices = $this->adaptedList->getChoices();\n  137  \n  138          foreach ($innerChoices as $index => $choice) {\n  139:             $value = $this->structuredValues[$index];\n  140              $this->values[] = $value;\n  141              $this->choices[$value] = $choice;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/ChoiceList/Factory/DefaultChoiceListFactory.php:\n  118              }\n  119          } else {\n  120:             // Otherwise use the original structure of the choices\n  121              self::addChoiceViewsGroupedBy(\n  122:                 $list->getStructuredValues(),\n  123                  $label,\n  124                  $choices,\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/Extension/Core/ChoiceList/ChoiceList.php:\n   81       *                                             key pointing to the nested array. The topmost\n   82       *                                             level of the hierarchy may also be a \\Traversable.\n   83:      * @param array              $labels           The array of labels. The structure of this array\n   84:      *                                             should match the structure of $choices.\n   85       * @param array              $preferredChoices A flat array of choices that should be\n   86       *                                             presented to the user with priority.\n   ..\n  269       * @param array              $preferredChoices   The preferred choices.\n  270       *\n  271:      * @throws InvalidArgumentException      If the structures of the choices and labels array do not match.\n  272       * @throws InvalidConfigurationException If no valid value or index could be created for a choice.\n  273       */\n  ...\n  277          foreach ($choices as $group => $choice) {\n  278              if (!array_key_exists($group, $labels)) {\n  279:                 throw new InvalidArgumentException('The structures of the choices and labels array do not match.');\n  280              }\n  281  \n  ...\n  385       * given array of preferred choices.\n  386       *\n  387:      * Extension point to optimize performance by changing the structure of the\n  388       * $preferredChoices array.\n  389       *\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/Extension/DataCollector/FormDataCollectorInterface.php:\n   17  \n   18  /**\n   19:  * Collects and structures information about forms.\n   20   *\n   21   * @since  2.4\n   ..\n   63      /**\n   64       * Assembles the data collected about the given form and its children as\n   65:      * a tree-like data structure.\n   66       *\n   67       * The result can be queried using {@link getData()}.\n   ..\n   73      /**\n   74       * Assembles the data collected about the given form and its children as\n   75:      * a tree-like data structure.\n   76       *\n   77       * The result can be queried using {@link getData()}.\n   78       *\n   79       * Contrary to {@link buildPreliminaryFormTree()}, a {@link FormView}\n   80:      * object has to be passed. The tree structure of this view object will be\n   81       * used for structuring the resulting data. That means, if a child is\n   82       * present in the view, but not in the form, it will be present in the final\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/Resources/translations/validators.nl.xlf:\n   13              <trans-unit id=\"30\">\n   14                  <source>The CSRF token is invalid. Please try to resubmit the form.</source>\n   15:                 <target>De CSRF-token is ongeldig. Probeer het formulier opnieuw te versturen.</target>\n   16              </trans-unit>\n   17          </body>\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/Tests/AbstractBootstrap3LayoutTest.php:\n  264          ));\n  265  \n  266:         $classPart = in_array('choice_attr', $this->testableFeatures) ? '[@class=\"foo&bar\"]' : '';\n  267  \n  268          $this->assertWidgetMatchesXpath($form->createView(), array('attr' => array('class' => 'my&class')),\n  ...\n  555          ));\n  556  \n  557:         $classPart = in_array('choice_attr', $this->testableFeatures) ? '[@class=\"foo&bar\"]' : '';\n  558  \n  559          $this->assertWidgetMatchesXpath($form->createView(), array('attr' => array('class' => 'my&class')),\n  ...\n  698          ));\n  699  \n  700:         $classPart = in_array('choice_attr', $this->testableFeatures) ? '[@class=\"foo&bar\"]' : '';\n  701  \n  702          $this->assertWidgetMatchesXpath($form->createView(), array(),\n  ...\n  908          ));\n  909  \n  910:         $classPart = in_array('choice_attr', $this->testableFeatures) ? '[@class=\"foo&bar\"]' : '';\n  911  \n  912          $this->assertWidgetMatchesXpath($form->createView(), array(),\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/Tests/AbstractDivLayoutTest.php:\n   13  \n   14  use Symfony\\Component\\Form\\FormError;\n   15: use Symfony\\Component\\Form\\Tests\\Fixtures\\AlternatingRowType;\n   16  use Symfony\\Component\\Security\\Csrf\\CsrfToken;\n   17  \n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/Tests/AbstractExtensionTest.php:\n   13  \n   14  use Symfony\\Component\\Form\\AbstractExtension;\n   15: use Symfony\\Component\\Form\\Tests\\Fixtures\\FooType;\n   16  \n   17  class AbstractExtensionTest extends \\PHPUnit_Framework_TestCase\n   ..\n   27      {\n   28          $loader = new ConcreteExtension();\n   29:         $this->assertInstanceOf('Symfony\\Component\\Form\\Tests\\Fixtures\\FooType', $loader->getType('foo'));\n   30      }\n   31  \n   32      /**\n   33       * @expectedException        \\InvalidArgumentException\n   34:      * @expectedExceptionMessage Custom resolver \"Symfony\\Component\\Form\\Tests\\Fixtures\\CustomOptionsResolver\" must extend \"Symfony\\Component\\OptionsResolver\\OptionsResolver\".\n   35       */\n   36      public function testCustomOptionsResolver()\n   37      {\n   38:         $extension = new Fixtures\\FooTypeBarExtension();\n   39:         $resolver = new Fixtures\\CustomOptionsResolver();\n   40          $extension->setDefaultOptions($resolver);\n   41      }\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/Tests/AbstractLayoutTest.php:\n   19  {\n   20      protected $csrfTokenManager;\n   21:     protected $testableFeatures = array();\n   22  \n   23      protected function setUp()\n   ..\n  559          ));\n  560  \n  561:         $classPart = in_array('choice_attr', $this->testableFeatures) ? '[@class=\"foo&bar\"]' : '';\n  562  \n  563          $this->assertWidgetMatchesXpath($form->createView(), array(),\n  ...\n  844          ));\n  845  \n  846:         $classPart = in_array('choice_attr', $this->testableFeatures) ? '[@class=\"foo&bar\"]' : '';\n  847  \n  848          $this->assertWidgetMatchesXpath($form->createView(), array(),\n  ...\n  958          ));\n  959  \n  960:         $classPart = in_array('choice_attr', $this->testableFeatures) ? '[@class=\"foo&bar\"]' : '';\n  961  \n  962          $this->assertWidgetMatchesXpath($form->createView(), array(),\n  ...\n 1082          ));\n 1083  \n 1084:         $classPart = in_array('choice_attr', $this->testableFeatures) ? '[@class=\"foo&bar\"]' : '';\n 1085  \n 1086          $this->assertWidgetMatchesXpath($form->createView(), array(),\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/Tests/AbstractRequestHandlerTest.php:\n  312  \n  313      /**\n  314:      * @dataProvider getPostMaxSizeFixtures\n  315       */\n  316      public function testAddFormErrorIfPostMaxSizeExceeded($contentLength, $iniMax, $shouldFail, array $errorParams = array())\n  ...\n  341      }\n  342  \n  343:     public function getPostMaxSizeFixtures()\n  344      {\n  345          return array(\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/Tests/CompoundFormTest.php:\n   20  use Symfony\\Component\\HttpFoundation\\Request;\n   21  use Symfony\\Component\\HttpFoundation\\File\\UploadedFile;\n   22: use Symfony\\Component\\Form\\Tests\\Fixtures\\FixedDataTransformer;\n   23  \n   24  class CompoundFormTest extends AbstractFormTest\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/Tests/FormFactoryBuilderTest.php:\n   13  \n   14  use Symfony\\Component\\Form\\FormFactoryBuilder;\n   15: use Symfony\\Component\\Form\\Tests\\Fixtures\\FooType;\n   16  \n   17  class FormFactoryBuilderTest extends \\PHPUnit_Framework_TestCase\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/Tests/FormFactoryTest.php:\n   17  use Symfony\\Component\\Form\\Guess\\ValueGuess;\n   18  use Symfony\\Component\\Form\\Guess\\TypeGuess;\n   19: use Symfony\\Component\\Form\\Tests\\Fixtures\\FooType;\n   20: use Symfony\\Component\\Form\\Tests\\Fixtures\\FooSubType;\n   21: use Symfony\\Component\\Form\\Tests\\Fixtures\\FooSubTypeWithParentInstance;\n   22  \n   23  /**\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/Tests/FormRegistryTest.php:\n   14  use Symfony\\Component\\Form\\FormRegistry;\n   15  use Symfony\\Component\\Form\\FormTypeGuesserChain;\n   16: use Symfony\\Component\\Form\\Tests\\Fixtures\\TestExtension;\n   17: use Symfony\\Component\\Form\\Tests\\Fixtures\\FooSubTypeWithParentInstance;\n   18: use Symfony\\Component\\Form\\Tests\\Fixtures\\FooSubType;\n   19: use Symfony\\Component\\Form\\Tests\\Fixtures\\FooTypeBazExtension;\n   20: use Symfony\\Component\\Form\\Tests\\Fixtures\\FooTypeBarExtension;\n   21: use Symfony\\Component\\Form\\Tests\\Fixtures\\FooType;\n   22  \n   23  /**\n   ..\n  154          $this->resolvedTypeFactory->expects($this->at(0))\n  155              ->method('createResolvedType')\n  156:             ->with($this->isInstanceOf('Symfony\\Component\\Form\\Tests\\Fixtures\\FooType'))\n  157              ->will($this->returnValue($parentResolvedType));\n  158  \n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/Tests/SimpleFormTest.php:\n   20  use Symfony\\Component\\Form\\Exception\\TransformationFailedException;\n   21  use Symfony\\Component\\EventDispatcher\\EventDispatcher;\n   22: use Symfony\\Component\\Form\\Tests\\Fixtures\\FixedDataTransformer;\n   23: use Symfony\\Component\\Form\\Tests\\Fixtures\\FixedFilterListener;\n   24  \n   25  class SimpleFormTest_Countable implements \\Countable\n   ..\n 1060      /**\n 1061       * @expectedException        \\InvalidArgumentException\n 1062:      * @expectedExceptionMessage Custom resolver \"Symfony\\Component\\Form\\Tests\\Fixtures\\CustomOptionsResolver\" must extend \"Symfony\\Component\\OptionsResolver\\OptionsResolver\".\n 1063       */\n 1064      public function testCustomOptionsResolver()\n 1065      {\n 1066:         $fooType = new Fixtures\\FooType();\n 1067:         $resolver = new Fixtures\\CustomOptionsResolver();\n 1068          $fooType->setDefaultOptions($resolver);\n 1069      }\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/Tests/ChoiceList/AbstractChoiceListTest.php:\n   35       * @var array\n   36       */\n   37:     protected $structuredValues;\n   38  \n   39      /**\n   ..\n  111  \n  112          $this->values = $this->getValues();\n  113:         $this->structuredValues = array_combine(array_keys($choices), $this->values);\n  114          $this->choices = array_combine($this->values, $choices);\n  115          $this->keys = array_combine($this->values, array_keys($choices));\n  ...\n  141      }\n  142  \n  143:     public function testGetStructuredValues()\n  144      {\n  145:         $this->assertSame($this->values, $this->list->getStructuredValues());\n  146      }\n  147  \n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/Tests/ChoiceList/ArrayChoiceListTest.php:\n   77              'Group 1' => array('A' => '0', 'B' => '1'),\n   78              'Group 2' => array('C' => '2', 'D' => '3'),\n   79:         ), $choiceList->getStructuredValues());\n   80          $this->assertSame(array(0 => 'a', 1 => 'b', 2 => 'c', 3 => 'd'), $choiceList->getChoices());\n   81          $this->assertSame(array(0 => 'A', 1 => 'B', 2 => 'C', 3 => 'D'), $choiceList->getOriginalKeys());\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/Tests/ChoiceList/LazyChoiceListTest.php:\n   74      }\n   75  \n   76:     public function testGetStructuredValuesLoadsInnerListOnFirstCall()\n   77      {\n   78          $this->loader->expects($this->once())\n   ..\n   82  \n   83          $this->innerList->expects($this->exactly(2))\n   84:             ->method('getStructuredValues')\n   85              ->will($this->returnValue('RESULT'));\n   86  \n   87:         $this->assertSame('RESULT', $this->list->getStructuredValues());\n   88:         $this->assertSame('RESULT', $this->list->getStructuredValues());\n   89      }\n   90  \n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/Tests/ChoiceList/LegacyChoiceListAdapterTest.php:\n   61      }\n   62  \n   63:     public function testGetStructuredValues()\n   64      {\n   65          $this->adaptedList->expects($this->once())\n   ..\n   70              ->willReturn(array(1 => ':a', 4 => ':b', 7 => ':c'));\n   71  \n   72:         $this->assertSame(array(1 => ':a', 4 => ':b', 7 => ':c'), $this->list->getStructuredValues());\n   73      }\n   74  \n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/Tests/ChoiceList/Factory/DefaultChoiceListFactoryTest.php:\n  559      }\n  560  \n  561:     public function testCreateViewFlatGroupByOriginalStructure()\n  562      {\n  563          $list = new ArrayChoiceList(array(\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/Tests/Extension/Core/ChoiceList/ChoiceListTest.php:\n   55       * Necessary for interoperability with MongoDB cursors or ORM relations as\n   56       * choices parameter. A choice itself that is an object implementing \\Traversable\n   57:      * is not treated as hierarchical structure, but as-is.\n   58       */\n   59      public function testInitNestedTraversable()\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/Tests/Extension/Core/ChoiceList/LazyChoiceListTest.php:\n   14  use Symfony\\Component\\Form\\Extension\\Core\\ChoiceList\\SimpleChoiceList;\n   15  use Symfony\\Component\\Form\\Extension\\Core\\View\\ChoiceView;\n   16: use Symfony\\Component\\Form\\Tests\\Extension\\Core\\ChoiceList\\Fixtures\\LazyChoiceListImpl;\n   17: use Symfony\\Component\\Form\\Tests\\Extension\\Core\\ChoiceList\\Fixtures\\LazyChoiceListInvalidImpl;\n   18  \n   19  /**\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/Tests/Extension/Core/ChoiceList/Fixtures/LazyChoiceListImpl.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\Form\\Tests\\Extension\\Core\\ChoiceList\\Fixtures;\n   13  \n   14  use Symfony\\Component\\Form\\Extension\\Core\\ChoiceList\\LazyChoiceList;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/Tests/Extension/Core/ChoiceList/Fixtures/LazyChoiceListInvalidImpl.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\Form\\Tests\\Extension\\Core\\ChoiceList\\Fixtures;\n   13  \n   14  use Symfony\\Component\\Form\\Extension\\Core\\ChoiceList\\LazyChoiceList;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/Tests/Extension/Core/EventListener/MergeCollectionListenerCustomArrayObjectTest.php:\n   12  namespace Symfony\\Component\\Form\\Tests\\Extension\\Core\\EventListener;\n   13  \n   14: use Symfony\\Component\\Form\\Tests\\Fixtures\\CustomArrayObject;\n   15  use Symfony\\Component\\Form\\FormBuilder;\n   16  \n   ..\n   24      protected function getBuilder($name = 'name')\n   25      {\n   26:         return new FormBuilder($name, 'Symfony\\Component\\Form\\Tests\\Fixtures\\CustomArrayObject', $this->dispatcher, $this->factory);\n   27      }\n   28  }\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/Tests/Extension/Core/Type/CollectionTypeTest.php:\n   13  \n   14  use Symfony\\Component\\Form\\Form;\n   15: use Symfony\\Component\\Form\\Tests\\Fixtures\\Author;\n   16: use Symfony\\Component\\Form\\Tests\\Fixtures\\AuthorType;\n   17  \n   18  class CollectionTypeTest extends \\Symfony\\Component\\Form\\Test\\TypeTestCase\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/Tests/Extension/Core/Type/FileTypeTest.php:\n   79          $file = $this\n   80              ->getMockBuilder('Symfony\\Component\\HttpFoundation\\File\\UploadedFile')\n   81:             ->setConstructorArgs(array(__DIR__.'/../../../Fixtures/foo', 'foo'))\n   82              ->getMock()\n   83          ;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/Tests/Extension/Core/Type/FormTypeTest.php:\n   14  use Symfony\\Component\\PropertyAccess\\PropertyPath;\n   15  use Symfony\\Component\\Form\\CallbackTransformer;\n   16: use Symfony\\Component\\Form\\Tests\\Fixtures\\Author;\n   17: use Symfony\\Component\\Form\\Tests\\Fixtures\\FixedDataTransformer;\n   18  use Symfony\\Component\\Form\\FormError;\n   19  \n   ..\n  156      {\n  157          $this->factory->createBuilder('form', null, array(\n  158:             'data_class' => 'Symfony\\Component\\Form\\Tests\\Fixtures\\AbstractAuthor',\n  159          ));\n  160      }\n  ...\n  163      {\n  164          $this->factory->createBuilder('form', null, array(\n  165:             'data_class' => 'Symfony\\Component\\Form\\Tests\\Fixtures\\AuthorInterface',\n  166          ));\n  167      }\n  ...\n  180      {\n  181          $builder = $this->factory->createBuilder('form', null, array(\n  182:             'data_class' => 'Symfony\\Component\\Form\\Tests\\Fixtures\\Author',\n  183              'required' => false,\n  184          ));\n  ...\n  238      {\n  239          $builder = $this->factory->createBuilder('form', null, array(\n  240:             'data_class' => 'Symfony\\Component\\Form\\Tests\\Fixtures\\Author',\n  241              'required' => false,\n  242          ));\n  ...\n  254      {\n  255          $builder = $this->factory->createBuilder('form', null, array(\n  256:             'data_class' => 'Symfony\\Component\\Form\\Tests\\Fixtures\\Author',\n  257              'required' => true,\n  258          ));\n  ...\n  304  \n  305          $builder = $this->factory->createBuilder('form', null, array(\n  306:             'data_class' => 'Symfony\\Component\\Form\\Tests\\Fixtures\\Author',\n  307              'empty_data' => $author,\n  308          ));\n  ...\n  365          $builder = $this->factory->createBuilder('form', $author);\n  366          $builder->add('reference', 'form', array(\n  367:             'data_class' => 'Symfony\\Component\\Form\\Tests\\Fixtures\\Author',\n  368          ));\n  369          $builder->get('reference')->add('firstName', 'text');\n  ...\n  388          $builder = $this->factory->createBuilder('form', $author);\n  389          $builder->add('referenceCopy', 'form', array(\n  390:             'data_class' => 'Symfony\\Component\\Form\\Tests\\Fixtures\\Author',\n  391          ));\n  392          $builder->get('referenceCopy')->add('firstName', 'text');\n  ...\n  411          $builder = $this->factory->createBuilder('form', $author);\n  412          $builder->add('referenceCopy', 'form', array(\n  413:             'data_class' => 'Symfony\\Component\\Form\\Tests\\Fixtures\\Author',\n  414              'by_reference' => false,\n  415          ));\n  ...\n  644      {\n  645          $builder = $this->factory->createBuilder('form', null, array(\n  646:             'data_class' => 'Symfony\\Component\\Form\\Tests\\Fixtures\\Author',\n  647              'required' => false,\n  648          ));\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/Tests/Extension/DataCollector/FormDataCollectorTest.php:\n  341      }\n  342  \n  343:     public function testFinalFormReliesOnFormViewStructure()\n  344      {\n  345          $this->form->add($child1 = $this->createForm('first'));\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/Tests/Extension/DataCollector/FormDataExtractorTest.php:\n   18  use Symfony\\Component\\Form\\FormError;\n   19  use Symfony\\Component\\Form\\FormView;\n   20: use Symfony\\Component\\Form\\Tests\\Fixtures\\FixedDataTransformer;\n   21  use Symfony\\Component\\HttpKernel\\DataCollector\\Util\\ValueExporter;\n   22  \n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/Tests/Extension/HttpFoundation/HttpFoundationRequestHandlerTest.php:\n   49      protected function getMockFile($suffix = '')\n   50      {\n   51:         return new UploadedFile(__DIR__.'/../../Fixtures/foo'.$suffix, 'foo'.$suffix);\n   52      }\n   53  }\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/Tests/Fixtures/AbstractAuthor.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\Form\\Tests\\Fixtures;\n   13  \n   14  abstract class AbstractAuthor\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/Tests/Fixtures/AlternatingRowType.php:\n    1  <?php\n    2  \n    3: namespace Symfony\\Component\\Form\\Tests\\Fixtures;\n    4  \n    5  use Symfony\\Component\\Form\\AbstractType;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/Tests/Fixtures/Author.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\Form\\Tests\\Fixtures;\n   13  \n   14  class Author\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/Tests/Fixtures/AuthorInterface.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\Form\\Tests\\Fixtures;\n   13  \n   14  interface AuthorInterface\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/Tests/Fixtures/AuthorType.php:\n    1  <?php\n    2  \n    3: namespace Symfony\\Component\\Form\\Tests\\Fixtures;\n    4  \n    5  use Symfony\\Component\\Form\\AbstractType;\n    .\n   25      {\n   26          $resolver->setDefaults(array(\n   27:             'data_class' => 'Symfony\\Component\\Form\\Tests\\Fixtures\\Author',\n   28          ));\n   29      }\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/Tests/Fixtures/CustomArrayObject.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\Form\\Tests\\Fixtures;\n   13  \n   14  /**\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/Tests/Fixtures/CustomOptionsResolver.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\Form\\Tests\\Fixtures;\n   13  \n   14  use Symfony\\Component\\OptionsResolver\\OptionsResolverInterface;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/Tests/Fixtures/FixedDataTransformer.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\Form\\Tests\\Fixtures;\n   13  \n   14  use Symfony\\Component\\Form\\DataTransformerInterface;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/Tests/Fixtures/FixedFilterListener.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\Form\\Tests\\Fixtures;\n   13  \n   14  use Symfony\\Component\\Form\\FormEvents;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/Tests/Fixtures/FooSubType.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\Form\\Tests\\Fixtures;\n   13  \n   14  use Symfony\\Component\\Form\\AbstractType;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/Tests/Fixtures/FooSubTypeWithParentInstance.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\Form\\Tests\\Fixtures;\n   13  \n   14  use Symfony\\Component\\Form\\AbstractType;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/Tests/Fixtures/FooType.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\Form\\Tests\\Fixtures;\n   13  \n   14  use Symfony\\Component\\Form\\AbstractType;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/Tests/Fixtures/FooTypeBarExtension.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\Form\\Tests\\Fixtures;\n   13  \n   14  use Symfony\\Component\\Form\\AbstractTypeExtension;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/Tests/Fixtures/FooTypeBazExtension.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\Form\\Tests\\Fixtures;\n   13  \n   14  use Symfony\\Component\\Form\\AbstractTypeExtension;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/form/Tests/Fixtures/TestExtension.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\Form\\Tests\\Fixtures;\n   13  \n   14  use Symfony\\Component\\Form\\FormTypeInterface;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/http-foundation/Request.php:\n  707       * Enables support for the _method request parameter to determine the intended HTTP method.\n  708       *\n  709:      * Be warned that enabling this feature might lead to CSRF issues in your code.\n  710       * Check that you are using CSRF tokens when required.\n  711       * If the HTTP method parameter override is enabled, an html-form with method \"POST\" can be altered\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/http-foundation/RequestMatcher.php:\n  176          }\n  177  \n  178:         // Note to future implementors: add additional checks above the\n  179          // foreach above or else your check might not be run!\n  180          return count($this->ips) === 0;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/http-foundation/RequestStack.php:\n   66       *\n   67       * Be warned that making your code aware of the master request\n   68:      * might make it un-compatible with other features of your framework\n   69       * like ESI support.\n   70       *\n   ..\n   84       *\n   85       * Be warned that making your code aware of the parent request\n   86:      * might make it un-compatible with other features of your framework\n   87       * like ESI support.\n   88       *\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/http-foundation/File/MimeType/MimeTypeExtensionGuesser.php:\n   89          'application/pdf' => 'pdf',\n   90          'application/pgp-encrypted' => 'pgp',\n   91:         'application/pgp-signature' => 'asc',\n   92          'application/pics-rules' => 'prf',\n   93          'application/pkcs10' => 'p10',\n   94          'application/pkcs7-mime' => 'p7m',\n   95:         'application/pkcs7-signature' => 'p7s',\n   96          'application/pkcs8' => 'p8',\n   97          'application/pkix-attr-cert' => 'ac',\n   ..\n  538          'application/x-font-woff' => 'woff',\n  539          'application/x-freearc' => 'arc',\n  540:         'application/x-futuresplash' => 'spl',\n  541          'application/x-gca-compressed' => 'gca',\n  542          'application/x-glulx' => 'ulx',\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/http-foundation/Session/Attribute/NamespacedAttributeBag.php:\n   13  \n   14  /**\n   15:  * This class provides structured storage of session attributes using\n   16   * a name spacing character in the key.\n   17   *\n   ..\n  100       * Resolves a path in attributes property and returns it as a reference.\n  101       *\n  102:      * This method allows structured namespacing of session attributes.\n  103       *\n  104       * @param string $name         Key name\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/http-foundation/Tests/AcceptHeaderTest.php:\n   30          $header = AcceptHeader::fromString($string);\n   31          $parsed = array_values($header->all());\n   32:         // reset index since the fixtures don't have them set\n   33          foreach ($parsed as $item) {\n   34              $item->setIndex(0);\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/http-foundation/Tests/BinaryFileResponseTest.php:\n   55      public function testRequests($requestRange, $offset, $length, $responseRange)\n   56      {\n   57:         $response = BinaryFileResponse::create(__DIR__.'/File/Fixtures/test.gif', 200, array('Content-Type' => 'application/octet-stream'))->setAutoEtag();\n   58  \n   59          // do a request to get the ETag\n   ..\n   67          $request->headers->set('Range', $requestRange);\n   68  \n   69:         $file = fopen(__DIR__.'/File/Fixtures/test.gif', 'r');\n   70          fseek($file, $offset);\n   71          $data = fread($file, $length);\n   ..\n   97      public function testFullFileRequests($requestRange)\n   98      {\n   99:         $response = BinaryFileResponse::create(__DIR__.'/File/Fixtures/test.gif', 200, array('Content-Type' => 'application/octet-stream'))->setAutoEtag();\n  100  \n  101          // prepare a request for a range of the testing file\n  ...\n  103          $request->headers->set('Range', $requestRange);\n  104  \n  105:         $file = fopen(__DIR__.'/File/Fixtures/test.gif', 'r');\n  106          $data = fread($file, 35);\n  107          fclose($file);\n  ...\n  132      public function testInvalidRequests($requestRange)\n  133      {\n  134:         $response = BinaryFileResponse::create(__DIR__.'/File/Fixtures/test.gif', 200, array('Content-Type' => 'application/octet-stream'))->setAutoEtag();\n  135  \n  136          // prepare a request for a range of the testing file\n  ...\n  178          $request->headers->set('X-Accel-Mapping', $mapping);\n  179  \n  180:         $file = new FakeFile($realpath, __DIR__.'/File/Fixtures/test');\n  181  \n  182          BinaryFileResponse::trustXSendfileTypeHeader();\n  ...\n  195          $request = Request::create('/');\n  196  \n  197:         $path = __DIR__.'/File/Fixtures/to_delete';\n  198          touch($path);\n  199          $realPath = realpath($path);\n  ...\n  212      {\n  213          $request = Request::create('/', 'POST');\n  214:         $response = BinaryFileResponse::create(__DIR__.'/File/Fixtures/test.gif', 200, array('Content-Type' => 'application/octet-stream'));\n  215          $response->prepare($request);\n  216  \n  ...\n  221      {\n  222          $request = Request::create('/', 'POST');\n  223:         $response = BinaryFileResponse::create(__DIR__.'/File/Fixtures/test.gif', 200, array('Content-Type' => 'application/octet-stream'));\n  224          $response->headers->set('Accept-Ranges', 'foo');\n  225          $response->prepare($request);\n  ...\n  243      public static function tearDownAfterClass()\n  244      {\n  245:         $path = __DIR__.'/../Fixtures/to_delete';\n  246          if (file_exists($path)) {\n  247              @unlink($path);\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/http-foundation/Tests/RequestMatcherTest.php:\n   18  {\n   19      /**\n   20:      * @dataProvider testMethodFixtures\n   21       */\n   22      public function testMethod($requestMethod, $matcherMethod, $isMatch)\n   ..\n   32      }\n   33  \n   34:     public function testMethodFixtures()\n   35      {\n   36          return array(\n   ..\n   64  \n   65      /**\n   66:      * @dataProvider testHostFixture\n   67       */\n   68      public function testHost($pattern, $isMatch)\n   ..\n   78      }\n   79  \n   80:     public function testHostFixture()\n   81      {\n   82          return array(\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/http-foundation/Tests/ResponseTest.php:\n  671  \n  672      /**\n  673:      * @dataProvider getStatusCodeFixtures\n  674       */\n  675      public function testSetStatusCode($code, $text, $expectedText)\n  ...\n  685      }\n  686  \n  687:     public function getStatusCodeFixtures()\n  688      {\n  689          return array(\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/http-foundation/Tests/File/FileTest.php:\n   21      public function testGetMimeTypeUsesMimeTypeGuessers()\n   22      {\n   23:         $file = new File(__DIR__.'/Fixtures/test.gif');\n   24          $guesser = $this->createMockGuesser($file->getPathname(), 'image/gif');\n   25  \n   ..\n   31      public function testGuessExtensionWithoutGuesser()\n   32      {\n   33:         $file = new File(__DIR__.'/Fixtures/directory/.empty');\n   34  \n   35          $this->assertNull($file->guessExtension());\n   ..\n   38      public function testGuessExtensionIsBasedOnMimeType()\n   39      {\n   40:         $file = new File(__DIR__.'/Fixtures/test');\n   41          $guesser = $this->createMockGuesser($file->getPathname(), 'image/gif');\n   42  \n   ..\n   51      public function testGuessExtensionWithReset()\n   52      {\n   53:         $file = new File(__DIR__.'/Fixtures/other-file.example');\n   54          $guesser = $this->createMockGuesser($file->getPathname(), 'image/gif');\n   55          MimeTypeGuesser::getInstance()->register($guesser);\n   ..\n   66          $this->setExpectedException('Symfony\\Component\\HttpFoundation\\File\\Exception\\FileNotFoundException');\n   67  \n   68:         new File(__DIR__.'/Fixtures/not_here');\n   69      }\n   70  \n   71      public function testMove()\n   72      {\n   73:         $path = __DIR__.'/Fixtures/test.copy.gif';\n   74:         $targetDir = __DIR__.'/Fixtures/directory';\n   75          $targetPath = $targetDir.'/test.copy.gif';\n   76          @unlink($path);\n   77          @unlink($targetPath);\n   78:         copy(__DIR__.'/Fixtures/test.gif', $path);\n   79  \n   80          $file = new File($path);\n   ..\n   91      public function testMoveWithNewName()\n   92      {\n   93:         $path = __DIR__.'/Fixtures/test.copy.gif';\n   94:         $targetDir = __DIR__.'/Fixtures/directory';\n   95          $targetPath = $targetDir.'/test.newname.gif';\n   96          @unlink($path);\n   97          @unlink($targetPath);\n   98:         copy(__DIR__.'/Fixtures/test.gif', $path);\n   99  \n  100          $file = new File($path);\n  ...\n  108      }\n  109  \n  110:     public function getFilenameFixtures()\n  111      {\n  112          return array(\n  ...\n  121  \n  122      /**\n  123:      * @dataProvider getFilenameFixtures\n  124       */\n  125      public function testMoveWithNonLatinName($filename, $sanitizedFilename)\n  126      {\n  127:         $path = __DIR__.'/Fixtures/'.$sanitizedFilename;\n  128:         $targetDir = __DIR__.'/Fixtures/directory/';\n  129          $targetPath = $targetDir.$sanitizedFilename;\n  130          @unlink($path);\n  131          @unlink($targetPath);\n  132:         copy(__DIR__.'/Fixtures/test.gif', $path);\n  133  \n  134          $file = new File($path);\n  ...\n  145      public function testMoveToAnUnexistentDirectory()\n  146      {\n  147:         $sourcePath = __DIR__.'/Fixtures/test.copy.gif';\n  148:         $targetDir = __DIR__.'/Fixtures/directory/sub';\n  149          $targetPath = $targetDir.'/test.copy.gif';\n  150          @unlink($sourcePath);\n  151          @unlink($targetPath);\n  152          @rmdir($targetDir);\n  153:         copy(__DIR__.'/Fixtures/test.gif', $sourcePath);\n  154  \n  155          $file = new File($sourcePath);\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/http-foundation/Tests/File/UploadedFileTest.php:\n   28  \n   29          new UploadedFile(\n   30:             __DIR__.'/Fixtures/not_here',\n   31              'original.gif',\n   32              null\n   ..\n   37      {\n   38          $file = new UploadedFile(\n   39:             __DIR__.'/Fixtures/test.gif',\n   40              'original.gif',\n   41              null,\n   42:             filesize(__DIR__.'/Fixtures/test.gif'),\n   43              UPLOAD_ERR_OK\n   44          );\n   ..\n   54      {\n   55          $file = new UploadedFile(\n   56:             __DIR__.'/Fixtures/.unknownextension',\n   57              'original.gif',\n   58              null,\n   59:             filesize(__DIR__.'/Fixtures/.unknownextension'),\n   60              UPLOAD_ERR_OK\n   61          );\n   ..\n   67      {\n   68          $file = new UploadedFile(\n   69:             __DIR__.'/Fixtures/test.gif',\n   70              'original.gif',\n   71              'image/gif',\n   72:             filesize(__DIR__.'/Fixtures/test.gif'),\n   73              null\n   74          );\n   ..\n   80      {\n   81          $file = new UploadedFile(\n   82:             __DIR__.'/Fixtures/test.gif',\n   83              'original.gif',\n   84              'image/jpeg',\n   85:             filesize(__DIR__.'/Fixtures/test.gif'),\n   86              null\n   87          );\n   ..\n   93      {\n   94          $file = new UploadedFile(\n   95:             __DIR__.'/Fixtures/test.gif',\n   96              'original.gif',\n   97              'image/gif',\n   98:             filesize(__DIR__.'/Fixtures/test.gif'),\n   99              null\n  100          );\n  ...\n  106      {\n  107          $file = new UploadedFile(\n  108:             __DIR__.'/Fixtures/test.gif',\n  109              'original.gif',\n  110              'image/gif',\n  111:             filesize(__DIR__.'/Fixtures/test.gif'),\n  112              null\n  113          );\n  ...\n  119      {\n  120          $file = new UploadedFile(\n  121:             __DIR__.'/Fixtures/test.gif',\n  122              'original.gif',\n  123              'image/gif',\n  124:             filesize(__DIR__.'/Fixtures/test.gif'),\n  125              null\n  126          );\n  ...\n  135      {\n  136          $file = new UploadedFile(\n  137:             __DIR__.'/Fixtures/test.gif',\n  138              'original.gif',\n  139              'image/gif',\n  140:             filesize(__DIR__.'/Fixtures/test.gif'),\n  141              UPLOAD_ERR_OK\n  142          );\n  143  \n  144:         $movedFile = $file->move(__DIR__.'/Fixtures/directory');\n  145      }\n  146  \n  147      public function testMoveLocalFileIsAllowedInTestMode()\n  148      {\n  149:         $path = __DIR__.'/Fixtures/test.copy.gif';\n  150:         $targetDir = __DIR__.'/Fixtures/directory';\n  151          $targetPath = $targetDir.'/test.copy.gif';\n  152          @unlink($path);\n  153          @unlink($targetPath);\n  154:         copy(__DIR__.'/Fixtures/test.gif', $path);\n  155  \n  156          $file = new UploadedFile(\n  ...\n  163          );\n  164  \n  165:         $movedFile = $file->move(__DIR__.'/Fixtures/directory');\n  166  \n  167          $this->assertTrue(file_exists($targetPath));\n  ...\n  175      {\n  176          $file = new UploadedFile(\n  177:             __DIR__.'/Fixtures/test.gif',\n  178              '../../original.gif',\n  179              'image/gif',\n  180:             filesize(__DIR__.'/Fixtures/test.gif'),\n  181              null\n  182          );\n  ...\n  188      {\n  189          $file = new UploadedFile(\n  190:             __DIR__.'/Fixtures/test.gif',\n  191              'original.gif',\n  192              'image/gif',\n  193:             filesize(__DIR__.'/Fixtures/test.gif'),\n  194              null\n  195          );\n  196  \n  197:         $this->assertEquals(filesize(__DIR__.'/Fixtures/test.gif'), $file->getSize());\n  198  \n  199          $file = new UploadedFile(\n  200:             __DIR__.'/Fixtures/test',\n  201              'original.gif',\n  202              'image/gif'\n  203          );\n  204  \n  205:         $this->assertEquals(filesize(__DIR__.'/Fixtures/test'), $file->getSize());\n  206      }\n  207  \n  ...\n  209      {\n  210          $file = new UploadedFile(\n  211:             __DIR__.'/Fixtures/test.gif',\n  212              'original.gif',\n  213              null\n  ...\n  220      {\n  221          $file = new UploadedFile(\n  222:             __DIR__.'/Fixtures/test.gif',\n  223              'original.gif',\n  224              null,\n  225:             filesize(__DIR__.'/Fixtures/test.gif'),\n  226              UPLOAD_ERR_OK,\n  227              true\n  ...\n  237      {\n  238          $file = new UploadedFile(\n  239:             __DIR__.'/Fixtures/test.gif',\n  240              'original.gif',\n  241              null,\n  242:             filesize(__DIR__.'/Fixtures/test.gif'),\n  243              $error\n  244          );\n  ...\n  261      {\n  262          $file = new UploadedFile(\n  263:             __DIR__.'/Fixtures/test.gif',\n  264              'original.gif',\n  265              null,\n  266:             filesize(__DIR__.'/Fixtures/test.gif'),\n  267              UPLOAD_ERR_OK\n  268          );\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/http-foundation/Tests/File/MimeType/MimeTypeTest.php:\n   24      public function testGuessImageWithoutExtension()\n   25      {\n   26:         $this->assertEquals('image/gif', MimeTypeGuesser::getInstance()->guess(__DIR__.'/../Fixtures/test'));\n   27      }\n   28  \n   ..\n   31          $this->setExpectedException('Symfony\\Component\\HttpFoundation\\File\\Exception\\FileNotFoundException');\n   32  \n   33:         MimeTypeGuesser::getInstance()->guess(__DIR__.'/../Fixtures/directory');\n   34      }\n   35  \n   ..\n   38          $guesser = MimeTypeGuesser::getInstance();\n   39          $guesser->register(new FileBinaryMimeTypeGuesser());\n   40:         $this->assertEquals('image/gif', MimeTypeGuesser::getInstance()->guess(__DIR__.'/../Fixtures/test'));\n   41      }\n   42  \n   43      public function testGuessImageWithKnownExtension()\n   44      {\n   45:         $this->assertEquals('image/gif', MimeTypeGuesser::getInstance()->guess(__DIR__.'/../Fixtures/test.gif'));\n   46      }\n   47  \n   48      public function testGuessFileWithUnknownExtension()\n   49      {\n   50:         $this->assertEquals('application/octet-stream', MimeTypeGuesser::getInstance()->guess(__DIR__.'/../Fixtures/.unknownextension'));\n   51      }\n   52  \n   ..\n   54      {\n   55          $this->setExpectedException('Symfony\\Component\\HttpFoundation\\File\\Exception\\FileNotFoundException');\n   56:         MimeTypeGuesser::getInstance()->guess(__DIR__.'/../Fixtures/not_here');\n   57      }\n   58  \n   ..\n   67          }\n   68  \n   69:         $path = __DIR__.'/../Fixtures/to_delete';\n   70          touch($path);\n   71          @chmod($path, 0333);\n   ..\n   81      public static function tearDownAfterClass()\n   82      {\n   83:         $path = __DIR__.'/../Fixtures/to_delete';\n   84          if (file_exists($path)) {\n   85              @chmod($path, 0666);\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/http-foundation/Tests/Session/Storage/Handler/MemcachedSessionHandlerTest.php:\n  100  \n  101      /**\n  102:      * @dataProvider getOptionFixtures\n  103       */\n  104      public function testSupportedOptions($options, $supported)\n  ...\n  112      }\n  113  \n  114:     public function getOptionFixtures()\n  115      {\n  116          return array(\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/http-foundation/Tests/Session/Storage/Handler/MemcacheSessionHandlerTest.php:\n  101  \n  102      /**\n  103:      * @dataProvider getOptionFixtures\n  104       */\n  105      public function testSupportedOptions($options, $supported)\n  ...\n  113      }\n  114  \n  115:     public function getOptionFixtures()\n  116      {\n  117          return array(\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/http-kernel/.gitignore:\n    2  composer.lock\n    3  phpunit.xml\n    4: Tests/Fixtures/cache/\n    5: Tests/Fixtures/logs/\n    6  \n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/http-kernel/Kernel.php:\n  446  \n  447      /**\n  448:      * Initializes the data structures related to the bundle management.\n  449       *\n  450       *  - the bundles property maps a bundle name to the bundle instance,\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/http-kernel/README.md:\n   24  It takes a ``Request`` as an input and should return a ``Response`` as an\n   25  output. Using this interface makes your code compatible with all frameworks\n   26: using the Symfony components. And this will give you many cool features for\n   27  free.\n   28  \n   29  Creating a framework based on the Symfony components is really easy. Here is\n   30: a very simple, but fully-featured framework based on the Symfony components:\n   31  \n   32  ```php\n   ..\n   87  \n   88  And that's why the simple looking ``HttpKernelInterface`` is so powerful. It\n   89: gives you access to a lot of cool features, ready to be used out of the box,\n   90  with no efforts.\n   91  \n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/http-kernel/HttpCache/Esi.php:\n   23   *  * ESI Language Specification 1.0 (http://www.w3.org/TR/esi-lang)\n   24   *\n   25:  *  * Edge Architecture Specification (http://www.w3.org/TR/edge-arch)\n   26   *\n   27   * @author Fabien Potencier <fabien@symfony.com>\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/http-kernel/Tests/ClientTest.php:\n   17  use Symfony\\Component\\HttpFoundation\\Cookie;\n   18  use Symfony\\Component\\HttpFoundation\\File\\UploadedFile;\n   19: use Symfony\\Component\\HttpKernel\\Tests\\Fixtures\\TestClient;\n   20  \n   21  class ClientTest extends \\PHPUnit_Framework_TestCase\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/http-kernel/Tests/HttpKernelTest.php:\n  244          $dispatcher = new EventDispatcher();\n  245          $kernel = new HttpKernel($dispatcher, $this->getResolver());\n  246:         $dispatcher->addListener(KernelEvents::TERMINATE, function ($event) use (&$called, &$capturedKernel, &$capturedRequest, &$capturedResponse) {\n  247              $called = true;\n  248:             $capturedKernel = $event->getKernel();\n  249:             $capturedRequest = $event->getRequest();\n  250:             $capturedResponse = $event->getResponse();\n  251          });\n  252  \n  253          $kernel->terminate($request = Request::create('/'), $response = new Response());\n  254          $this->assertTrue($called);\n  255:         $this->assertEquals($kernel, $capturedKernel);\n  256:         $this->assertEquals($request, $capturedRequest);\n  257:         $this->assertEquals($response, $capturedResponse);\n  258      }\n  259  \n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/http-kernel/Tests/KernelTest.php:\n   18  use Symfony\\Component\\HttpFoundation\\Request;\n   19  use Symfony\\Component\\HttpFoundation\\Response;\n   20: use Symfony\\Component\\HttpKernel\\Tests\\Fixtures\\KernelForTest;\n   21: use Symfony\\Component\\HttpKernel\\Tests\\Fixtures\\KernelForOverrideName;\n   22: use Symfony\\Component\\HttpKernel\\Tests\\Fixtures\\FooBarBundle;\n   23  \n   24  class KernelTest extends \\PHPUnit_Framework_TestCase\n   ..\n  117      {\n  118          $container = new ContainerBuilder();\n  119:         $kernel = $this->getMockBuilder('Symfony\\Component\\HttpKernel\\Tests\\Fixtures\\KernelForTest')\n  120              ->disableOriginalConstructor()\n  121              ->setMethods(array('getContainerBuilder', 'prepareContainer', 'getCacheDir', 'getLogDir'))\n  ...\n  340          $kernel = $this->getKernelMockForIsClassInActiveBundleTest();\n  341  \n  342:         $this->assertTrue($kernel->isClassInActiveBundle(__NAMESPACE__.'\\Fixtures\\FooBarBundle\\SomeClass'));\n  343      }\n  344  \n  ...\n  359          $kernel = new KernelForTest('test', true);\n  360  \n  361:         $this->assertEquals(__DIR__.DIRECTORY_SEPARATOR.'Fixtures', realpath($kernel->getRootDir()));\n  362      }\n  363  \n  ...\n  366          $kernel = new KernelForTest('test', true);\n  367  \n  368:         $this->assertEquals('Fixtures', $kernel->getName());\n  369      }\n  370  \n  ...\n  419              ->expects($this->once())\n  420              ->method('getBundle')\n  421:             ->will($this->returnValue(array($this->getBundle(__DIR__.'/Fixtures/Bundle1Bundle'))))\n  422          ;\n  423  \n  ...\n  431              ->expects($this->once())\n  432              ->method('getBundle')\n  433:             ->will($this->returnValue(array($this->getBundle(__DIR__.'/Fixtures/Bundle1Bundle'))))\n  434          ;\n  435  \n  436:         $this->assertEquals(__DIR__.'/Fixtures/Bundle1Bundle/foo.txt', $kernel->locateResource('@Bundle1Bundle/foo.txt'));\n  437      }\n  438  \n  439      public function testLocateResourceReturnsTheFirstThatMatchesWithParent()\n  440      {\n  441:         $parent = $this->getBundle(__DIR__.'/Fixtures/Bundle1Bundle');\n  442:         $child = $this->getBundle(__DIR__.'/Fixtures/Bundle2Bundle');\n  443  \n  444          $kernel = $this->getKernel(array('getBundle'));\n  ...\n  449          ;\n  450  \n  451:         $this->assertEquals(__DIR__.'/Fixtures/Bundle2Bundle/foo.txt', $kernel->locateResource('@ParentAABundle/foo.txt'));\n  452:         $this->assertEquals(__DIR__.'/Fixtures/Bundle1Bundle/bar.txt', $kernel->locateResource('@ParentAABundle/bar.txt'));\n  453      }\n  454  \n  455      public function testLocateResourceReturnsAllMatches()\n  456      {\n  457:         $parent = $this->getBundle(__DIR__.'/Fixtures/Bundle1Bundle');\n  458:         $child = $this->getBundle(__DIR__.'/Fixtures/Bundle2Bundle');\n  459  \n  460          $kernel = $this->getKernel(array('getBundle'));\n  ...\n  466  \n  467          $this->assertEquals(array(\n  468:             __DIR__.'/Fixtures/Bundle2Bundle/foo.txt',\n  469:             __DIR__.'/Fixtures/Bundle1Bundle/foo.txt', ),\n  470              $kernel->locateResource('@Bundle1Bundle/foo.txt', null, false));\n  471      }\n  ...\n  478              ->method('getBundle')\n  479              ->will($this->returnValue(array(\n  480:                 $this->getBundle(__DIR__.'/Fixtures/Bundle1Bundle'),\n  481                  $this->getBundle(__DIR__.'/Foobar'),\n  482              )))\n  ...\n  484  \n  485          $this->assertEquals(\n  486:             array(__DIR__.'/Fixtures/Bundle1Bundle/foo.txt'),\n  487              $kernel->locateResource('@Bundle1Bundle/foo.txt', null, false)\n  488          );\n  ...\n  495              ->expects($this->once())\n  496              ->method('getBundle')\n  497:             ->will($this->returnValue(array($this->getBundle(__DIR__.'/Fixtures/Bundle1Bundle'))))\n  498          ;\n  499  \n  500          $this->assertEquals(\n  501:             __DIR__.'/Fixtures/Bundle1Bundle/foo.txt',\n  502:             $kernel->locateResource('@Bundle1Bundle/foo.txt', __DIR__.'/Fixtures')\n  503          );\n  504      }\n  ...\n  510              ->expects($this->once())\n  511              ->method('getBundle')\n  512:             ->will($this->returnValue(array($this->getBundle(__DIR__.'/Fixtures/FooBundle', null, null, 'FooBundle'))))\n  513          ;\n  514  \n  515          $this->assertEquals(\n  516:             __DIR__.'/Fixtures/Resources/FooBundle/foo.txt',\n  517:             $kernel->locateResource('@FooBundle/Resources/foo.txt', __DIR__.'/Fixtures/Resources')\n  518          );\n  519      }\n  ...\n  525              ->expects($this->once())\n  526              ->method('getBundle')\n  527:             ->will($this->returnValue(array($this->getBundle(__DIR__.'/Fixtures/Bundle1Bundle', null, null, 'Bundle1Bundle'))))\n  528          ;\n  529  \n  530          $this->assertEquals(array(\n  531:             __DIR__.'/Fixtures/Resources/Bundle1Bundle/foo.txt',\n  532:             __DIR__.'/Fixtures/Bundle1Bundle/Resources/foo.txt', ),\n  533:             $kernel->locateResource('@Bundle1Bundle/Resources/foo.txt', __DIR__.'/Fixtures/Resources', false)\n  534          );\n  535      }\n  ...\n  537      public function testLocateResourceOverrideBundleAndResourcesFolders()\n  538      {\n  539:         $parent = $this->getBundle(__DIR__.'/Fixtures/BaseBundle', null, 'BaseBundle', 'BaseBundle');\n  540:         $child = $this->getBundle(__DIR__.'/Fixtures/ChildBundle', 'ParentBundle', 'ChildBundle', 'ChildBundle');\n  541  \n  542          $kernel = $this->getKernel(array('getBundle'));\n  ...\n  548  \n  549          $this->assertEquals(array(\n  550:             __DIR__.'/Fixtures/Resources/ChildBundle/foo.txt',\n  551:             __DIR__.'/Fixtures/ChildBundle/Resources/foo.txt',\n  552:             __DIR__.'/Fixtures/BaseBundle/Resources/foo.txt',\n  553              ),\n  554:             $kernel->locateResource('@BaseBundle/Resources/foo.txt', __DIR__.'/Fixtures/Resources', false)\n  555          );\n  556  \n  557          $this->assertEquals(\n  558:             __DIR__.'/Fixtures/Resources/ChildBundle/foo.txt',\n  559:             $kernel->locateResource('@BaseBundle/Resources/foo.txt', __DIR__.'/Fixtures/Resources')\n  560          );\n  561  \n  562          try {\n  563:             $kernel->locateResource('@BaseBundle/Resources/hide.txt', __DIR__.'/Fixtures/Resources', false);\n  564              $this->fail('Hidden resources should raise an exception when returning an array of matching paths');\n  565          } catch (\\RuntimeException $e) {\n  ...\n  567  \n  568          try {\n  569:             $kernel->locateResource('@BaseBundle/Resources/hide.txt', __DIR__.'/Fixtures/Resources', true);\n  570              $this->fail('Hidden resources should raise an exception when returning the first matching path');\n  571          } catch (\\RuntimeException $e) {\n  ...\n  579              ->expects($this->exactly(2))\n  580              ->method('getBundle')\n  581:             ->will($this->returnValue(array($this->getBundle(__DIR__.'/Fixtures/FooBundle', null, null, 'FooBundle'))))\n  582          ;\n  583  \n  584          $this->assertEquals(\n  585:             __DIR__.'/Fixtures/Resources/FooBundle/',\n  586:             $kernel->locateResource('@FooBundle/Resources/', __DIR__.'/Fixtures/Resources')\n  587          );\n  588          $this->assertEquals(\n  589:             __DIR__.'/Fixtures/Resources/FooBundle',\n  590:             $kernel->locateResource('@FooBundle/Resources', __DIR__.'/Fixtures/Resources')\n  591          );\n  592  \n  ...\n  595              ->expects($this->exactly(2))\n  596              ->method('getBundle')\n  597:             ->will($this->returnValue(array($this->getBundle(__DIR__.'/Fixtures/Bundle1Bundle', null, null, 'Bundle1Bundle'))))\n  598          ;\n  599  \n  600          $this->assertEquals(\n  601:             __DIR__.'/Fixtures/Bundle1Bundle/Resources/',\n  602              $kernel->locateResource('@Bundle1Bundle/Resources/')\n  603          );\n  604          $this->assertEquals(\n  605:             __DIR__.'/Fixtures/Bundle1Bundle/Resources',\n  606              $kernel->locateResource('@Bundle1Bundle/Resources')\n  607          );\n  ...\n  829          $p = new \\ReflectionProperty($kernel, 'rootDir');\n  830          $p->setAccessible(true);\n  831:         $p->setValue($kernel, __DIR__.'/Fixtures');\n  832  \n  833          return $kernel;\n  ...\n  836      protected function getKernelForTest(array $methods = array())\n  837      {\n  838:         $kernel = $this->getMockBuilder('Symfony\\Component\\HttpKernel\\Tests\\Fixtures\\KernelForTest')\n  839              ->setConstructorArgs(array('test', false))\n  840              ->setMethods($methods)\n  ...\n  842          $p = new \\ReflectionProperty($kernel, 'rootDir');\n  843          $p->setAccessible(true);\n  844:         $p->setValue($kernel, __DIR__.'/Fixtures');\n  845  \n  846          return $kernel;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/http-kernel/Tests/Bundle/BundleTest.php:\n   12  namespace Symfony\\Component\\HttpKernel\\Tests\\Bundle;\n   13  \n   14: use Symfony\\Component\\HttpKernel\\Tests\\Fixtures\\ExtensionNotValidBundle\\ExtensionNotValidBundle;\n   15: use Symfony\\Component\\HttpKernel\\Tests\\Fixtures\\ExtensionPresentBundle\\ExtensionPresentBundle;\n   16: use Symfony\\Component\\HttpKernel\\Tests\\Fixtures\\ExtensionAbsentBundle\\ExtensionAbsentBundle;\n   17: use Symfony\\Component\\HttpKernel\\Tests\\Fixtures\\ExtensionPresentBundle\\Command\\FooCommand;\n   18  \n   19  class BundleTest extends \\PHPUnit_Framework_TestCase\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/http-kernel/Tests/EventListener/FragmentListenerTest.php:\n   66       * @expectedException \\Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException\n   67       */\n   68:     public function testAccessDeniedWithWrongSignature()\n   69      {\n   70          $request = Request::create('http://example.com/_fragment', 'GET', array(), array(), array(), array('REMOTE_ADDR' => '10.0.0.1'));\n   ..\n   76      }\n   77  \n   78:     public function testWithSignature()\n   79      {\n   80          $signer = new UriSigner('foo');\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/http-kernel/Tests/Fixtures/FooBarBundle.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\HttpKernel\\Tests\\Fixtures;\n   13  \n   14  use Symfony\\Component\\HttpKernel\\Bundle\\Bundle;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/http-kernel/Tests/Fixtures/KernelForOverrideName.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\HttpKernel\\Tests\\Fixtures;\n   13  \n   14  use Symfony\\Component\\HttpKernel\\Kernel;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/http-kernel/Tests/Fixtures/KernelForTest.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\HttpKernel\\Tests\\Fixtures;\n   13  \n   14  use Symfony\\Component\\HttpKernel\\Kernel;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/http-kernel/Tests/Fixtures/TestClient.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\HttpKernel\\Tests\\Fixtures;\n   13  \n   14  use Symfony\\Component\\HttpKernel\\Client;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/http-kernel/Tests/Fixtures/TestEventDispatcher.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\HttpKernel\\Tests\\Fixtures;\n   13  \n   14  use Symfony\\Component\\EventDispatcher\\Debug\\TraceableEventDispatcherInterface;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/http-kernel/Tests/Fixtures/ExtensionAbsentBundle/ExtensionAbsentBundle.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\HttpKernel\\Tests\\Fixtures\\ExtensionAbsentBundle;\n   13  \n   14  use Symfony\\Component\\HttpKernel\\Bundle\\Bundle;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/http-kernel/Tests/Fixtures/ExtensionLoadedBundle/ExtensionLoadedBundle.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\HttpKernel\\Tests\\Fixtures\\ExtensionLoadedBundle;\n   13  \n   14  use Symfony\\Component\\HttpKernel\\Bundle\\Bundle;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/http-kernel/Tests/Fixtures/ExtensionLoadedBundle/DependencyInjection/ExtensionLoadedExtension.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\HttpKernel\\Tests\\Fixtures\\ExtensionLoadedBundle\\DependencyInjection;\n   13  \n   14  use Symfony\\Component\\DependencyInjection\\ContainerBuilder;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/http-kernel/Tests/Fixtures/ExtensionNotValidBundle/ExtensionNotValidBundle.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\HttpKernel\\Tests\\Fixtures\\ExtensionNotValidBundle;\n   13  \n   14  use Symfony\\Component\\HttpKernel\\Bundle\\Bundle;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/http-kernel/Tests/Fixtures/ExtensionNotValidBundle/DependencyInjection/ExtensionNotValidExtension.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\HttpKernel\\Tests\\Fixtures\\ExtensionNotValidBundle\\DependencyInjection;\n   13  \n   14  class ExtensionNotValidExtension\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/http-kernel/Tests/Fixtures/ExtensionPresentBundle/ExtensionPresentBundle.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\HttpKernel\\Tests\\Fixtures\\ExtensionPresentBundle;\n   13  \n   14  use Symfony\\Component\\HttpKernel\\Bundle\\Bundle;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/http-kernel/Tests/Fixtures/ExtensionPresentBundle/Command/BarCommand.php:\n    1  <?php\n    2  \n    3: namespace Symfony\\Component\\HttpKernel\\Tests\\Fixtures\\ExtensionPresentBundle\\Command;\n    4  \n    5  use Symfony\\Component\\Console\\Command\\Command;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/http-kernel/Tests/Fixtures/ExtensionPresentBundle/Command/FooCommand.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\HttpKernel\\Tests\\Fixtures\\ExtensionPresentBundle\\Command;\n   13  \n   14  use Symfony\\Component\\Console\\Command\\Command;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/http-kernel/Tests/Fixtures/ExtensionPresentBundle/DependencyInjection/ExtensionPresentExtension.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\HttpKernel\\Tests\\Fixtures\\ExtensionPresentBundle\\DependencyInjection;\n   13  \n   14  use Symfony\\Component\\DependencyInjection\\ContainerBuilder;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/intl/Data/Bundle/Reader/BundleEntryReaderInterface.php:\n   27       *\n   28       * An entry can be selected from the resource bundle by passing the path\n   29:      * to that entry in the bundle. For example, if the bundle is structured\n   30       * like this:\n   31       *\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/intl/Data/Bundle/Reader/IntlBundleReader.php:\n   29      public function read($path, $locale)\n   30      {\n   31:         // Point for future extension: Modify this class so that it works also\n   32          // if the \\ResourceBundle class is not available.\n   33          try {\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/intl/Data/Util/RingBuffer.php:\n   17   * Implements a ring buffer.\n   18   *\n   19:  * A ring buffer is an array-like structure with a fixed size. If the buffer\n   20   * is full, the next written element overwrites the first bucket in the buffer,\n   21   * then the second and so on.\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/intl/DateFormatter/DateFormat/FullTransformer.php:\n  172       * @param string $pattern The pattern to create the reverse matching regular expression\n  173       *\n  174:      * @return string The reverse matching regular expression with named captures being formed by the\n  175       *                transformer index in the $transformer array\n  176       */\n  ...\n  197              if (isset($transformers[$transformerIndex])) {\n  198                  $transformer = $transformers[$transformerIndex];\n  199:                 $captureName = str_repeat($transformerIndex, $length);\n  200  \n  201:                 return \"(?P<$captureName>\".$transformer->getReverseMatchingRegExp($length).')';\n  202              }\n  203          }, $escapedPattern);\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/intl/Resources/data/currencies/cs.json:\n  956          \"TRL\": [\n  957              \"TRL\",\n  958:             \"turecká lira (1922–2005)\"\n  959          ],\n  960          \"TRY\": [\n  961              \"TRY\",\n  962:             \"turecká lira\"\n  963          ],\n  964          \"TTD\": [\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/intl/Resources/data/currencies/lg.json:\n   12          \"AUD\": [\n   13              \"A$\",\n   14:             \"Doola ey’Awusiturelya\"\n   15          ],\n   16          \"BHD\": [\n   ..\n   60          \"ERN\": [\n   61              \"ERN\",\n   62:             \"Nakifa ey’Eritureya\"\n   63          ],\n   64          \"ETB\": [\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/intl/Resources/data/currencies/pl.json:\n  864          \"TRL\": [\n  865              \"TRL\",\n  866:             \"lira turecka (1922–2005)\"\n  867          ],\n  868          \"TRY\": [\n  869              \"TRY\",\n  870:             \"lira turecka\"\n  871          ],\n  872          \"TTD\": [\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/intl/Resources/data/currencies/sk.json:\n  852          \"TRY\": [\n  853              \"TRY\",\n  854:             \"turecká líra\"\n  855          ],\n  856          \"TTD\": [\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/intl/Resources/data/languages/cs.json:\n  106          \"cps\": \"kapiznonština\",\n  107          \"cr\": \"kríjština\",\n  108:         \"crh\": \"turečtina (krymská)\",\n  109          \"cs\": \"čeština\",\n  110          \"csb\": \"kašubština\",\n  ...\n  404          \"os\": \"osetština\",\n  405          \"osa\": \"osage\",\n  406:         \"ota\": \"turečtina (osmanská)\",\n  407          \"pa\": \"paňdžábština\",\n  408          \"pag\": \"pangasinanština\",\n  ...\n  534          \"tog\": \"tonžština (nyasa)\",\n  535          \"tpi\": \"tok pisin\",\n  536:         \"tr\": \"turečtina\",\n  537          \"tru\": \"turojština\",\n  538          \"trv\": \"taroko\",\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/intl/Resources/data/languages/pl.json:\n  106          \"cps\": \"capiznon\",\n  107          \"cr\": \"kri\",\n  108:         \"crh\": \"krymski turecki\",\n  109          \"cs\": \"czeski\",\n  110          \"csb\": \"kaszubski\",\n  ...\n  412          \"os\": \"osetyjski\",\n  413          \"osa\": \"osage\",\n  414:         \"ota\": \"osmańsko-turecki\",\n  415          \"pa\": \"pendżabski\",\n  416          \"pag\": \"pangasino\",\n  ...\n  544          \"tog\": \"tonga (Niasa)\",\n  545          \"tpi\": \"tok pisin\",\n  546:         \"tr\": \"turecki\",\n  547          \"tru\": \"turoyo\",\n  548          \"trv\": \"taroko\",\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/intl/Resources/data/languages/sk.json:\n   87          \"cop\": \"koptčina\",\n   88          \"cr\": \"krí\",\n   89:         \"crh\": \"krymská turečtina\",\n   90          \"cs\": \"čeština\",\n   91          \"csb\": \"kašubčina\",\n   ..\n  355          \"os\": \"osetčina\",\n  356          \"osa\": \"osagčina\",\n  357:         \"ota\": \"osmanská turečtina\",\n  358          \"pa\": \"pandžábčina\",\n  359          \"pag\": \"pangasinančina\",\n  ...\n  463          \"tog\": \"ňasa tonga\",\n  464          \"tpi\": \"tok pisin\",\n  465:         \"tr\": \"turečtina\",\n  466          \"trv\": \"taroko\",\n  467          \"ts\": \"tsonga\",\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/intl/Resources/data/locales/cs.json:\n  520          \"to\": \"tongánština\",\n  521          \"to_TO\": \"tongánština (Tonga)\",\n  522:         \"tr\": \"turečtina\",\n  523:         \"tr_CY\": \"turečtina (Kypr)\",\n  524:         \"tr_TR\": \"turečtina (Turecko)\",\n  525          \"ug\": \"ujgurština\",\n  526          \"ug_Arab\": \"ujgurština (arabské)\",\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/intl/Resources/data/locales/lg.json:\n   11          \"ar_DZ\": \"Luwarabu (Aligerya)\",\n   12          \"ar_EG\": \"Luwarabu (Misiri)\",\n   13:         \"ar_ER\": \"Luwarabu (Eritureya)\",\n   14          \"ar_IL\": \"Luwarabu (Yisirayeri)\",\n   15          \"ar_IQ\": \"Luwarabu (Yiraaka)\",\n   ..\n   54          \"en_AI\": \"Lungereza (Angwila)\",\n   55          \"en_AS\": \"Lungereza (Samowa omumerika)\",\n   56:         \"en_AU\": \"Lungereza (Awusitureliya)\",\n   57          \"en_BB\": \"Lungereza (Barabadosi)\",\n   58          \"en_BE\": \"Lungereza (Bubirigi)\",\n   ..\n   65          \"en_CM\": \"Lungereza (Kameruuni)\",\n   66          \"en_DM\": \"Lungereza (Dominika)\",\n   67:         \"en_ER\": \"Lungereza (Eritureya)\",\n   68          \"en_FJ\": \"Lungereza (Fiji)\",\n   69          \"en_FK\": \"Lungereza (Bizinga by’eFalikalandi)\",\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/intl/Resources/data/locales/pl.json:\n  520          \"to\": \"tonga\",\n  521          \"to_TO\": \"tonga (Tonga)\",\n  522:         \"tr\": \"turecki\",\n  523:         \"tr_CY\": \"turecki (Cypr)\",\n  524:         \"tr_TR\": \"turecki (Turcja)\",\n  525          \"ug\": \"ujgurski\",\n  526          \"ug_Arab\": \"ujgurski (arabskie)\",\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/intl/Resources/data/locales/sk.json:\n  520          \"to\": \"tongčina\",\n  521          \"to_TO\": \"tongčina (Tonga)\",\n  522:         \"tr\": \"turečtina\",\n  523:         \"tr_CY\": \"turečtina (Cyprus)\",\n  524:         \"tr_TR\": \"turečtina (Turecko)\",\n  525          \"ug\": \"ujgurčina\",\n  526          \"ug_Arab\": \"ujgurčina (arabské)\",\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/intl/Resources/data/regions/lg.json:\n   13          \"AS\": \"Samowa omumerika\",\n   14          \"AT\": \"Awusituriya\",\n   15:         \"AU\": \"Awusitureliya\",\n   16          \"AW\": \"Aruba\",\n   17          \"AZ\": \"Azerebayijaani\",\n   ..\n   59          \"EE\": \"Esitoniya\",\n   60          \"EG\": \"Misiri\",\n   61:         \"ER\": \"Eritureya\",\n   62          \"ES\": \"Sipeyini\",\n   63          \"ET\": \"Esyopya\",\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/intl/Resources/data/scripts/fr.json:\n   99          \"Sara\": \"sarati\",\n  100          \"Saur\": \"saurashtra\",\n  101:         \"Sgnw\": \"écriture des signes\",\n  102          \"Shaw\": \"shavien\",\n  103          \"Sinh\": \"cinghalais\",\n  ...\n  131          \"Zxxx\": \"non écrit\",\n  132          \"Zyyy\": \"commun\",\n  133:         \"Zzzz\": \"écriture inconnue\"\n  134      }\n  135  }\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/intl/Tests/Data/Bundle/Reader/IntlBundleReaderTest.php:\n   37      public function testReadReturnsArrayAccess()\n   38      {\n   39:         $data = $this->reader->read(__DIR__.'/Fixtures/res', 'ro');\n   40  \n   41          $this->assertInstanceOf('\\ArrayAccess', $data);\n   ..\n   47      {\n   48          // \"alias\" = \"ro\"\n   49:         $data = $this->reader->read(__DIR__.'/Fixtures/res', 'alias');\n   50  \n   51          $this->assertInstanceOf('\\ArrayAccess', $data);\n   ..\n   65  \n   66          // \"ro_MD\" -> \"ro\"\n   67:         $data = $this->reader->read(__DIR__.'/Fixtures/res', 'ro_MD');\n   68  \n   69          $this->assertInstanceOf('\\ArrayAccess', $data);\n   ..\n   85  \n   86          // \"mo\" = \"ro_MD\" -> \"ro\"\n   87:         $data = $this->reader->read(__DIR__.'/Fixtures/res', 'mo');\n   88  \n   89          $this->assertInstanceOf('\\ArrayAccess', $data);\n   ..\n   99      public function testReadFailsIfNonExistingLocale()\n  100      {\n  101:         $this->reader->read(__DIR__.'/Fixtures/res', 'foo');\n  102      }\n  103  \n  ...\n  107      public function testReadFailsIfNonExistingFallbackLocale()\n  108      {\n  109:         $this->reader->read(__DIR__.'/Fixtures/res', 'ro_AT');\n  110      }\n  111  \n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/intl/Tests/Data/Bundle/Reader/JsonBundleReaderTest.php:\n   31      public function testReadReturnsArray()\n   32      {\n   33:         $data = $this->reader->read(__DIR__.'/Fixtures/json', 'en');\n   34  \n   35          $this->assertTrue(is_array($data));\n   ..\n   43      public function testReadFailsIfNonExistingLocale()\n   44      {\n   45:         $this->reader->read(__DIR__.'/Fixtures/json', 'foo');\n   46      }\n   47  \n   ..\n   59      public function testReadFailsIfNotAFile()\n   60      {\n   61:         $this->reader->read(__DIR__.'/Fixtures/NotAFile', 'en');\n   62      }\n   63  \n   ..\n   67      public function testReadFailsIfInvalidJson()\n   68      {\n   69:         $this->reader->read(__DIR__.'/Fixtures/json', 'en_Invalid');\n   70      }\n   71  }\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/intl/Tests/Data/Bundle/Reader/PhpBundleReaderTest.php:\n   31      public function testReadReturnsArray()\n   32      {\n   33:         $data = $this->reader->read(__DIR__.'/Fixtures/php', 'en');\n   34  \n   35          $this->assertTrue(is_array($data));\n   ..\n   43      public function testReadFailsIfNonExistingLocale()\n   44      {\n   45:         $this->reader->read(__DIR__.'/Fixtures/php', 'foo');\n   46      }\n   47  \n   ..\n   59      public function testReadFailsIfNotAFile()\n   60      {\n   61:         $this->reader->read(__DIR__.'/Fixtures/NotAFile', 'en');\n   62      }\n   63  }\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/intl/Tests/Data/Bundle/Writer/JsonBundleWriterTest.php:\n   70          ));\n   71  \n   72:         $this->assertFileEquals(__DIR__.'/Fixtures/en.json', $this->directory.'/en.json');\n   73      }\n   74  \n   ..\n   80          }\n   81  \n   82:         $bundle = new \\ResourceBundle('rb', __DIR__.'/Fixtures', false);\n   83  \n   84          $this->writer->write($this->directory, 'en', $bundle);\n   85  \n   86:         $this->assertFileEquals(__DIR__.'/Fixtures/rb.json', $this->directory.'/en.json');\n   87      }\n   88  }\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/intl/Tests/Data/Bundle/Writer/PhpBundleWriterTest.php:\n   62          ));\n   63  \n   64:         $this->assertFileEquals(__DIR__.'/Fixtures/en.php', $this->directory.'/en.php');\n   65      }\n   66  \n   ..\n   76          }\n   77  \n   78:         $bundle = new \\ResourceBundle('rb', __DIR__.'/Fixtures', false);\n   79  \n   80          $this->writer->write($this->directory, 'en', $bundle);\n   81  \n   82:         $this->assertFileEquals(__DIR__.'/Fixtures/rb.php', $this->directory.'/en.php');\n   83      }\n   84  }\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/intl/Tests/Data/Bundle/Writer/TextBundleWriterTest.php:\n   66          ));\n   67  \n   68:         $this->assertFileEquals(__DIR__.'/Fixtures/en.txt', $this->directory.'/en.txt');\n   69      }\n   70  \n   ..\n   87          )));\n   88  \n   89:         $this->assertFileEquals(__DIR__.'/Fixtures/en.txt', $this->directory.'/en.txt');\n   90      }\n   91  \n   ..\n   98          $this->writer->write($this->directory, 'en_nofallback', $data, $fallback = false);\n   99  \n  100:         $this->assertFileEquals(__DIR__.'/Fixtures/en_nofallback.txt', $this->directory.'/en_nofallback.txt');\n  101      }\n  102  \n  ...\n  111          ));\n  112  \n  113:         $this->assertFileEquals(__DIR__.'/Fixtures/escaped.txt', $this->directory.'/escaped.txt');\n  114      }\n  115  }\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/intl/Tests/NumberFormatter/AbstractNumberFormatterTest.php:\n  412      public function formatRoundingModeRoundHalfUpProvider()\n  413      {\n  414:         // The commented value is differently rounded by intl's NumberFormatter in 32 and 64 bit architectures\n  415          return array(\n  416              array(1.121, '1.12'),\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/intl/Util/IntlTestHelper.php:\n   51          //\n   52          //   * run only for one ICU version (see Intl::getIcuStubVersion())\n   53:         //     there is no need to add control structures to your tests that\n   54          //     change the test depending on the ICU version.\n   55          //\n   ..\n   59  \n   60      /**\n   61:      * Should be called before tests that require a feature-complete intl\n   62       * implementation.\n   63       *\n   ..\n   83          //\n   84          //   * run only for one ICU version (see Intl::getIcuStubVersion())\n   85:         //     there is no need to add control structures to your tests that\n   86          //     change the test depending on the ICU version.\n   87          //   * always use the C intl classes\n   ..\n   89  \n   90      /**\n   91:      * Skips the test unless the current system has a 32bit architecture.\n   92       *\n   93       * @param \\PhpUnit_Framework_TestCase $testCase\n   ..\n  101  \n  102      /**\n  103:      * Skips the test unless the current system has a 64bit architecture.\n  104       *\n  105       * @param \\PhpUnit_Framework_TestCase $testCase\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/options-resolver/OptionsResolver.php:\n  121       *\n  122       * If the default value should be set based on other options, you can pass\n  123:      * a closure with the following signature:\n  124       *\n  125       *     function (Options $options) {\n  ...\n  138       *\n  139       * If you want to access the previously set default value, add a second\n  140:      * argument to the closure's signature:\n  141       *\n  142       *     $options->setDefault('name', 'Default Name');\n  ...\n  377       * Sets the normalizer for an option.\n  378       *\n  379:      * The normalizer should be a closure with the following signature:\n  380       *\n  381       * ```php\n  ...\n  452       *\n  453       * Instead of passing values, you may also pass a closures with the\n  454:      * following signature:\n  455       *\n  456       *     function ($value) {\n  ...\n  477          // BC\n  478          if (is_array($option) && null === $allowedValues) {\n  479:             @trigger_error('Calling the '.__METHOD__.' method with an array of options is deprecated since version 2.6 and will be removed in 3.0. Use the new signature with a single option instead.', E_USER_DEPRECATED);\n  480  \n  481              foreach ($option as $optionName => $optionValues) {\n  ...\n  508       *\n  509       * Instead of passing values, you may also pass a closures with the\n  510:      * following signature:\n  511       *\n  512       *     function ($value) {\n  ...\n  533          // BC\n  534          if (is_array($option) && null === $allowedValues) {\n  535:             @trigger_error('Calling the '.__METHOD__.' method with an array of options is deprecated since version 2.6 and will be removed in 3.0. Use the new signature with a single option instead.', E_USER_DEPRECATED);\n  536  \n  537              foreach ($option as $optionName => $optionValues) {\n  ...\n  589          // BC\n  590          if (is_array($option) && null === $allowedTypes) {\n  591:             @trigger_error('Calling the '.__METHOD__.' method with an array of options is deprecated since version 2.6 and will be removed in 3.0. Use the new signature with a single option instead.', E_USER_DEPRECATED);\n  592  \n  593              foreach ($option as $optionName => $optionTypes) {\n  ...\n  639          // BC\n  640          if (is_array($option) && null === $allowedTypes) {\n  641:             @trigger_error('Calling the '.__METHOD__.' method with an array of options is deprecated since version 2.6 and will be removed in 3.0. Use the new signature with a single option instead.', E_USER_DEPRECATED);\n  642  \n  643              foreach ($option as $optionName => $optionTypes) {\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/options-resolver/OptionsResolverInterface.php:\n   28       * The options can either be values of any types or closures that\n   29       * evaluate the option value lazily. These closures must have one\n   30:      * of the following signatures:\n   31       *\n   32       * <code>\n   ..\n  153       * Sets normalizers that are applied on resolved options.\n  154       *\n  155:      * The normalizers should be closures with the following signature:\n  156       *\n  157       * <code>\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/property-access/PropertyAccessor.php:\n  240  \n  241      /**\n  242:      * Reads a key from an array-like structure.\n  243       *\n  244       * @param \\ArrayAccess|array $array The array or \\ArrayAccess object to read from\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/property-access/Tests/PropertyAccessorCollectionTest.php:\n   75  class PropertyAccessorCollectionTest_CompositeCar\n   76  {\n   77:     public function getStructure()\n   78      {\n   79      }\n   80  \n   81:     public function setStructure($structure)\n   82      {\n   83      }\n   84  }\n   85  \n   86: class PropertyAccessorCollectionTest_CarStructure\n   87  {\n   88      public function addAxis($axis)\n   ..\n  123      {\n  124          $car = $this->getMock(__CLASS__.'_CompositeCar');\n  125:         $structure = $this->getMock(__CLASS__.'_CarStructure');\n  126          $axesBefore = $this->getContainer(array(1 => 'second', 3 => 'fourth'));\n  127          $axesAfter = $this->getContainer(array(0 => 'first', 1 => 'second', 2 => 'third'));\n  128  \n  129          $car->expects($this->any())\n  130:             ->method('getStructure')\n  131:             ->will($this->returnValue($structure));\n  132  \n  133:         $structure->expects($this->at(0))\n  134              ->method('getAxes')\n  135              ->will($this->returnValue($axesBefore));\n  136:         $structure->expects($this->at(1))\n  137              ->method('removeAxis')\n  138              ->with('fourth');\n  139:         $structure->expects($this->at(2))\n  140              ->method('addAxis')\n  141              ->with('first');\n  142:         $structure->expects($this->at(3))\n  143              ->method('addAxis')\n  144              ->with('third');\n  145  \n  146:         $this->propertyAccessor->setValue($car, 'structure.axes', $axesAfter);\n  147      }\n  148  \n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/property-access/Tests/PropertyAccessorNonTraversableArrayObjectTest.php:\n   12  namespace Symfony\\Component\\PropertyAccess\\Tests;\n   13  \n   14: use Symfony\\Component\\PropertyAccess\\Tests\\Fixtures\\NonTraversableArrayObject;\n   15  \n   16  class PropertyAccessorNonTraversableArrayObjectTest extends PropertyAccessorArrayAccessTest\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/property-access/Tests/PropertyAccessorTest.php:\n   13  \n   14  use Symfony\\Component\\PropertyAccess\\PropertyAccessor;\n   15: use Symfony\\Component\\PropertyAccess\\Tests\\Fixtures\\TestClass;\n   16: use Symfony\\Component\\PropertyAccess\\Tests\\Fixtures\\TestClassMagicCall;\n   17: use Symfony\\Component\\PropertyAccess\\Tests\\Fixtures\\TestClassMagicGet;\n   18: use Symfony\\Component\\PropertyAccess\\Tests\\Fixtures\\Ticket5775Object;\n   19: use Symfony\\Component\\PropertyAccess\\Tests\\Fixtures\\TestClassSetValue;\n   20: use Symfony\\Component\\PropertyAccess\\Tests\\Fixtures\\TestClassIsWritable;\n   21  \n   22  class PropertyAccessorTest extends \\PHPUnit_Framework_TestCase\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/property-access/Tests/PropertyAccessorTraversableArrayObjectTest.php:\n   12  namespace Symfony\\Component\\PropertyAccess\\Tests;\n   13  \n   14: use Symfony\\Component\\PropertyAccess\\Tests\\Fixtures\\TraversableArrayObject;\n   15  \n   16  class PropertyAccessorTraversableArrayObjectTest extends PropertyAccessorCollectionTest\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/property-access/Tests/Fixtures/NonTraversableArrayObject.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\PropertyAccess\\Tests\\Fixtures;\n   13  \n   14  /**\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/property-access/Tests/Fixtures/TestClass.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\PropertyAccess\\Tests\\Fixtures;\n   13  \n   14  class TestClass\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/property-access/Tests/Fixtures/TestClassIsWritable.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\PropertyAccess\\Tests\\Fixtures;\n   13  \n   14  class TestClassIsWritable\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/property-access/Tests/Fixtures/TestClassMagicCall.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\PropertyAccess\\Tests\\Fixtures;\n   13  \n   14  class TestClassMagicCall\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/property-access/Tests/Fixtures/TestClassMagicGet.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\PropertyAccess\\Tests\\Fixtures;\n   13  \n   14  class TestClassMagicGet\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/property-access/Tests/Fixtures/TestClassSetValue.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\PropertyAccess\\Tests\\Fixtures;\n   13  \n   14  class TestClassSetValue\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/property-access/Tests/Fixtures/Ticket5775Object.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\PropertyAccess\\Tests\\Fixtures;\n   13  \n   14  class Ticket5775Object\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/property-access/Tests/Fixtures/TraversableArrayObject.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\PropertyAccess\\Tests\\Fixtures;\n   13  \n   14  /**\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/routing/CHANGELOG.md:\n   68     ```\n   69  \n   70:  * [BC BREAK] RouteCollection does not behave like a tree structure anymore but as\n   71     a flat array of Routes. So when using PHP to build the RouteCollection, you must\n   72     make sure to add routes to the sub-collection before adding it to the parent\n   ..\n  112   * [DEPRECATION] The method `RouteCollection::getPrefix()` has been deprecated\n  113     because it suggested that all routes in the collection would have this prefix, which is\n  114:    not necessarily true. On top of that, since there is no tree structure anymore, this method\n  115     is also useless. Don't worry about performance, prefix optimization for matching is still done\n  116     in the dumper, which was also improved in 2.2.0 to find even more grouping possibilities.\n  ...\n  150     now accepts more values and you should use the constants defined in `UrlGeneratorInterface` for\n  151     claritiy. The old method calls with a Boolean parameter will continue to work because they\n  152:    equal the signature using the constants.\n  153  \n  154  2.1.0\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/routing/Route.php:\n  256          $this->schemes = array_map('strtolower', (array) $schemes);\n  257  \n  258:         // this is to keep BC and will be removed in a future version\n  259          if ($this->schemes) {\n  260              $this->requirements['_scheme'] = implode('|', $this->schemes);\n  ...\n  305          $this->methods = array_map('strtoupper', (array) $methods);\n  306  \n  307:         // this is to keep BC and will be removed in a future version\n  308          if ($this->methods) {\n  309              $this->requirements['_method'] = implode('|', $this->methods);\n  ...\n  654          }\n  655  \n  656:         // this is to keep BC and will be removed in a future version\n  657          if ('_scheme' === $key) {\n  658              @trigger_error('The \"_scheme\" requirement is deprecated since version 2.2 and will be removed in 3.0. Use the setSchemes() method instead.', E_USER_DEPRECATED);\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/routing/Generator/UrlGenerator.php:\n   59       */\n   60      protected $decodedChars = array(\n   61:         // the slash can be used to designate a hierarchical structure and we want allow using it with this meaning\n   62          // some webservers don't allow the slash in encoded form in the path for security reasons anyway\n   63          // see http://stackoverflow.com/questions/4069002/http-400-if-2f-part-of-get-url-in-jboss\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/routing/Loader/XmlFileLoader.php:\n  212       *\n  213       * @throws \\InvalidArgumentException When loading of XML file fails because of syntax errors\n  214:      *                                   or when the XML structure is not as expected by the scheme -\n  215       *                                   see validate()\n  216       */\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/routing/Tests/RouteCollectionTest.php:\n  105      {\n  106          $collection = new RouteCollection();\n  107:         $collection->addResource($foo = new FileResource(__DIR__.'/Fixtures/foo.xml'));\n  108          $collection1 = new RouteCollection();\n  109:         $collection1->addResource($foo1 = new FileResource(__DIR__.'/Fixtures/foo1.xml'));\n  110          $collection->addCollection($collection1);\n  111          $this->assertEquals(array($foo, $foo1), $collection->getResources(), '->addCollection() merges resources');\n  ...\n  176      {\n  177          $collection = new RouteCollection();\n  178:         $collection->addResource($foo = new FileResource(__DIR__.'/Fixtures/foo.xml'));\n  179:         $collection->addResource($bar = new FileResource(__DIR__.'/Fixtures/bar.xml'));\n  180:         $collection->addResource(new FileResource(__DIR__.'/Fixtures/foo.xml'));\n  181  \n  182          $this->assertEquals(array($foo, $bar), $collection->getResources(),\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/routing/Tests/Fixtures/CustomXmlFileLoader.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\Routing\\Tests\\Fixtures;\n   13  \n   14  use Symfony\\Component\\Routing\\Loader\\XmlFileLoader;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/routing/Tests/Fixtures/RedirectableUrlMatcher.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\Routing\\Tests\\Fixtures;\n   13  \n   14  use Symfony\\Component\\Routing\\Matcher\\UrlMatcher;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/routing/Tests/Fixtures/AnnotatedClasses/AbstractClass.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\Routing\\Tests\\Fixtures\\AnnotatedClasses;\n   13  \n   14  abstract class AbstractClass\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/routing/Tests/Fixtures/AnnotatedClasses/BarClass.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\Routing\\Tests\\Fixtures\\AnnotatedClasses;\n   13  \n   14  class BarClass\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/routing/Tests/Fixtures/AnnotatedClasses/FooClass.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\Routing\\Tests\\Fixtures\\AnnotatedClasses;\n   13  \n   14  class FooClass\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/routing/Tests/Fixtures/dumper/url_matcher2.php:\n   11   * by the Symfony Routing Component.\n   12   */\n   13: class ProjectUrlMatcher extends Symfony\\Component\\Routing\\Tests\\Fixtures\\RedirectableUrlMatcher\n   14  {\n   15      /**\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/routing/Tests/Fixtures/OtherAnnotatedClasses/VariadicClass.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\Routing\\Tests\\Fixtures\\OtherAnnotatedClasses;\n   13  \n   14  class VariadicClass\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/routing/Tests/Loader/AnnotationClassLoaderTest.php:\n   40      public function testLoadAbstractClass()\n   41      {\n   42:         $this->loader->load('Symfony\\Component\\Routing\\Tests\\Fixtures\\AnnotatedClasses\\AbstractClass');\n   43      }\n   44  \n   ..\n   74          return array(\n   75              array(\n   76:                 'Symfony\\Component\\Routing\\Tests\\Fixtures\\AnnotatedClasses\\BarClass',\n   77                  array('name' => 'route1', 'path' => '/path'),\n   78                  array('arg2' => 'defaultValue2', 'arg3' => 'defaultValue3'),\n   79              ),\n   80              array(\n   81:                 'Symfony\\Component\\Routing\\Tests\\Fixtures\\AnnotatedClasses\\BarClass',\n   82                  array('defaults' => array('arg2' => 'foo'), 'requirements' => array('arg3' => '\\w+')),\n   83                  array('arg2' => 'defaultValue2', 'arg3' => 'defaultValue3'),\n   84              ),\n   85              array(\n   86:                 'Symfony\\Component\\Routing\\Tests\\Fixtures\\AnnotatedClasses\\BarClass',\n   87                  array('options' => array('foo' => 'bar')),\n   88                  array('arg2' => 'defaultValue2', 'arg3' => 'defaultValue3'),\n   89              ),\n   90              array(\n   91:                 'Symfony\\Component\\Routing\\Tests\\Fixtures\\AnnotatedClasses\\BarClass',\n   92                  array('schemes' => array('https'), 'methods' => array('GET')),\n   93                  array('arg2' => 'defaultValue2', 'arg3' => 'defaultValue3'),\n   94              ),\n   95              array(\n   96:                 'Symfony\\Component\\Routing\\Tests\\Fixtures\\AnnotatedClasses\\BarClass',\n   97                  array('condition' => 'context.getMethod() == \"GET\"'),\n   98                  array('arg2' => 'defaultValue2', 'arg3' => 'defaultValue3'),\n   ..\n  141              count($defaults),\n  142              array_intersect_assoc($defaults, $route->getDefaults()),\n  143:             '->load preserves defaults annotation and merges them with default arguments in method signature'\n  144          );\n  145          $this->assertEquals($routeData['schemes'], $route->getSchemes(), '->load preserves schemes annotation');\n  ...\n  174          ;\n  175  \n  176:         $routeCollection = $this->loader->load('Symfony\\Component\\Routing\\Tests\\Fixtures\\AnnotatedClasses\\BarClass');\n  177          $route = $routeCollection->get($methodRouteData['name']);\n  178  \n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/routing/Tests/Loader/AnnotationDirectoryLoaderTest.php:\n   38          ;\n   39  \n   40:         $this->loader->load(__DIR__.'/../Fixtures/AnnotatedClasses');\n   41      }\n   42  \n   43      public function testSupports()\n   44      {\n   45:         $fixturesDir = __DIR__.'/../Fixtures';\n   46  \n   47:         $this->assertTrue($this->loader->supports($fixturesDir), '->supports() returns true if the resource is loadable');\n   48          $this->assertFalse($this->loader->supports('foo.foo'), '->supports() returns true if the resource is loadable');\n   49  \n   50:         $this->assertTrue($this->loader->supports($fixturesDir, 'annotation'), '->supports() checks the resource type if specified');\n   51:         $this->assertFalse($this->loader->supports($fixturesDir, 'foo'), '->supports() checks the resource type if specified');\n   52      }\n   53  }\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/routing/Tests/Loader/AnnotationFileLoaderTest.php:\n   33          $this->reader->expects($this->once())->method('getClassAnnotation');\n   34  \n   35:         $this->loader->load(__DIR__.'/../Fixtures/AnnotatedClasses/FooClass.php');\n   36      }\n   37  \n   ..\n   46              ->will($this->returnValue(array($route)));\n   47  \n   48:         $this->loader->load(__DIR__.'/../Fixtures/OtherAnnotatedClasses/VariadicClass.php');\n   49      }\n   50  \n   51      public function testSupports()\n   52      {\n   53:         $fixture = __DIR__.'/../Fixtures/annotated.php';\n   54  \n   55:         $this->assertTrue($this->loader->supports($fixture), '->supports() returns true if the resource is loadable');\n   56          $this->assertFalse($this->loader->supports('foo.foo'), '->supports() returns true if the resource is loadable');\n   57  \n   58:         $this->assertTrue($this->loader->supports($fixture, 'annotation'), '->supports() checks the resource type if specified');\n   59:         $this->assertFalse($this->loader->supports($fixture, 'foo'), '->supports() checks the resource type if specified');\n   60      }\n   61  }\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/routing/Tests/Loader/PhpFileLoaderTest.php:\n   30      public function testLoadWithRoute()\n   31      {\n   32:         $loader = new PhpFileLoader(new FileLocator(array(__DIR__.'/../Fixtures')));\n   33          $routeCollection = $loader->load('validpattern.php');\n   34          $routes = $routeCollection->all();\n   ..\n   49      public function testLoadWithImport()\n   50      {\n   51:         $loader = new PhpFileLoader(new FileLocator(array(__DIR__.'/../Fixtures')));\n   52          $routeCollection = $loader->load('validresource.php');\n   53          $routes = $routeCollection->all();\n   ..\n   68      public function testThatDefiningVariableInConfigFileHasNoSideEffects()\n   69      {\n   70:         $locator = new FileLocator(array(__DIR__.'/../Fixtures'));\n   71          $loader = new PhpFileLoader($locator);\n   72          $routeCollection = $loader->load('with_define_path_variable.php');\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/routing/Tests/Loader/XmlFileLoaderTest.php:\n   14  use Symfony\\Component\\Config\\FileLocator;\n   15  use Symfony\\Component\\Routing\\Loader\\XmlFileLoader;\n   16: use Symfony\\Component\\Routing\\Tests\\Fixtures\\CustomXmlFileLoader;\n   17  \n   18  class XmlFileLoaderTest extends \\PHPUnit_Framework_TestCase\n   ..\n   31      public function testLoadWithRoute()\n   32      {\n   33:         $loader = new XmlFileLoader(new FileLocator(array(__DIR__.'/../Fixtures')));\n   34          $routeCollection = $loader->load('validpattern.xml');\n   35          $route = $routeCollection->get('blog_show');\n   ..\n   51      public function testLegacyRouteDefinitionLoading()\n   52      {\n   53:         $loader = new XmlFileLoader(new FileLocator(array(__DIR__.'/../Fixtures')));\n   54          $routeCollection = $loader->load('legacy_validpattern.xml');\n   55          $route = $routeCollection->get('blog_show_legacy');\n   ..\n   68      public function testLoadWithNamespacePrefix()\n   69      {\n   70:         $loader = new XmlFileLoader(new FileLocator(array(__DIR__.'/../Fixtures')));\n   71          $routeCollection = $loader->load('namespaceprefix.xml');\n   72  \n   ..\n   85      public function testLoadWithImport()\n   86      {\n   87:         $loader = new XmlFileLoader(new FileLocator(array(__DIR__.'/../Fixtures')));\n   88          $routeCollection = $loader->load('validresource.xml');\n   89          $routes = $routeCollection->all();\n   ..\n  108      public function testLoadThrowsExceptionWithInvalidFile($filePath)\n  109      {\n  110:         $loader = new XmlFileLoader(new FileLocator(array(__DIR__.'/../Fixtures')));\n  111          $loader->load($filePath);\n  112      }\n  ...\n  118      public function testLoadThrowsExceptionWithInvalidFileEvenWithoutSchemaValidation($filePath)\n  119      {\n  120:         $loader = new CustomXmlFileLoader(new FileLocator(array(__DIR__.'/../Fixtures')));\n  121          $loader->load($filePath);\n  122      }\n  ...\n  133      public function testDocTypeIsNotAllowed()\n  134      {\n  135:         $loader = new XmlFileLoader(new FileLocator(array(__DIR__.'/../Fixtures')));\n  136          $loader->load('withdoctype.xml');\n  137      }\n  ...\n  139      public function testNullValues()\n  140      {\n  141:         $loader = new XmlFileLoader(new FileLocator(array(__DIR__.'/../Fixtures')));\n  142          $routeCollection = $loader->load('null_values.xml');\n  143          $route = $routeCollection->get('blog_show');\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/routing/Tests/Loader/YamlFileLoaderTest.php:\n   33      public function testLoadDoesNothingIfEmpty()\n   34      {\n   35:         $loader = new YamlFileLoader(new FileLocator(array(__DIR__.'/../Fixtures')));\n   36          $collection = $loader->load('empty.yml');\n   37  \n   38          $this->assertEquals(array(), $collection->all());\n   39:         $this->assertEquals(array(new FileResource(realpath(__DIR__.'/../Fixtures/empty.yml'))), $collection->getResources());\n   40      }\n   41  \n   ..\n   46      public function testLoadThrowsExceptionWithInvalidFile($filePath)\n   47      {\n   48:         $loader = new YamlFileLoader(new FileLocator(array(__DIR__.'/../Fixtures')));\n   49          $loader->load($filePath);\n   50      }\n   ..\n   57      public function testLoadSpecialRouteName()\n   58      {\n   59:         $loader = new YamlFileLoader(new FileLocator(array(__DIR__.'/../Fixtures')));\n   60          $routeCollection = $loader->load('special_route_name.yml');\n   61          $route = $routeCollection->get('#$péß^a|');\n   ..\n   67      public function testLoadWithRoute()\n   68      {\n   69:         $loader = new YamlFileLoader(new FileLocator(array(__DIR__.'/../Fixtures')));\n   70          $routeCollection = $loader->load('validpattern.yml');\n   71          $route = $routeCollection->get('blog_show');\n   ..\n   87      public function testLegacyRouteDefinitionLoading()\n   88      {\n   89:         $loader = new YamlFileLoader(new FileLocator(array(__DIR__.'/../Fixtures')));\n   90          $routeCollection = $loader->load('legacy_validpattern.yml');\n   91          $route = $routeCollection->get('blog_show_legacy');\n   ..\n  104      public function testLoadWithResource()\n  105      {\n  106:         $loader = new YamlFileLoader(new FileLocator(array(__DIR__.'/../Fixtures')));\n  107          $routeCollection = $loader->load('validresource.yml');\n  108          $routes = $routeCollection->all();\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/routing/Tests/Matcher/Dumper/LegacyApacheMatcherDumperTest.php:\n   21  class LegacyApacheMatcherDumperTest extends \\PHPUnit_Framework_TestCase\n   22  {\n   23:     protected static $fixturesPath;\n   24  \n   25      public static function setUpBeforeClass()\n   26      {\n   27:         self::$fixturesPath = realpath(__DIR__.'/../../Fixtures/');\n   28      }\n   29  \n   ..\n   32          $dumper = new ApacheMatcherDumper($this->getRouteCollection());\n   33  \n   34:         $this->assertStringEqualsFile(self::$fixturesPath.'/dumper/url_matcher1.apache', $dumper->dump(), '->dump() dumps basic routes to the correct apache format.');\n   35      }\n   36  \n   37      /**\n   38:      * @dataProvider provideEscapeFixtures\n   39       */\n   40      public function testEscapePattern($src, $dest, $char, $with, $message)\n   ..\n   45      }\n   46  \n   47:     public function provideEscapeFixtures()\n   48      {\n   49          return array(\n   ..\n   61          $collection->add('foo', new Route('/foo'));\n   62          $dumper = new ApacheMatcherDumper($collection);\n   63:         $this->assertStringEqualsFile(self::$fixturesPath.'/dumper/url_matcher2.apache', $dumper->dump(array('script_name' => 'ap p_d\\ ev.php')));\n   64      }\n   65  \n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/routing/Tests/Matcher/Dumper/PhpMatcherDumperTest.php:\n   39       * @dataProvider getRouteCollections\n   40       */\n   41:     public function testDump(RouteCollection $collection, $fixture, $options = array())\n   42      {\n   43:         $basePath = __DIR__.'/../../Fixtures/dumper/';\n   44  \n   45          $dumper = new PhpMatcherDumper($collection);\n   46:         $this->assertStringEqualsFile($basePath.$fixture, $dumper->dump($options), '->dump() correctly dumps routes as optimized PHP code.');\n   47      }\n   48  \n   ..\n  283          return array(\n  284             array($collection, 'url_matcher1.php', array()),\n  285:            array($redirectCollection, 'url_matcher2.php', array('base_class' => 'Symfony\\Component\\Routing\\Tests\\Fixtures\\RedirectableUrlMatcher')),\n  286             array($rootprefixCollection, 'url_matcher3.php', array()),\n  287          );\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/security/CHANGELOG.md:\n   24   * The remember-me cookie hashes now use HMAC, which means that current cookies will be invalidated\n   25   * added simpler customization options\n   26:  * structured component into three sub-components Acl, Core and Http\n   27   * added Csrf sub-component\n   28   * changed Http sub-component to depend on Csrf sub-component instead of the Form component\n   ..\n   31  -----\n   32  \n   33:  * [BC BREAK] the BCrypt encoder constructor signature has changed (the first argument was removed)\n   34     To use the BCrypt encoder, you now need PHP 5.5 or \"ircmaxell/password-compat\" as a composer dependency\n   35   * [BC BREAK] return 401 instead of 500 when using use_forward during for form authentication\n   ..\n   49  -----\n   50  \n   51:  * [BC BREAK] The signature of ExceptionListener has changed\n   52:  * changed the HttpUtils constructor signature to take a UrlGenerator and a UrlMatcher instead of a Router\n   53   * EncoderFactoryInterface::getEncoder() can now also take a class name as an argument\n   54   * allow switching to the user that is already impersonated\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/security/README.md:\n    2  ==================\n    3  \n    4: Security provides an infrastructure for sophisticated authorization systems,\n    5  which makes it possible to easily separate the actual authorization logic from\n    6  so called user providers that hold the users credentials. It is inspired by\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/security/Acl/README.md:\n    2  ==============================================\n    3  \n    4: Security provides an infrastructure for sophisticated authorization systems,\n    5  which makes it possible to easily separate the actual authorization logic from\n    6  so called user providers that hold the users credentials. It is inspired by\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/security/Core/README.md:\n    2  =========================\n    3  \n    4: Security provides an infrastructure for sophisticated authorization systems,\n    5  which makes it possible to easily separate the actual authorization logic from\n    6  so called user providers that hold the users credentials. It is inspired by\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/security/Core/SecurityContext.php:\n   45  \n   46      /**\n   47:      * For backwards compatibility, the signature of sf <2.6 still works.\n   48       *\n   49       * @param TokenStorageInterface|AuthenticationManagerInterface         $tokenStorage\n   50       * @param AuthorizationCheckerInterface|AccessDecisionManagerInterface $authorizationChecker\n   51:      * @param bool                                                         $alwaysAuthenticate   only applicable with old signature\n   52       */\n   53      public function __construct($tokenStorage, $authorizationChecker, $alwaysAuthenticate = false)\n   54      {\n   55:         $oldSignature = $tokenStorage instanceof AuthenticationManagerInterface && $authorizationChecker instanceof AccessDecisionManagerInterface;\n   56:         $newSignature = $tokenStorage instanceof TokenStorageInterface && $authorizationChecker instanceof AuthorizationCheckerInterface;\n   57  \n   58:         // confirm possible signatures\n   59:         if (!$oldSignature && !$newSignature) {\n   60              throw new \\BadMethodCallException('Unable to construct SecurityContext, please provide the correct arguments');\n   61          }\n   62  \n   63:         if ($oldSignature) {\n   64              // renamed for clarity\n   65              $authenticationManager = $tokenStorage;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/security/Core/Tests/LegacySecurityContextTest.php:\n   84       * Test dedicated to check if the backwards compatibility is still working.\n   85       */\n   86:     public function testOldConstructorSignature()\n   87      {\n   88          $authenticationManager = $this->getMock('Symfony\\Component\\Security\\Core\\Authentication\\AuthenticationManagerInterface');\n   ..\n   92  \n   93      /**\n   94:      * @dataProvider oldConstructorSignatureFailuresProvider\n   95       * @expectedException \\BadMethodCallException\n   96       */\n   97:     public function testOldConstructorSignatureFailures($first, $second)\n   98      {\n   99          new SecurityContext($first, $second);\n  100      }\n  101  \n  102:     public function oldConstructorSignatureFailuresProvider()\n  103      {\n  104          $tokenStorage = $this->getMock('Symfony\\Component\\Security\\Core\\Authentication\\Token\\Storage\\TokenStorageInterface');\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/security/Core/User/AdvancedUserInterface.php:\n   19  \n   20  /**\n   21:  * Adds extra features to a user class related to account status flags.\n   22   *\n   23   * This interface can be implemented in place of UserInterface if you'd like\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/security/Core/Util/StringUtils.php:\n   78      public static function safeStrlen($string)\n   79      {\n   80:         // Premature optimization\n   81          // Since this cannot be changed at runtime, we can cache it\n   82          static $funcExists = null;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/security/Http/README.md:\n    2  =====================================\n    3  \n    4: Security provides an infrastructure for sophisticated authorization systems,\n    5  which makes it possible to easily separate the actual authorization logic from\n    6  so called user providers that hold the users credentials. It is inspired by\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/security/Http/EntryPoint/DigestAuthenticationEntryPoint.php:\n   44      {\n   45          $expiryTime = microtime(true) + $this->nonceValiditySeconds * 1000;\n   46:         $signatureValue = md5($expiryTime.':'.$this->key);\n   47:         $nonceValue = $expiryTime.':'.$signatureValue;\n   48          $nonceValueBase64 = base64_encode($nonceValue);\n   49  \n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/security/Tests/Core/Authentication/Voter/AbstractVoterTest.php:\n   28      protected function setUp()\n   29      {\n   30:         $this->voter = new VoterFixture();\n   31  \n   32          $tokenMock = $this->getMock('Symfony\\Component\\Security\\Core\\Authentication\\Token\\TokenInterface');\n   ..\n   51          return array(\n   52              array(AbstractVoter::ACCESS_ABSTAIN, null, array(), 'ACCESS_ABSTAIN for null objects'),\n   53:             array(AbstractVoter::ACCESS_ABSTAIN, new UnsupportedObjectFixture(), array(), 'ACCESS_ABSTAIN for objects with unsupported class'),\n   54:             array(AbstractVoter::ACCESS_ABSTAIN, new ObjectFixture(), array(), 'ACCESS_ABSTAIN for no attributes'),\n   55:             array(AbstractVoter::ACCESS_ABSTAIN, new ObjectFixture(), array('foobar'), 'ACCESS_ABSTAIN for unsupported attributes'),\n   56:             array(AbstractVoter::ACCESS_GRANTED, new ObjectFixture(), array('foo'), 'ACCESS_GRANTED if attribute grants access'),\n   57:             array(AbstractVoter::ACCESS_GRANTED, new ObjectFixture(), array('bar', 'foo'), 'ACCESS_GRANTED if *at least one* attribute grants access'),\n   58:             array(AbstractVoter::ACCESS_GRANTED, new ObjectFixture(), array('foobar', 'foo'), 'ACCESS_GRANTED if *at least one* attribute grants access'),\n   59:             array(AbstractVoter::ACCESS_DENIED, new ObjectFixture(), array('bar', 'baz'), 'ACCESS_DENIED for if no attribute grants access'),\n   60          );\n   61      }\n   62  }\n   63  \n   64: class VoterFixture extends AbstractVoter\n   65  {\n   66      protected function getSupportedClasses()\n   67      {\n   68          return array(\n   69:             'Symfony\\Component\\Security\\Tests\\Core\\Authentication\\Voter\\ObjectFixture',\n   70          );\n   71      }\n   ..\n   82  }\n   83  \n   84: class ObjectFixture\n   85  {\n   86  }\n   87  \n   88: class UnsupportedObjectFixture\n   89  {\n   90  }\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/translation/Loader/PoFileLoader.php:\n   86       * - msgid \"\" that an empty singleline defines a header.\n   87       *\n   88:      * This parser sacrifices some features of the reference implementation the\n   89       * differences to that implementation are as follows.\n   90       * - No support for comments spanning multiple lines.\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/translation/Loader/schema/dic/xliff-core/xliff-core-1.2-strict.xsd:\n  510        <xsd:enumeration value=\"international-scientific-term\">\n  511          <xsd:annotation>\n  512:           <xsd:documentation>ISO-12620 2.1.4: A term that is part of an international scientific nomenclature as adopted by an appropriate scientific body.</xsd:documentation>\n  513          </xsd:annotation>\n  514        </xsd:enumeration>\n  ...\n 1487        <xsd:enumeration value=\"information\">\n 1488          <xsd:annotation>\n 1489:           <xsd:documentation>Indicates that the context is informational in nature, specifying for example, how a term should be translated. Thus, should be displayed to anyone editing the XLIFF document.</xsd:documentation>\n 1490          </xsd:annotation>\n 1491        </xsd:enumeration>\n ....\n 1651      <xsd:anyAttribute namespace=\"##other\" processContents=\"strict\"/>\n 1652    </xsd:attributeGroup>\n 1653:   <!-- XLIFF Structure -->\n 1654    <xsd:element name=\"xliff\">\n 1655      <xsd:complexType>\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/translation/Loader/schema/dic/xliff-core/xml.xsd:\n  273  \n  274       <p>\n  275:       The schema document at that URI may however change in the future,\n  276        in order to remain compatible with the latest version of XML\n  277        Schema itself, or with the XML namespace itself.  In other words,\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/translation/Tests/PluralizationRulesTest.php:\n   71  \n   72      /**\n   73:      * This array should be at least empty within the near future.\n   74       *\n   75       * This both depends on a complete list trying to add above as understanding\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/translation/Tests/TranslatorTest.php:\n  212          $translator = new Translator('en');\n  213          $translator->addLoader($format, new $loaderClass());\n  214:         $translator->addResource($format, __DIR__.'/fixtures/non-existing', 'en');\n  215:         $translator->addResource($format, __DIR__.'/fixtures/resources.'.$format, 'en');\n  216  \n  217          // force catalogue loading\n  ...\n  227          $translator = new Translator('en_GB');\n  228          $translator->addLoader($format, new $loaderClass());\n  229:         $translator->addResource($format, __DIR__.'/fixtures/non-existing', 'en_GB');\n  230:         $translator->addResource($format, __DIR__.'/fixtures/resources.'.$format, 'en', 'resources');\n  231  \n  232          $this->assertEquals('bar', $translator->trans('foo', array(), 'resources'));\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/translation/Tests/Dumper/CsvFileDumperTest.php:\n   27          $dumper->dump($catalogue, array('path' => $tempDir));\n   28  \n   29:         $this->assertEquals(file_get_contents(__DIR__.'/../fixtures/valid.csv'), file_get_contents($tempDir.'/messages.en.csv'));\n   30  \n   31          unlink($tempDir.'/messages.en.csv');\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/translation/Tests/Dumper/IcuResFileDumperTest.php:\n   30          $dumper->dump($catalogue, array('path' => $tempDir));\n   31  \n   32:         $this->assertEquals(file_get_contents(__DIR__.'/../fixtures/resourcebundle/res/en.res'), file_get_contents($tempDir.'/messages/en.res'));\n   33  \n   34          @unlink($tempDir.'/messages/en.res');\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/translation/Tests/Dumper/IniFileDumperTest.php:\n   26          $dumper->dump($catalogue, array('path' => $tempDir));\n   27  \n   28:         $this->assertEquals(file_get_contents(__DIR__.'/../fixtures/resources.ini'), file_get_contents($tempDir.'/messages.en.ini'));\n   29  \n   30          unlink($tempDir.'/messages.en.ini');\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/translation/Tests/Dumper/JsonFileDumperTest.php:\n   30          $dumper->dump($catalogue, array('path' => $tempDir));\n   31  \n   32:         $this->assertEquals(file_get_contents(__DIR__.'/../fixtures/resources.json'), file_get_contents($tempDir.'/messages.en.json'));\n   33  \n   34          unlink($tempDir.'/messages.en.json');\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/translation/Tests/Dumper/MoFileDumperTest.php:\n   25          $dumper = new MoFileDumper();\n   26          $dumper->dump($catalogue, array('path' => $tempDir));\n   27:         $this->assertEquals(file_get_contents(__DIR__.'/../fixtures/resources.mo'), file_get_contents($tempDir.'/messages.en.mo'));\n   28  \n   29          unlink($tempDir.'/messages.en.mo');\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/translation/Tests/Dumper/PhpFileDumperTest.php:\n   26          $dumper->dump($catalogue, array('path' => $tempDir));\n   27  \n   28:         $this->assertEquals(file_get_contents(__DIR__.'/../fixtures/resources.php'), file_get_contents($tempDir.'/messages.en.php'));\n   29  \n   30          unlink($tempDir.'/messages.en.php');\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/translation/Tests/Dumper/PoFileDumperTest.php:\n   25          $dumper = new PoFileDumper();\n   26          $dumper->dump($catalogue, array('path' => $tempDir));\n   27:         $this->assertEquals(file_get_contents(__DIR__.'/../fixtures/resources.po'), file_get_contents($tempDir.'/messages.en.po'));\n   28  \n   29          unlink($tempDir.'/messages.en.po');\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/translation/Tests/Dumper/QtFileDumperTest.php:\n   26          $dumper->dump($catalogue, array('path' => $tempDir));\n   27  \n   28:         $this->assertEquals(file_get_contents(__DIR__.'/../fixtures/resources.ts'), file_get_contents($tempDir.'/resources.en.ts'));\n   29  \n   30          unlink($tempDir.'/resources.en.ts');\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/translation/Tests/Dumper/XliffFileDumperTest.php:\n   33  \n   34          $this->assertEquals(\n   35:             file_get_contents(__DIR__.'/../fixtures/resources-clean.xlf'),\n   36              file_get_contents($tempDir.'/messages.en_US.xlf')\n   37          );\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/translation/Tests/Dumper/YamlFileDumperTest.php:\n   26          $dumper->dump($catalogue, array('path' => $tempDir));\n   27  \n   28:         $this->assertEquals(file_get_contents(__DIR__.'/../fixtures/resources.yml'), file_get_contents($tempDir.'/messages.en.yml'));\n   29  \n   30          unlink($tempDir.'/messages.en.yml');\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/translation/Tests/Loader/CsvFileLoaderTest.php:\n   20      {\n   21          $loader = new CsvFileLoader();\n   22:         $resource = __DIR__.'/../fixtures/resources.csv';\n   23          $catalogue = $loader->load($resource, 'en', 'domain1');\n   24  \n   ..\n   31      {\n   32          $loader = new CsvFileLoader();\n   33:         $resource = __DIR__.'/../fixtures/empty.csv';\n   34          $catalogue = $loader->load($resource, 'en', 'domain1');\n   35  \n   ..\n   45      {\n   46          $loader = new CsvFileLoader();\n   47:         $resource = __DIR__.'/../fixtures/not-exists.csv';\n   48          $loader->load($resource, 'en', 'domain1');\n   49      }\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/translation/Tests/Loader/IcuDatFileLoaderTest.php:\n   30      {\n   31          $loader = new IcuDatFileLoader();\n   32:         $loader->load(__DIR__.'/../fixtures/resourcebundle/corrupted/resources', 'es', 'domain2');\n   33      }\n   34  \n   ..\n   39          // MUST reside on the same partition. pkgdata -p resources -T /srv -d.packagelist.txt\n   40          $loader = new IcuDatFileLoader();\n   41:         $resource = __DIR__.'/../fixtures/resourcebundle/dat/resources';\n   42          $catalogue = $loader->load($resource, 'en', 'domain1');\n   43  \n   ..\n   50      {\n   51          $loader = new IcuDatFileLoader();\n   52:         $resource = __DIR__.'/../fixtures/resourcebundle/dat/resources';\n   53          $catalogue = $loader->load($resource, 'fr', 'domain1');\n   54  \n   ..\n   64      {\n   65          $loader = new IcuDatFileLoader();\n   66:         $loader->load(__DIR__.'/../fixtures/non-existing.txt', 'en', 'domain1');\n   67      }\n   68  }\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/translation/Tests/Loader/IcuResFileLoaderTest.php:\n   28          // resource is build using genrb command\n   29          $loader = new IcuResFileLoader();\n   30:         $resource = __DIR__.'/../fixtures/resourcebundle/res';\n   31          $catalogue = $loader->load($resource, 'en', 'domain1');\n   32  \n   ..\n   42      {\n   43          $loader = new IcuResFileLoader();\n   44:         $loader->load(__DIR__.'/../fixtures/non-existing.txt', 'en', 'domain1');\n   45      }\n   46  \n   ..\n   51      {\n   52          $loader = new IcuResFileLoader();\n   53:         $loader->load(__DIR__.'/../fixtures/resourcebundle/corrupted', 'en', 'domain1');\n   54      }\n   55  }\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/translation/Tests/Loader/IniFileLoaderTest.php:\n   20      {\n   21          $loader = new IniFileLoader();\n   22:         $resource = __DIR__.'/../fixtures/resources.ini';\n   23          $catalogue = $loader->load($resource, 'en', 'domain1');\n   24  \n   ..\n   31      {\n   32          $loader = new IniFileLoader();\n   33:         $resource = __DIR__.'/../fixtures/empty.ini';\n   34          $catalogue = $loader->load($resource, 'en', 'domain1');\n   35  \n   ..\n   45      {\n   46          $loader = new IniFileLoader();\n   47:         $resource = __DIR__.'/../fixtures/non-existing.ini';\n   48          $loader->load($resource, 'en', 'domain1');\n   49      }\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/translation/Tests/Loader/JsonFileLoaderTest.php:\n   27      {\n   28          $loader = new JsonFileLoader();\n   29:         $resource = __DIR__.'/../fixtures/resources.json';\n   30          $catalogue = $loader->load($resource, 'en', 'domain1');\n   31  \n   ..\n   38      {\n   39          $loader = new JsonFileLoader();\n   40:         $resource = __DIR__.'/../fixtures/empty.json';\n   41          $catalogue = $loader->load($resource, 'en', 'domain1');\n   42  \n   ..\n   52      {\n   53          $loader = new JsonFileLoader();\n   54:         $resource = __DIR__.'/../fixtures/non-existing.json';\n   55          $loader->load($resource, 'en', 'domain1');\n   56      }\n   ..\n   63      {\n   64          $loader = new JsonFileLoader();\n   65:         $resource = __DIR__.'/../fixtures/malformed.json';\n   66          $loader->load($resource, 'en', 'domain1');\n   67      }\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/translation/Tests/Loader/MoFileLoaderTest.php:\n   20      {\n   21          $loader = new MoFileLoader();\n   22:         $resource = __DIR__.'/../fixtures/resources.mo';\n   23          $catalogue = $loader->load($resource, 'en', 'domain1');\n   24  \n   ..\n   31      {\n   32          $loader = new MoFileLoader();\n   33:         $resource = __DIR__.'/../fixtures/plurals.mo';\n   34          $catalogue = $loader->load($resource, 'en', 'domain1');\n   35  \n   ..\n   45      {\n   46          $loader = new MoFileLoader();\n   47:         $resource = __DIR__.'/../fixtures/non-existing.mo';\n   48          $loader->load($resource, 'en', 'domain1');\n   49      }\n   ..\n   55      {\n   56          $loader = new MoFileLoader();\n   57:         $resource = __DIR__.'/../fixtures/empty.mo';\n   58          $loader->load($resource, 'en', 'domain1');\n   59      }\n   ..\n   62      {\n   63          $loader = new MoFileLoader();\n   64:         $resource = __DIR__.'/../fixtures/empty-translation.mo';\n   65          $catalogue = $loader->load($resource, 'en', 'message');\n   66  \n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/translation/Tests/Loader/PhpFileLoaderTest.php:\n   20      {\n   21          $loader = new PhpFileLoader();\n   22:         $resource = __DIR__.'/../fixtures/resources.php';\n   23          $catalogue = $loader->load($resource, 'en', 'domain1');\n   24  \n   ..\n   34      {\n   35          $loader = new PhpFileLoader();\n   36:         $resource = __DIR__.'/../fixtures/non-existing.php';\n   37          $loader->load($resource, 'en', 'domain1');\n   38      }\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/translation/Tests/Loader/PoFileLoaderTest.php:\n   20      {\n   21          $loader = new PoFileLoader();\n   22:         $resource = __DIR__.'/../fixtures/resources.po';\n   23          $catalogue = $loader->load($resource, 'en', 'domain1');\n   24  \n   ..\n   31      {\n   32          $loader = new PoFileLoader();\n   33:         $resource = __DIR__.'/../fixtures/plurals.po';\n   34          $catalogue = $loader->load($resource, 'en', 'domain1');\n   35  \n   ..\n   42      {\n   43          $loader = new PoFileLoader();\n   44:         $resource = __DIR__.'/../fixtures/empty.po';\n   45          $catalogue = $loader->load($resource, 'en', 'domain1');\n   46  \n   ..\n   56      {\n   57          $loader = new PoFileLoader();\n   58:         $resource = __DIR__.'/../fixtures/non-existing.po';\n   59          $loader->load($resource, 'en', 'domain1');\n   60      }\n   ..\n   63      {\n   64          $loader = new PoFileLoader();\n   65:         $resource = __DIR__.'/../fixtures/empty-translation.po';\n   66          $catalogue = $loader->load($resource, 'en', 'domain1');\n   67  \n   ..\n   74      {\n   75          $loader = new PoFileLoader();\n   76:         $resource = __DIR__.'/../fixtures/escaped-id.po';\n   77          $catalogue = $loader->load($resource, 'en', 'domain1');\n   78  \n   ..\n   85      {\n   86          $loader = new PoFileLoader();\n   87:         $resource = __DIR__.'/../fixtures/escaped-id-plurals.po';\n   88          $catalogue = $loader->load($resource, 'en', 'domain1');\n   89  \n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/translation/Tests/Loader/QtFileLoaderTest.php:\n   20      {\n   21          $loader = new QtFileLoader();\n   22:         $resource = __DIR__.'/../fixtures/resources.ts';\n   23          $catalogue = $loader->load($resource, 'en', 'resources');\n   24  \n   ..\n   34      {\n   35          $loader = new QtFileLoader();\n   36:         $resource = __DIR__.'/../fixtures/non-existing.ts';\n   37          $loader->load($resource, 'en', 'domain1');\n   38      }\n   ..\n   54      {\n   55          $loader = new QtFileLoader();\n   56:         $resource = __DIR__.'/../fixtures/invalid-xml-resources.xlf';\n   57          $loader->load($resource, 'en', 'domain1');\n   58      }\n   ..\n   61      {\n   62          $loader = new QtFileLoader();\n   63:         $resource = __DIR__.'/../fixtures/empty.xlf';\n   64          $this->setExpectedException('Symfony\\Component\\Translation\\Exception\\InvalidResourceException', sprintf('Unable to load \"%s\".', $resource));\n   65          $loader->load($resource, 'en', 'domain1');\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/translation/Tests/Loader/XliffFileLoaderTest.php:\n   20      {\n   21          $loader = new XliffFileLoader();\n   22:         $resource = __DIR__.'/../fixtures/resources.xlf';\n   23          $catalogue = $loader->load($resource, 'en', 'domain1');\n   24  \n   ..\n   36  \n   37          $loader = new XliffFileLoader();\n   38:         $resource = __DIR__.'/../fixtures/resources.xlf';\n   39          $catalogue = $loader->load($resource, 'en', 'domain1');\n   40  \n   ..\n   47      {\n   48          $loader = new XliffFileLoader();\n   49:         $catalogue = $loader->load(__DIR__.'/../fixtures/resname.xlf', 'en', 'domain1');\n   50  \n   51          $this->assertEquals(array('foo' => 'bar', 'bar' => 'baz', 'baz' => 'foo'), $catalogue->all('domain1'));\n   ..\n   55      {\n   56          $loader = new XliffFileLoader();\n   57:         $catalogue = $loader->load(__DIR__.'/../fixtures/resources.xlf', 'en', 'domain1');\n   58  \n   59          $this->assertEquals(array('foo' => 'bar', 'extra' => 'extra', 'key' => '', 'test' => 'with'), $catalogue->all('domain1'));\n   ..\n   67  \n   68          $loader = new XliffFileLoader();\n   69:         $catalogue = $loader->load(__DIR__.'/../fixtures/encoding.xlf', 'en', 'domain1');\n   70  \n   71          $this->assertEquals(utf8_decode('föö'), $catalogue->get('bar', 'domain1'));\n   ..\n   80      {\n   81          $loader = new XliffFileLoader();\n   82:         $loader->load(__DIR__.'/../fixtures/resources.php', 'en', 'domain1');\n   83      }\n   84  \n   ..\n   89      {\n   90          $loader = new XliffFileLoader();\n   91:         $loader->load(__DIR__.'/../fixtures/non-valid.xlf', 'en', 'domain1');\n   92      }\n   93  \n   ..\n   98      {\n   99          $loader = new XliffFileLoader();\n  100:         $resource = __DIR__.'/../fixtures/non-existing.xlf';\n  101          $loader->load($resource, 'en', 'domain1');\n  102      }\n  ...\n  119      {\n  120          $loader = new XliffFileLoader();\n  121:         $loader->load(__DIR__.'/../fixtures/withdoctype.xlf', 'en', 'domain1');\n  122      }\n  123  \n  ...\n  125      {\n  126          $loader = new XliffFileLoader();\n  127:         $resource = __DIR__.'/../fixtures/empty.xlf';\n  128          $this->setExpectedException('Symfony\\Component\\Translation\\Exception\\InvalidResourceException', sprintf('Unable to load \"%s\":', $resource));\n  129          $loader->load($resource, 'en', 'domain1');\n  ...\n  133      {\n  134          $loader = new XliffFileLoader();\n  135:         $catalogue = $loader->load(__DIR__.'/../fixtures/withnote.xlf', 'en', 'domain1');\n  136  \n  137          $this->assertEquals(array('notes' => array(array('priority' => 1, 'content' => 'foo'))), $catalogue->getMetadata('foo', 'domain1'));\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/translation/Tests/Loader/YamlFileLoaderTest.php:\n   20      {\n   21          $loader = new YamlFileLoader();\n   22:         $resource = __DIR__.'/../fixtures/resources.yml';\n   23          $catalogue = $loader->load($resource, 'en', 'domain1');\n   24  \n   ..\n   31      {\n   32          $loader = new YamlFileLoader();\n   33:         $resource = __DIR__.'/../fixtures/empty.yml';\n   34          $catalogue = $loader->load($resource, 'en', 'domain1');\n   35  \n   ..\n   45      {\n   46          $loader = new YamlFileLoader();\n   47:         $resource = __DIR__.'/../fixtures/non-existing.yml';\n   48          $loader->load($resource, 'en', 'domain1');\n   49      }\n   ..\n   65      {\n   66          $loader = new YamlFileLoader();\n   67:         $resource = __DIR__.'/../fixtures/non-valid.yml';\n   68          $loader->load($resource, 'en', 'domain1');\n   69      }\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/twig-bridge/CHANGELOG.md:\n   31   * added a `controller` function to help generating controller references\n   32   * added a `render_esi` and a `render_hinclude` function\n   33:  * [BC BREAK] restricted the `render` tag to only accept URIs or ControllerReference instances (the signature changed)\n   34   * added a `render` function to render a request\n   35   * The `app` global variable is now injected even when using the twig service directly.\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/twig-bridge/Extension/SecurityExtension.php:\n   16  \n   17  /**\n   18:  * SecurityExtension exposes security context features.\n   19   *\n   20   * @author Fabien Potencier <fabien@symfony.com>\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/twig-bridge/Tests/Extension/FormExtensionBootstrap3LayoutTest.php:\n   16  use Symfony\\Bridge\\Twig\\Form\\TwigRendererEngine;\n   17  use Symfony\\Bridge\\Twig\\Extension\\TranslationExtension;\n   18: use Symfony\\Bridge\\Twig\\Tests\\Extension\\Fixtures\\StubTranslator;\n   19: use Symfony\\Bridge\\Twig\\Tests\\Extension\\Fixtures\\StubFilesystemLoader;\n   20  use Symfony\\Component\\Form\\FormView;\n   21  use Symfony\\Component\\Form\\Tests\\AbstractBootstrap3LayoutTest;\n   ..\n   28      protected $extension;\n   29  \n   30:     protected $testableFeatures = array(\n   31          'choice_attr',\n   32      );\n   ..\n   46          $loader = new StubFilesystemLoader(array(\n   47              __DIR__.'/../../Resources/views/Form',\n   48:             __DIR__.'/Fixtures/templates/form',\n   49          ));\n   50  \n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/twig-bridge/Tests/Extension/FormExtensionDivLayoutTest.php:\n   16  use Symfony\\Bridge\\Twig\\Form\\TwigRendererEngine;\n   17  use Symfony\\Bridge\\Twig\\Extension\\TranslationExtension;\n   18: use Symfony\\Bridge\\Twig\\Tests\\Extension\\Fixtures\\StubTranslator;\n   19: use Symfony\\Bridge\\Twig\\Tests\\Extension\\Fixtures\\StubFilesystemLoader;\n   20  use Symfony\\Component\\Form\\ChoiceList\\View\\ChoiceView;\n   21  use Symfony\\Component\\Form\\FormView;\n   ..\n   29      protected $extension;\n   30  \n   31:     protected $testableFeatures = array(\n   32          'choice_attr',\n   33      );\n   ..\n   47          $loader = new StubFilesystemLoader(array(\n   48              __DIR__.'/../../Resources/views/Form',\n   49:             __DIR__.'/Fixtures/templates/form',\n   50          ));\n   51  \n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/twig-bridge/Tests/Extension/FormExtensionTableLayoutTest.php:\n   18  use Symfony\\Bridge\\Twig\\Extension\\TranslationExtension;\n   19  use Symfony\\Component\\Form\\Tests\\AbstractTableLayoutTest;\n   20: use Symfony\\Bridge\\Twig\\Tests\\Extension\\Fixtures\\StubTranslator;\n   21: use Symfony\\Bridge\\Twig\\Tests\\Extension\\Fixtures\\StubFilesystemLoader;\n   22  \n   23  class FormExtensionTableLayoutTest extends AbstractTableLayoutTest\n   ..\n   28      protected $extension;\n   29  \n   30:     protected $testableFeatures = array(\n   31          'choice_attr',\n   32      );\n   ..\n   46          $loader = new StubFilesystemLoader(array(\n   47              __DIR__.'/../../Resources/views/Form',\n   48:             __DIR__.'/Fixtures/templates/form',\n   49          ));\n   50  \n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/twig-bridge/Tests/Extension/HttpFoundationExtensionTest.php:\n   54  \n   55          $this->assertEquals(\n   56:             'http://localhost/app/web/bundles/framework/css/structure.css',\n   57:             $extension->generateAbsoluteUrl('/app/web/bundles/framework/css/structure.css')\n   58          );\n   59      }\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/twig-bridge/Tests/Extension/Fixtures/StubFilesystemLoader.php:\n   10   */\n   11  \n   12: namespace Symfony\\Bridge\\Twig\\Tests\\Extension\\Fixtures;\n   13  \n   14  class StubFilesystemLoader extends \\Twig_Loader_Filesystem\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/twig-bridge/Tests/Extension/Fixtures/StubTranslator.php:\n   10   */\n   11  \n   12: namespace Symfony\\Bridge\\Twig\\Tests\\Extension\\Fixtures;\n   13  \n   14  use Symfony\\Component\\Translation\\TranslatorInterface;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/twig-bridge/Tests/Translation/TwigExtractorTest.php:\n   92      {\n   93          return array(\n   94:             array(__DIR__.'/../Fixtures'),\n   95:             array(__DIR__.'/../Fixtures/extractor/syntax_error.twig'),\n   96:             array(new \\SplFileInfo(__DIR__.'/../Fixtures/extractor/syntax_error.twig')),\n   97          );\n   98      }\n   ..\n  125      public function resourceProvider()\n  126      {\n  127:         $directory = __DIR__.'/../Fixtures/extractor/';\n  128  \n  129          return array(\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Constraint.php:\n  309       *\n  310       * @internal This method may be replaced by an implementation of\n  311:      *           {@link \\Serializable} in the future. Please don't use or\n  312       *           overwrite it.\n  313       *\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/ValidatorInterface.php:\n   30       * implementation.\n   31       *\n   32:      * The signature changed with Symfony 2.5 (see\n   33:      * {@link Validator\\ValidatorInterface::validate()}. This signature will be\n   34       * disabled in Symfony 3.0.\n   35       *\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Constraints/CardSchemeValidator.php:\n   41          // Diners Club card numbers begin with 300 through 305, 36 or 38. All have 14 digits.\n   42          // There are Diners Club cards that begin with 5 and have 16 digits.\n   43:         // These are a joint venture between Diners Club and MasterCard, and should be processed like a MasterCard.\n   44          'DINERS' => array(\n   45              '/^3(?:0[0-5]|[68][0-9])[0-9]{11}$/',\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Mapping/CascadingStrategy.php:\n   26   *\n   27   * Although the constants currently represent a boolean switch, they are\n   28:  * implemented as bit mask in order to allow future extensions.\n   29   *\n   30   * @since  2.5\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Tests/ConstraintTest.php:\n   13  \n   14  use Symfony\\Component\\Validator\\Constraint;\n   15: use Symfony\\Component\\Validator\\Tests\\Fixtures\\ClassConstraint;\n   16: use Symfony\\Component\\Validator\\Tests\\Fixtures\\ConstraintA;\n   17: use Symfony\\Component\\Validator\\Tests\\Fixtures\\ConstraintB;\n   18: use Symfony\\Component\\Validator\\Tests\\Fixtures\\ConstraintC;\n   19: use Symfony\\Component\\Validator\\Tests\\Fixtures\\ConstraintWithValue;\n   20: use Symfony\\Component\\Validator\\Tests\\Fixtures\\ConstraintWithValueAsDefault;\n   21  \n   22  class ConstraintTest extends \\PHPUnit_Framework_TestCase\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Tests/LegacyExecutionContextTest.php:\n   18  use Symfony\\Component\\Validator\\ConstraintViolationList;\n   19  use Symfony\\Component\\Validator\\ExecutionContext;\n   20: use Symfony\\Component\\Validator\\Tests\\Fixtures\\ConstraintA;\n   21  use Symfony\\Component\\Validator\\ValidationVisitor;\n   22  \n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Tests/LegacyValidatorTest.php:\n   16  use Symfony\\Component\\Validator\\ConstraintValidatorFactory;\n   17  use Symfony\\Component\\Validator\\MetadataFactoryInterface;\n   18: use Symfony\\Component\\Validator\\Tests\\Fixtures\\Entity;\n   19  use Symfony\\Component\\Validator\\Tests\\Validator\\AbstractLegacyApiTest;\n   20  use Symfony\\Component\\Validator\\Validator as LegacyValidator;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Tests/Constraints/CollectionValidatorCustomArrayObjectTest.php:\n   12  namespace Symfony\\Component\\Validator\\Tests\\Constraints;\n   13  \n   14: use Symfony\\Component\\Validator\\Tests\\Fixtures\\CustomArrayObject;\n   15  \n   16  class CollectionValidatorCustomArrayObjectTest extends CollectionValidatorTest\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Tests/Constraints/CountValidatorCountableTest.php:\n   12  namespace Symfony\\Component\\Validator\\Tests\\Constraints;\n   13  \n   14: use Symfony\\Component\\Validator\\Tests\\Fixtures\\Countable;\n   15  \n   16  /**\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Tests/Constraints/ExpressionValidatorTest.php:\n   15  use Symfony\\Component\\Validator\\Constraints\\Expression;\n   16  use Symfony\\Component\\Validator\\Constraints\\ExpressionValidator;\n   17: use Symfony\\Component\\Validator\\Tests\\Fixtures\\Entity;\n   18  use Symfony\\Component\\Validator\\Validation;\n   19  \n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Tests/Constraints/FileValidatorTest.php:\n  292          $file = $this\n  293              ->getMockBuilder('Symfony\\Component\\HttpFoundation\\File\\File')\n  294:             ->setConstructorArgs(array(__DIR__.'/Fixtures/foo'))\n  295              ->getMock();\n  296          $file\n  ...\n  316          $file = $this\n  317              ->getMockBuilder('Symfony\\Component\\HttpFoundation\\File\\File')\n  318:             ->setConstructorArgs(array(__DIR__.'/Fixtures/foo'))\n  319              ->getMock();\n  320          $file\n  ...\n  340          $file = $this\n  341              ->getMockBuilder('Symfony\\Component\\HttpFoundation\\File\\File')\n  342:             ->setConstructorArgs(array(__DIR__.'/Fixtures/foo'))\n  343              ->getMock();\n  344          $file\n  ...\n  370          $file = $this\n  371              ->getMockBuilder('Symfony\\Component\\HttpFoundation\\File\\File')\n  372:             ->setConstructorArgs(array(__DIR__.'/Fixtures/foo'))\n  373              ->getMock();\n  374          $file\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Tests/Constraints/ImageValidatorTest.php:\n   48          parent::setUp();\n   49  \n   50:         $this->image = __DIR__.'/Fixtures/test.gif';\n   51:         $this->imageLandscape = __DIR__.'/Fixtures/test_landscape.gif';\n   52:         $this->imagePortrait = __DIR__.'/Fixtures/test_portrait.gif';\n   53:         $this->image4By3 = __DIR__.'/Fixtures/test_4by3.gif';\n   54      }\n   55  \n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Tests/Fixtures/CallbackClass.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\Validator\\Tests\\Fixtures;\n   13  \n   14  use Symfony\\Component\\Validator\\ExecutionContextInterface;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Tests/Fixtures/ClassConstraint.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\Validator\\Tests\\Fixtures;\n   13  \n   14  use Symfony\\Component\\Validator\\Constraint;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Tests/Fixtures/ConstraintA.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\Validator\\Tests\\Fixtures;\n   13  \n   14  use Symfony\\Component\\Validator\\Constraint;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Tests/Fixtures/ConstraintAValidator.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\Validator\\Tests\\Fixtures;\n   13  \n   14  use Symfony\\Component\\Validator\\Constraint;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Tests/Fixtures/ConstraintB.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\Validator\\Tests\\Fixtures;\n   13  \n   14  use Symfony\\Component\\Validator\\Constraint;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Tests/Fixtures/ConstraintC.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\Validator\\Tests\\Fixtures;\n   13  \n   14  use Symfony\\Component\\Validator\\Constraint;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Tests/Fixtures/ConstraintWithValue.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\Validator\\Tests\\Fixtures;\n   13  \n   14  use Symfony\\Component\\Validator\\Constraint;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Tests/Fixtures/ConstraintWithValueAsDefault.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\Validator\\Tests\\Fixtures;\n   13  \n   14  use Symfony\\Component\\Validator\\Constraint;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Tests/Fixtures/Countable.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\Validator\\Tests\\Fixtures;\n   13  \n   14  class Countable implements \\Countable\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Tests/Fixtures/CustomArrayObject.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\Validator\\Tests\\Fixtures;\n   13  \n   14  /**\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Tests/Fixtures/Entity.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\Validator\\Tests\\Fixtures;\n   13  \n   14  use Symfony\\Component\\Validator\\Constraints as Assert;\n   ..\n   16  \n   17  /**\n   18:  * @Symfony\\Component\\Validator\\Tests\\Fixtures\\ConstraintA\n   19   * @Assert\\GroupSequence({\"Foo\", \"Entity\"})\n   20:  * @Assert\\Callback({\"Symfony\\Component\\Validator\\Tests\\Fixtures\\CallbackClass\", \"callback\"})\n   21   */\n   22  class Entity extends EntityParent implements EntityInterface\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Tests/Fixtures/EntityInterface.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\Validator\\Tests\\Fixtures;\n   13  \n   14  interface EntityInterface\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Tests/Fixtures/EntityParent.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\Validator\\Tests\\Fixtures;\n   13  \n   14  use Symfony\\Component\\Validator\\Constraints\\NotNull;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Tests/Fixtures/FailingConstraint.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\Validator\\Tests\\Fixtures;\n   13  \n   14  use Symfony\\Component\\Validator\\Constraint;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Tests/Fixtures/FailingConstraintValidator.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\Validator\\Tests\\Fixtures;\n   13  \n   14  use Symfony\\Component\\Validator\\Constraint;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Tests/Fixtures/FakeClassMetadata.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\Validator\\Tests\\Fixtures;\n   13  \n   14  use Symfony\\Component\\Validator\\Mapping\\ClassMetadata;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Tests/Fixtures/FakeMetadataFactory.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\Validator\\Tests\\Fixtures;\n   13  \n   14  use Symfony\\Component\\Validator\\Exception\\NoSuchMetadataException;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Tests/Fixtures/FilesLoader.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\Validator\\Tests\\Fixtures;\n   13  \n   14  use Symfony\\Component\\Validator\\Mapping\\Loader\\FilesLoader as BaseFilesLoader;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Tests/Fixtures/GroupSequenceProviderEntity.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\Validator\\Tests\\Fixtures;\n   13  \n   14  use Symfony\\Component\\Validator\\Constraints as Assert;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Tests/Fixtures/InvalidConstraint.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\Validator\\Tests\\Fixtures;\n   13  \n   14  use Symfony\\Component\\Validator\\Constraint;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Tests/Fixtures/InvalidConstraintValidator.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\Validator\\Tests\\Fixtures;\n   13  \n   14  class InvalidConstraintValidator\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Tests/Fixtures/LegacyClassMetadata.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\Validator\\Tests\\Fixtures;\n   13  \n   14  use Symfony\\Component\\Validator\\ClassBasedInterface;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Tests/Fixtures/PropertyConstraint.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\Validator\\Tests\\Fixtures;\n   13  \n   14  use Symfony\\Component\\Validator\\Constraint;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Tests/Fixtures/Reference.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\Validator\\Tests\\Fixtures;\n   13  \n   14  class Reference\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Tests/Fixtures/StubGlobalExecutionContext.php:\n   10   */\n   11  \n   12: namespace Symfony\\Component\\Validator\\Tests\\Fixtures;\n   13  \n   14  use Symfony\\Component\\Validator\\ConstraintViolationList;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Tests/Mapping/ClassMetadataTest.php:\n   15  use Symfony\\Component\\Validator\\Constraints\\Valid;\n   16  use Symfony\\Component\\Validator\\Mapping\\ClassMetadata;\n   17: use Symfony\\Component\\Validator\\Tests\\Fixtures\\ConstraintA;\n   18: use Symfony\\Component\\Validator\\Tests\\Fixtures\\ConstraintB;\n   19: use Symfony\\Component\\Validator\\Tests\\Fixtures\\PropertyConstraint;\n   20  \n   21  class ClassMetadataTest extends \\PHPUnit_Framework_TestCase\n   22  {\n   23:     const CLASSNAME = 'Symfony\\Component\\Validator\\Tests\\Fixtures\\Entity';\n   24:     const PARENTCLASS = 'Symfony\\Component\\Validator\\Tests\\Fixtures\\EntityParent';\n   25:     const PROVIDERCLASS = 'Symfony\\Component\\Validator\\Tests\\Fixtures\\GroupSequenceProviderEntity';\n   26  \n   27      protected $metadata;\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Tests/Mapping/GetterMetadataTest.php:\n   13  \n   14  use Symfony\\Component\\Validator\\Mapping\\GetterMetadata;\n   15: use Symfony\\Component\\Validator\\Tests\\Fixtures\\Entity;\n   16  \n   17  class GetterMetadataTest extends \\PHPUnit_Framework_TestCase\n   18  {\n   19:     const CLASSNAME = 'Symfony\\Component\\Validator\\Tests\\Fixtures\\Entity';\n   20  \n   21      public function testInvalidPropertyName()\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Tests/Mapping/LegacyElementMetadataTest.php:\n   13  \n   14  use Symfony\\Component\\Validator\\Mapping\\ElementMetadata;\n   15: use Symfony\\Component\\Validator\\Tests\\Fixtures\\ConstraintA;\n   16: use Symfony\\Component\\Validator\\Tests\\Fixtures\\ConstraintB;\n   17  \n   18  /**\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Tests/Mapping/MemberMetadataTest.php:\n   14  use Symfony\\Component\\Validator\\Constraints\\Valid;\n   15  use Symfony\\Component\\Validator\\Mapping\\MemberMetadata;\n   16: use Symfony\\Component\\Validator\\Tests\\Fixtures\\ClassConstraint;\n   17: use Symfony\\Component\\Validator\\Tests\\Fixtures\\ConstraintA;\n   18: use Symfony\\Component\\Validator\\Tests\\Fixtures\\ConstraintB;\n   19  \n   20  class MemberMetadataTest extends \\PHPUnit_Framework_TestCase\n   ..\n   25      {\n   26          $this->metadata = new TestMemberMetadata(\n   27:             'Symfony\\Component\\Validator\\Tests\\Fixtures\\Entity',\n   28              'getLastName',\n   29              'lastName'\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Tests/Mapping/PropertyMetadataTest.php:\n   13  \n   14  use Symfony\\Component\\Validator\\Mapping\\PropertyMetadata;\n   15: use Symfony\\Component\\Validator\\Tests\\Fixtures\\Entity;\n   16  \n   17  class PropertyMetadataTest extends \\PHPUnit_Framework_TestCase\n   18  {\n   19:     const CLASSNAME = 'Symfony\\Component\\Validator\\Tests\\Fixtures\\Entity';\n   20:     const PARENTCLASS = 'Symfony\\Component\\Validator\\Tests\\Fixtures\\EntityParent';\n   21  \n   22      public function testInvalidPropertyName()\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Tests/Mapping/Factory/LazyLoadingMetadataFactoryTest.php:\n   15  use Symfony\\Component\\Validator\\Mapping\\Factory\\LazyLoadingMetadataFactory;\n   16  use Symfony\\Component\\Validator\\Mapping\\Loader\\LoaderInterface;\n   17: use Symfony\\Component\\Validator\\Tests\\Fixtures\\ConstraintA;\n   18  \n   19  class LazyLoadingMetadataFactoryTest extends \\PHPUnit_Framework_TestCase\n   20  {\n   21:     const CLASSNAME = 'Symfony\\Component\\Validator\\Tests\\Fixtures\\Entity';\n   22:     const PARENTCLASS = 'Symfony\\Component\\Validator\\Tests\\Fixtures\\EntityParent';\n   23  \n   24      public function testLoadClassMetadata()\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Tests/Mapping/Loader/AnnotationLoaderTest.php:\n   22  use Symfony\\Component\\Validator\\Mapping\\ClassMetadata;\n   23  use Symfony\\Component\\Validator\\Mapping\\Loader\\AnnotationLoader;\n   24: use Symfony\\Component\\Validator\\Tests\\Fixtures\\ConstraintA;\n   25  \n   26  class AnnotationLoaderTest extends \\PHPUnit_Framework_TestCase\n   ..\n   30          $reader = new AnnotationReader();\n   31          $loader = new AnnotationLoader($reader);\n   32:         $metadata = new ClassMetadata('Symfony\\Component\\Validator\\Tests\\Fixtures\\Entity');\n   33  \n   34          $this->assertTrue($loader->loadClassMetadata($metadata));\n   ..\n   46      {\n   47          $loader = new AnnotationLoader(new AnnotationReader());\n   48:         $metadata = new ClassMetadata('Symfony\\Component\\Validator\\Tests\\Fixtures\\Entity');\n   49  \n   50          $loader->loadClassMetadata($metadata);\n   51  \n   52:         $expected = new ClassMetadata('Symfony\\Component\\Validator\\Tests\\Fixtures\\Entity');\n   53          $expected->setGroupSequence(array('Foo', 'Entity'));\n   54          $expected->addConstraint(new ConstraintA());\n   55:         $expected->addConstraint(new Callback(array('Symfony\\Component\\Validator\\Tests\\Fixtures\\CallbackClass', 'callback')));\n   56          $expected->addConstraint(new Callback('validateMe'));\n   57          $expected->addConstraint(new Callback('validateMeStatic'));\n   ..\n   86  \n   87          // Load Parent MetaData\n   88:         $parent_metadata = new ClassMetadata('Symfony\\Component\\Validator\\Tests\\Fixtures\\EntityParent');\n   89          $loader->loadClassMetadata($parent_metadata);\n   90  \n   91:         $expected_parent = new ClassMetadata('Symfony\\Component\\Validator\\Tests\\Fixtures\\EntityParent');\n   92          $expected_parent->addPropertyConstraint('other', new NotNull());\n   93          $expected_parent->getReflectionClass();\n   ..\n  103  \n  104          // Load Parent MetaData\n  105:         $parent_metadata = new ClassMetadata('Symfony\\Component\\Validator\\Tests\\Fixtures\\EntityParent');\n  106          $loader->loadClassMetadata($parent_metadata);\n  107  \n  108:         $metadata = new ClassMetadata('Symfony\\Component\\Validator\\Tests\\Fixtures\\Entity');\n  109  \n  110          // Merge parent metaData.\n  ...\n  113          $loader->loadClassMetadata($metadata);\n  114  \n  115:         $expected_parent = new ClassMetadata('Symfony\\Component\\Validator\\Tests\\Fixtures\\EntityParent');\n  116          $expected_parent->addPropertyConstraint('other', new NotNull());\n  117          $expected_parent->getReflectionClass();\n  118  \n  119:         $expected = new ClassMetadata('Symfony\\Component\\Validator\\Tests\\Fixtures\\Entity');\n  120          $expected->mergeConstraints($expected_parent);\n  121  \n  122          $expected->setGroupSequence(array('Foo', 'Entity'));\n  123          $expected->addConstraint(new ConstraintA());\n  124:         $expected->addConstraint(new Callback(array('Symfony\\Component\\Validator\\Tests\\Fixtures\\CallbackClass', 'callback')));\n  125          $expected->addConstraint(new Callback('validateMe'));\n  126          $expected->addConstraint(new Callback('validateMeStatic'));\n  ...\n  151          $loader = new AnnotationLoader(new AnnotationReader());\n  152  \n  153:         $metadata = new ClassMetadata('Symfony\\Component\\Validator\\Tests\\Fixtures\\GroupSequenceProviderEntity');\n  154          $loader->loadClassMetadata($metadata);\n  155  \n  156:         $expected = new ClassMetadata('Symfony\\Component\\Validator\\Tests\\Fixtures\\GroupSequenceProviderEntity');\n  157          $expected->setGroupSequenceProvider(true);\n  158          $expected->getReflectionClass();\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Tests/Mapping/Loader/constraint-mapping-non-strings.xml:\n    5      xsi:schemaLocation=\"http://symfony.com/schema/dic/constraint-mapping http://symfony.com/schema/dic/constraint-mapping/constraint-mapping-1.0.xsd\">\n    6  \n    7:   <namespace prefix=\"custom\">Symfony\\Component\\Validator\\Tests\\Fixtures\\</namespace>\n    8  \n    9:   <class name=\"Symfony\\Component\\Validator\\Tests\\Fixtures\\Entity\">\n   10      <property name=\"firstName\">\n   11        <!-- Constraint with a Boolean -->\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Tests/Mapping/Loader/constraint-mapping.xml:\n    5      xsi:schemaLocation=\"http://symfony.com/schema/dic/constraint-mapping http://symfony.com/schema/dic/constraint-mapping/constraint-mapping-1.0.xsd\">\n    6  \n    7:   <namespace prefix=\"custom\">Symfony\\Component\\Validator\\Tests\\Fixtures\\</namespace>\n    8  \n    9:   <class name=\"Symfony\\Component\\Validator\\Tests\\Fixtures\\Entity\">\n   10  \n   11      <group-sequence>\n   ..\n   17  \n   18      <!-- Custom constraint -->\n   19:     <constraint name=\"Symfony\\Component\\Validator\\Tests\\Fixtures\\ConstraintA\" />\n   20  \n   21      <!-- Custom constraint with namespace abbreviation-->\n   ..\n   28  \n   29      <constraint name=\"Callback\">\n   30:         <value>Symfony\\Component\\Validator\\Tests\\Fixtures\\CallbackClass</value>\n   31          <value>callback</value>\n   32      </constraint>\n   ..\n  111    </class>\n  112  \n  113:   <class name=\"Symfony\\Component\\Validator\\Tests\\Fixtures\\GroupSequenceProviderEntity\">\n  114  \n  115      <!-- GROUP SEQUENCE PROVIDER -->\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Tests/Mapping/Loader/constraint-mapping.yml:\n    1  namespaces:\n    2:   custom: Symfony\\Component\\Validator\\Tests\\Fixtures\\\n    3  \n    4: Symfony\\Component\\Validator\\Tests\\Fixtures\\Entity:\n    5    group_sequence:\n    6      - Foo\n    .\n    9    constraints:\n   10      # Custom constraint\n   11:     - Symfony\\Component\\Validator\\Tests\\Fixtures\\ConstraintA: ~\n   12      # Custom constraint with namespaces prefix\n   13      - \"custom:ConstraintB\": ~\n   ..\n   15      - Callback: validateMe\n   16      - Callback: validateMeStatic\n   17:     - Callback: [Symfony\\Component\\Validator\\Tests\\Fixtures\\CallbackClass, callback]\n   18  \n   19    properties:\n   ..\n   59        - \"IsTrue\": ~\n   60  \n   61: Symfony\\Component\\Validator\\Tests\\Fixtures\\GroupSequenceProviderEntity:\n   62    group_sequence_provider: true\n   63  \n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Tests/Mapping/Loader/FilesLoaderTest.php:\n   29              ->method('loadClassMetadata');\n   30          $loader = $this->getFilesLoader($fileLoader);\n   31:         $loader->loadClassMetadata(new ClassMetadata('Symfony\\Component\\Validator\\Tests\\Fixtures\\Entity'));\n   32      }\n   33  \n   34      public function getFilesLoader(LoaderInterface $loader)\n   35      {\n   36:         return $this->getMockForAbstractClass('Symfony\\Component\\Validator\\Tests\\Fixtures\\FilesLoader', array(array(\n   37              __DIR__.'/constraint-mapping.xml',\n   38              __DIR__.'/constraint-mapping.yaml',\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Tests/Mapping/Loader/StaticMethodLoaderTest.php:\n   14  use Symfony\\Component\\Validator\\Mapping\\ClassMetadata;\n   15  use Symfony\\Component\\Validator\\Mapping\\Loader\\StaticMethodLoader;\n   16: use Symfony\\Component\\Validator\\Tests\\Fixtures\\ConstraintA;\n   17  \n   18  class StaticMethodLoaderTest extends \\PHPUnit_Framework_TestCase\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Tests/Mapping/Loader/withdoctype.xml:\n    4      xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    5      xsi:schemaLocation=\"http://symfony.com/schema/dic/constraint-mapping http://symfony.com/schema/dic/constraint-mapping/constraint-mapping-1.0.xsd\">\n    6:   <class name=\"Symfony\\Component\\Validator\\Tests\\Fixtures\\Entity\" />\n    7  </constraint-mapping>\n    8  \n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Tests/Mapping/Loader/XmlFileLoaderTest.php:\n   23  use Symfony\\Component\\Validator\\Mapping\\ClassMetadata;\n   24  use Symfony\\Component\\Validator\\Mapping\\Loader\\XmlFileLoader;\n   25: use Symfony\\Component\\Validator\\Tests\\Fixtures\\ConstraintA;\n   26: use Symfony\\Component\\Validator\\Tests\\Fixtures\\ConstraintB;\n   27  \n   28  class XmlFileLoaderTest extends \\PHPUnit_Framework_TestCase\n   ..\n   31      {\n   32          $loader = new XmlFileLoader(__DIR__.'/constraint-mapping.xml');\n   33:         $metadata = new ClassMetadata('Symfony\\Component\\Validator\\Tests\\Fixtures\\Entity');\n   34  \n   35          $this->assertTrue($loader->loadClassMetadata($metadata));\n   ..\n   47      {\n   48          $loader = new XmlFileLoader(__DIR__.'/constraint-mapping.xml');\n   49:         $metadata = new ClassMetadata('Symfony\\Component\\Validator\\Tests\\Fixtures\\Entity');\n   50  \n   51          $loader->loadClassMetadata($metadata);\n   52  \n   53:         $expected = new ClassMetadata('Symfony\\Component\\Validator\\Tests\\Fixtures\\Entity');\n   54          $expected->setGroupSequence(array('Foo', 'Entity'));\n   55          $expected->addConstraint(new ConstraintA());\n   ..\n   57          $expected->addConstraint(new Callback('validateMe'));\n   58          $expected->addConstraint(new Callback('validateMeStatic'));\n   59:         $expected->addConstraint(new Callback(array('Symfony\\Component\\Validator\\Tests\\Fixtures\\CallbackClass', 'callback')));\n   60          $expected->addPropertyConstraint('firstName', new NotNull());\n   61          $expected->addPropertyConstraint('firstName', new Range(array('min' => 3)));\n   ..\n   81      {\n   82          $loader = new XmlFileLoader(__DIR__.'/constraint-mapping-non-strings.xml');\n   83:         $metadata = new ClassMetadata('Symfony\\Component\\Validator\\Tests\\Fixtures\\Entity');\n   84  \n   85          $loader->loadClassMetadata($metadata);\n   86  \n   87:         $expected = new ClassMetadata('Symfony\\Component\\Validator\\Tests\\Fixtures\\Entity');\n   88          $expected->addPropertyConstraint('firstName', new Regex(array('pattern' => '/^1/', 'match' => false)));\n   89  \n   ..\n   97      {\n   98          $loader = new XmlFileLoader(__DIR__.'/constraint-mapping.xml');\n   99:         $metadata = new ClassMetadata('Symfony\\Component\\Validator\\Tests\\Fixtures\\GroupSequenceProviderEntity');\n  100  \n  101          $loader->loadClassMetadata($metadata);\n  102  \n  103:         $expected = new ClassMetadata('Symfony\\Component\\Validator\\Tests\\Fixtures\\GroupSequenceProviderEntity');\n  104          $expected->setGroupSequenceProvider(true);\n  105  \n  ...\n  110      {\n  111          $loader = new XmlFileLoader(__DIR__.'/withdoctype.xml');\n  112:         $metadata = new ClassMetadata('Symfony\\Component\\Validator\\Tests\\Fixtures\\Entity');\n  113  \n  114          $this->setExpectedException('\\Symfony\\Component\\Validator\\Exception\\MappingException');\n  ...\n  122      {\n  123          $loader = new XmlFileLoader(__DIR__.'/withdoctype.xml');\n  124:         $metadata = new ClassMetadata('Symfony\\Component\\Validator\\Tests\\Fixtures\\Entity');\n  125  \n  126          try {\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Tests/Mapping/Loader/YamlFileLoaderTest.php:\n   21  use Symfony\\Component\\Validator\\Mapping\\ClassMetadata;\n   22  use Symfony\\Component\\Validator\\Mapping\\Loader\\YamlFileLoader;\n   23: use Symfony\\Component\\Validator\\Tests\\Fixtures\\ConstraintA;\n   24: use Symfony\\Component\\Validator\\Tests\\Fixtures\\ConstraintB;\n   25  \n   26  class YamlFileLoaderTest extends \\PHPUnit_Framework_TestCase\n   ..\n   29      {\n   30          $loader = new YamlFileLoader(__DIR__.'/empty-mapping.yml');\n   31:         $metadata = new ClassMetadata('Symfony\\Component\\Validator\\Tests\\Fixtures\\Entity');\n   32  \n   33          $this->assertFalse($loader->loadClassMetadata($metadata));\n   ..\n   37      {\n   38          $loader = new YamlFileLoader(__DIR__.'/nonvalid-mapping.yml');\n   39:         $metadata = new ClassMetadata('Symfony\\Component\\Validator\\Tests\\Fixtures\\Entity');\n   40  \n   41          $this->setExpectedException('\\InvalidArgumentException');\n   ..\n   49      {\n   50          $loader = new YamlFileLoader(__DIR__.'/nonvalid-mapping.yml');\n   51:         $metadata = new ClassMetadata('Symfony\\Component\\Validator\\Tests\\Fixtures\\Entity');\n   52          try {\n   53              $loader->loadClassMetadata($metadata);\n   ..\n   62      {\n   63          $loader = new YamlFileLoader(__DIR__.'/constraint-mapping.yml');\n   64:         $metadata = new ClassMetadata('Symfony\\Component\\Validator\\Tests\\Fixtures\\Entity');\n   65  \n   66          $this->assertTrue($loader->loadClassMetadata($metadata));\n   ..\n   78      {\n   79          $loader = new YamlFileLoader(__DIR__.'/constraint-mapping.yml');\n   80:         $metadata = new ClassMetadata('Symfony\\Component\\Validator\\Tests\\Fixtures\\Entity');\n   81  \n   82          $loader->loadClassMetadata($metadata);\n   83  \n   84:         $expected = new ClassMetadata('Symfony\\Component\\Validator\\Tests\\Fixtures\\Entity');\n   85          $expected->setGroupSequence(array('Foo', 'Entity'));\n   86          $expected->addConstraint(new ConstraintA());\n   ..\n   88          $expected->addConstraint(new Callback('validateMe'));\n   89          $expected->addConstraint(new Callback('validateMeStatic'));\n   90:         $expected->addConstraint(new Callback(array('Symfony\\Component\\Validator\\Tests\\Fixtures\\CallbackClass', 'callback')));\n   91          $expected->addPropertyConstraint('firstName', new NotNull());\n   92          $expected->addPropertyConstraint('firstName', new Range(array('min' => 3)));\n   ..\n  112      {\n  113          $loader = new YamlFileLoader(__DIR__.'/constraint-mapping.yml');\n  114:         $metadata = new ClassMetadata('Symfony\\Component\\Validator\\Tests\\Fixtures\\GroupSequenceProviderEntity');\n  115  \n  116          $loader->loadClassMetadata($metadata);\n  117  \n  118:         $expected = new ClassMetadata('Symfony\\Component\\Validator\\Tests\\Fixtures\\GroupSequenceProviderEntity');\n  119          $expected->setGroupSequenceProvider(true);\n  120  \n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Tests/Validator/Abstract2Dot5ApiTest.php:\n   21  use Symfony\\Component\\Validator\\Mapping\\ClassMetadata;\n   22  use Symfony\\Component\\Validator\\MetadataFactoryInterface;\n   23: use Symfony\\Component\\Validator\\Tests\\Fixtures\\Entity;\n   24: use Symfony\\Component\\Validator\\Tests\\Fixtures\\FailingConstraint;\n   25: use Symfony\\Component\\Validator\\Tests\\Fixtures\\FakeClassMetadata;\n   26: use Symfony\\Component\\Validator\\Tests\\Fixtures\\Reference;\n   27  use Symfony\\Component\\Validator\\Validator\\ValidatorInterface;\n   28  \n   ..\n  551          $entity = new Entity();\n  552  \n  553:         $metadata = $this->getMock('Symfony\\Component\\Validator\\Tests\\Fixtures\\LegacyClassMetadata');\n  554          $metadata->expects($this->any())\n  555              ->method('getClassName')\n  ...\n  570          $entity->reference = new Reference();\n  571  \n  572:         $metadata = $this->getMock('Symfony\\Component\\Validator\\Tests\\Fixtures\\LegacyClassMetadata');\n  573          $metadata->expects($this->any())\n  574              ->method('getClassName')\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Tests/Validator/AbstractLegacyApiTest.php:\n   17  use Symfony\\Component\\Validator\\ExecutionContextInterface;\n   18  use Symfony\\Component\\Validator\\MetadataFactoryInterface;\n   19: use Symfony\\Component\\Validator\\Tests\\Fixtures\\Entity;\n   20: use Symfony\\Component\\Validator\\Tests\\Fixtures\\Reference;\n   21  use Symfony\\Component\\Validator\\ValidatorInterface as LegacyValidatorInterface;\n   22  \n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Tests/Validator/AbstractValidatorTest.php:\n   18  use Symfony\\Component\\Validator\\ExecutionContextInterface;\n   19  use Symfony\\Component\\Validator\\Mapping\\ClassMetadata;\n   20: use Symfony\\Component\\Validator\\Tests\\Fixtures\\Entity;\n   21: use Symfony\\Component\\Validator\\Tests\\Fixtures\\FakeMetadataFactory;\n   22: use Symfony\\Component\\Validator\\Tests\\Fixtures\\GroupSequenceProviderEntity;\n   23: use Symfony\\Component\\Validator\\Tests\\Fixtures\\Reference;\n   24  \n   25  /**\n   ..\n   30  abstract class AbstractValidatorTest extends \\PHPUnit_Framework_TestCase\n   31  {\n   32:     const ENTITY_CLASS = 'Symfony\\Component\\Validator\\Tests\\Fixtures\\Entity';\n   33  \n   34:     const REFERENCE_CLASS = 'Symfony\\Component\\Validator\\Tests\\Fixtures\\Reference';\n   35  \n   36      /**\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Tests/Validator/RecursiveValidator2Dot5ApiTest.php:\n   16  use Symfony\\Component\\Validator\\Context\\ExecutionContextFactory;\n   17  use Symfony\\Component\\Validator\\MetadataFactoryInterface;\n   18: use Symfony\\Component\\Validator\\Tests\\Fixtures\\Entity;\n   19  use Symfony\\Component\\Validator\\Validator\\RecursiveValidator;\n   20  \n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/validator/Validator/RecursiveValidator.php:\n  120          $numArgs = func_num_args();\n  121  \n  122:         // Use new signature if constraints are given in the second argument\n  123          if (self::testConstraints($groups) && ($numArgs < 3 || 3 === $numArgs && self::testGroups($traverse))) {\n  124              // Rename to avoid total confusion ;)\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/var-dumper/README.md:\n    8  references into account. More than being immune to infinite recursion\n    9  problems, it allows dumping where references link to each other.\n   10: It explores recursive structures using a breadth-first algorithm.\n   11  \n   12  The component exposes all the parts involved in the different steps of\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/var-dumper/Cloner/AbstractCloner.php:\n  139  \n  140      /**\n  141:      * Sets the maximum number of items to clone past the first level in nested structures.\n  142       *\n  143       * @param int $maxItems\n  ...\n  200       *\n  201       * @param Stub $stub     The Stub for the casted object.\n  202:      * @param bool $isNested True if the object is nested in the dumped structure.\n  203       *\n  204       * @return array The object casted as array.\n  ...\n  239       *\n  240       * @param Stub $stub     The Stub for the casted resource.\n  241:      * @param bool $isNested True if the object is nested in the dumped structure.\n  242       *\n  243       * @return array The resource casted as array.\n  ...\n  265       * @param array           $a        The result of the previous cast for chained casters.\n  266       * @param Stub            $stub     The Stub for the casted object/resource.\n  267:      * @param bool            $isNested True if $obj is nested in the dumped structure.\n  268       *\n  269       * @return array The casted object/resource.\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/var-dumper/Cloner/Data.php:\n   31  \n   32      /**\n   33:      * @return array The raw data structure.\n   34       */\n   35      public function getRawData()\n   ..\n  207  \n  208      /**\n  209:      * Dumps children of hash structures.\n  210       *\n  211       * @param DumperInterface $dumper\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/var-dumper/Cloner/VarCloner.php:\n   40          $cookie = (object) array();     // Unique object used to detect hard references\n   41          $gid = uniqid(mt_rand(), true); // Unique string used to detect the special $GLOBALS variable\n   42:         $a = null;                      // Array cast for nested structures\n   43          $stub = null;                   // Stub capturing the main properties of an original item value\n   44                                          // or null if the original value is used directly\n   ..\n   79                  if ($zval['zval_isref']) {\n   80                      $queue[$i][$k] = &$stub;    // Break hard references to make $queue completely\n   81:                     unset($stub);               // independent from the original structure\n   82                      if (isset($hardRefs[$zval['zval_hash']])) {\n   83                          $queue[$i][$k] = $useExt ? ($v = $hardRefs[$zval['zval_hash']]) : ($step[$k] = $v);\n   ..\n   90                  }\n   91                  // Create $stub when the original value $v can not be used directly\n   92:                 // If $v is a nested structure, put that structure in array $a\n   93                  switch ($zval['type']) {\n   94                      case 'string':\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/var-dumper/Dumper/AbstractDumper.php:\n  154       * Dumps the current line.\n  155       *\n  156:      * @param int $depth The recursive depth in the dumped structure for the line being dumped.\n  157       */\n  158      protected function dumpLine($depth)\n  ...\n  166       *\n  167       * @param string $line  The line to write.\n  168:      * @param int    $depth The recursive depth in the dumped structure.\n  169       */\n  170      protected function echoLine($line, $depth, $indentPad)\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/var-dumper/Dumper/CliDumper.php:\n  301  \n  302      /**\n  303:      * Dumps a key in a hash structure.\n  304       *\n  305       * @param Cursor $cursor The Cursor position in the dump.\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/var-dumper/Tests/CliDumperTest.php:\n   23      public function testGet()\n   24      {\n   25:         require __DIR__.'/Fixtures/dumb-var.php';\n   26  \n   27          $dumper = new CliDumper('php://output');\n   ..\n   80      options: []\n   81    }\n   82:   \"obj\" => Symfony\\Component\\VarDumper\\Tests\\Fixture\\DumbFoo {#%d\n   83      +foo: \"foo\"\n   84      +\"bar\": \"bar\"\n   ..\n  103    ]\n  104    8 => &1 null\n  105:   \"sobj\" => Symfony\\Component\\VarDumper\\Tests\\Fixture\\DumbFoo {#%d}\n  106    \"snobj\" => &3 {#%d}\n  107    \"snobj2\" => {#%d}\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/var-dumper/Tests/HtmlDumperTest.php:\n   22      public function testGet()\n   23      {\n   24:         require __DIR__.'/Fixtures/dumb-var.php';\n   25  \n   26          $dumper = new HtmlDumper('php://output');\n   ..\n   83      <span class=sf-dump-meta>options</span>: []\n   84    </samp>}\n   85:   \"<span class=sf-dump-key>obj</span>\" => <abbr title=\"Symfony\\Component\\VarDumper\\Tests\\Fixture\\DumbFoo\" class=sf-dump-note>DumbFoo</abbr> {<a class=sf-dump-ref href=#{$dumpId}-ref2%d title=\"2 occurrences\">#%d</a><samp id={$dumpId}-ref2%d>\n   86      +<span class=sf-dump-public title=\"Public property\">foo</span>: \"<span class=sf-dump-str title=\"3 characters\">foo</span>\"\n   87      +\"<span class=sf-dump-public title=\"Runtime added dynamic property\">bar</span>\": \"<span class=sf-dump-str title=\"3 characters\">bar</span>\"\n   ..\n  106    </samp>]\n  107    <span class=sf-dump-key>8</span> => <a class=sf-dump-ref href=#{$dumpId}-ref01 title=\"2 occurrences\">&amp;1</a> <span class=sf-dump-const>null</span>\n  108:   \"<span class=sf-dump-key>sobj</span>\" => <abbr title=\"Symfony\\Component\\VarDumper\\Tests\\Fixture\\DumbFoo\" class=sf-dump-note>DumbFoo</abbr> {<a class=sf-dump-ref href=#{$dumpId}-ref2%d title=\"2 occurrences\">#%d</a>}\n  109    \"<span class=sf-dump-key>snobj</span>\" => <a class=sf-dump-ref href=#{$dumpId}-ref03 title=\"2 occurrences\">&amp;3</a> {<a class=sf-dump-ref href=#{$dumpId}-ref2%d title=\"3 occurrences\">#%d</a>}\n  110    \"<span class=sf-dump-key>snobj2</span>\" => {<a class=sf-dump-ref href=#{$dumpId}-ref2%d title=\"3 occurrences\">#%d</a>}\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/var-dumper/Tests/Fixtures/dumb-var.php:\n    1  <?php\n    2  \n    3: namespace Symfony\\Component\\VarDumper\\Tests\\Fixture;\n    4  \n    5: if (!class_exists('Symfony\\Component\\VarDumper\\Tests\\Fixture\\DumbFoo')) {\n    6      class DumbFoo\n    7      {\n\n/Users/sopae/Projects/AkinsParker/vendor/twig/twig/CHANGELOG:\n   31  * 1.21.0 (2015-08-24)\n   32  \n   33:  * added deprecation notices for deprecated features\n   34:  * added a deprecation \"framework\" for filters/functions/tests and test fixtures\n   35  \n   36  * 1.20.0 (2015-08-12)\n   ..\n  402  \n  403   * optimized variable access when using PHP 5.4\n  404:  * changed the precedence of the .. operator to be more consistent with languages that implements such a feature like Ruby\n  405   * added an Exception to Twig_Loader_Array::isFresh() method when the template does not exist to be consistent with other loaders\n  406   * added Twig_Function_Node to allow more complex functions to have their own Node class\n  ...\n  445   * added Twig_Loader_Chain\n  446   * added Twig_Loader_Array::setTemplate()\n  447:  * added an optimization for the set tag when used to capture a large chunk of static text\n  448   * changed name regex to match PHP one \"[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*\" (works for blocks, tags, functions, filters, and macros)\n  449   * removed the possibility to use the \"extends\" tag from a block\n  ...\n  613   * fixed objects with __toString() not being autoescaped\n  614   * fixed subscript expressions when calling __call() (methods now keep the case)\n  615:  * added \"test\" feature (accessible via the \"is\" operator)\n  616   * removed the debug tag (should be done in an extension)\n  617   * fixed trans tag when no vars are used in plural form\n  ...\n  634   * removed Twig_Template instances from the debug tag output\n  635   * fixed objects with __isset() defined\n  636:  * fixed set tag when used with a capture\n  637   * fixed type hinting for Twig_Environment::addFilter() method\n  638  \n\n/Users/sopae/Projects/AkinsParker/vendor/twig/twig/doc/advanced.rst:\n   92      {{ text.lipsum(40) }}\n   93  \n   94: As a rule of thumb, use functions for frequently used features and global\n   95  objects for everything else.\n   96  \n   ..\n  297      $twig->addFunction($function);\n  298  \n  299: Functions support the same features as filters, except for the ``pre_escape``\n  300  and ``preserves_safety`` options.\n  301  \n  ...\n  368  If you want to pass a variable number of positional or named arguments to the\n  369  test, set the ``is_variadic`` option to ``true``. Tests also support dynamic\n  370: name feature as filters and functions.\n  371  \n  372  Tags\n  373  ----\n  374  \n  375: One of the most exciting features of a template engine like Twig is the\n  376  possibility to define new language constructs. This is also the most complex\n  377: feature as you need to understand how Twig's internals work.\n  378  \n  379  Let's create a simple ``set`` tag that allows the definition of simple\n  ...\n  825  \n  826  You can create functional tests for extensions simply by creating the\n  827: following file structure in your test directory::\n  828  \n  829:     Fixtures/\n  830          filters/\n  831              foo.test\n  ...\n  851          }\n  852  \n  853:         public function getFixturesDir()\n  854          {\n  855:             return dirname(__FILE__).'/Fixtures/';\n  856          }\n  857      }\n  858  \n  859: Fixtures examples can be found within the Twig repository\n  860: `tests/Twig/Fixtures`_ directory.\n  861  \n  862  Node Tests\n  ...\n  869  .. _`spl_autoload_register()`: http://www.php.net/spl_autoload_register\n  870  .. _`rot13`:                   http://www.php.net/manual/en/function.str-rot13.php\n  871: .. _`tests/Twig/Fixtures`:     https://github.com/twigphp/Twig/tree/master/test/Twig/Tests/Fixtures\n  872  .. _`tests/Twig/Node`:         https://github.com/twigphp/Twig/tree/master/test/Twig/Tests/Node\n  873  \n\n/Users/sopae/Projects/AkinsParker/vendor/twig/twig/doc/advanced_legacy.rst:\n   93      {{ text.lipsum(40) }}\n   94  \n   95: As a rule of thumb, use functions for frequently used features and global\n   96  objects for everything else.\n   97  \n   ..\n  362  ----\n  363  \n  364: One of the most exciting feature of a template engine like Twig is the\n  365  possibility to define new language constructs. This is also the most complex\n  366: feature as you need to understand how Twig's internals work.\n  367  \n  368  Let's create a simple ``set`` tag that allows the definition of simple\n  ...\n  840  \n  841  You can create functional tests for extensions simply by creating the\n  842: following file structure in your test directory::\n  843  \n  844:     Fixtures/\n  845          filters/\n  846              foo.test\n  ...\n  866          }\n  867  \n  868:         public function getFixturesDir()\n  869          {\n  870:             return dirname(__FILE__).'/Fixtures/';\n  871          }\n  872      }\n  873  \n  874: Fixtures examples can be found within the Twig repository\n  875: `tests/Twig/Fixtures`_ directory.\n  876  \n  877  Node Tests\n  ...\n  884  .. _`spl_autoload_register()`: http://www.php.net/spl_autoload_register\n  885  .. _`rot13`:                   http://www.php.net/manual/en/function.str-rot13.php\n  886: .. _`tests/Twig/Fixtures`:     https://github.com/twigphp/Twig/tree/master/test/Twig/Tests/Fixtures\n  887  .. _`tests/Twig/Node`:         https://github.com/twigphp/Twig/tree/master/test/Twig/Tests/Node\n  888  \n\n/Users/sopae/Projects/AkinsParker/vendor/twig/twig/doc/api.rst:\n  141  \n  142  All template loaders can cache the compiled templates on the filesystem for\n  143: future reuse. It speeds up Twig a lot as templates are only compiled once; and\n  144  the performance boost is even larger if you use a PHP accelerator such as APC.\n  145  See the ``cache`` and ``auto_reload`` options of ``Twig_Environment`` above\n  ...\n  289  ----------------\n  290  \n  291: Twig extensions are packages that add new features to Twig. Using an\n  292  extension is as simple as using the ``addExtension()`` method::\n  293  \n  ...\n  296  Twig comes bundled with the following extensions:\n  297  \n  298: * *Twig_Extension_Core*: Defines all the core features of Twig.\n  299  \n  300  * *Twig_Extension_Escaper*: Adds automatic output-escaping and the possibility\n  ...\n  315  -------------------\n  316  \n  317: This section describes the features added by the built-in extensions.\n  318  \n  319  .. tip::\n  ...\n  325  ~~~~~~~~~~~~~~\n  326  \n  327: The ``core`` extension defines all the core features of Twig:\n  328  \n  329  * :doc:`Tags <tags/index>`;\n\n/Users/sopae/Projects/AkinsParker/vendor/twig/twig/doc/deprecated.rst:\n    1: Deprecated Features\n    2  ===================\n    3  \n    4: This document lists all deprecated features in Twig. Deprecated features are\n    5  kept for backward compatibility and removed in the next major release (a\n    6: feature that was deprecated in Twig 1.x is removed in Twig 2.0).\n    7  \n    8  Deprecation Notices\n    .\n   10  \n   11  As of Twig 1.21, Twig generates deprecation notices when a template uses\n   12: deprecated features. See :ref:`deprecation-notices` for more information.\n   13  \n   14  Token Parsers\n\n/Users/sopae/Projects/AkinsParker/vendor/twig/twig/doc/internals.rst:\n    4  Twig is very extensible and you can easily hack it. Keep in mind that you\n    5  should probably try to create an extension before hacking the core, as most\n    6: features and enhancements can be handled with extensions. This chapter is also\n    7  useful for people who want to understand how Twig works under the hood.\n    8  \n\n/Users/sopae/Projects/AkinsParker/vendor/twig/twig/doc/intro.rst:\n   10  functionality useful for templating environments.\n   11  \n   12: The key-features are...\n   13  \n   14  * *Fast*: Twig compiles templates down to plain optimized PHP code. The\n\n/Users/sopae/Projects/AkinsParker/vendor/twig/twig/doc/recipes.rst:\n   10      This works as of Twig 1.21.\n   11  \n   12: Deprecated features generate deprecation notices (via a call to the\n   13  ``trigger_error()`` PHP function). By default, they are silenced and never\n   14  displayed nor logged.\n   15  \n   16: To easily remove all deprecated feature usages from your templates, write and\n   17  run a script along the lines of the following::\n   18  \n   ..\n  157  \n  158  Twig allows some syntax customization for the block delimiters. It's not\n  159: recommended to use this feature as templates will be tied with your custom\n  160  syntax. But for specific projects, it can make sense to change the defaults.\n  161  \n\n/Users/sopae/Projects/AkinsParker/vendor/twig/twig/doc/templates.rst:\n  242      of all arguments are listed when supported.\n  243  \n  244: Control Structure\n  245  -----------------\n  246  \n  247: A control structure refers to all those things that control the flow of a\n  248  program - conditionals (i.e. ``if``/``elseif``/``else``), ``for``-loops, as\n  249: well as things like blocks. Control structures appear inside ``{% ... %}``\n  250  blocks.\n  251  \n  ...\n  406  \n  407      The documentation page for the :doc:`extends<tags/extends>` tag describes\n  408:     more advanced features like block nesting, scope, dynamic inheritance, and\n  409      conditional inheritance.\n  410  \n  ...\n  412  \n  413      Twig also supports multiple inheritance with the so called horizontal reuse\n  414:     with the help of the :doc:`use<tags/use>` tag. This is an advanced feature\n  415      hardly ever needed in regular templates.\n  416  \n\n/Users/sopae/Projects/AkinsParker/vendor/twig/twig/doc/tags/embed.rst:\n   51      └─────────────────────────────────────┘\n   52  \n   53: Some pages (\"foo\" and \"bar\") share the same content structure -\n   54  two vertically stacked boxes:\n   55  \n   ..\n   69      └─────────────────────────────────────┘\n   70  \n   71: While other pages (\"boom\" and \"baz\") share a different content structure -\n   72  two boxes side by side:\n   73  \n   ..\n  100  \n  101   * The first solution may indeed work for this simplified example. But imagine\n  102:    we add a sidebar, which may again contain different, recurring structures\n  103     of content. Now we would need to create intermediate base templates for\n  104:    all occurring combinations of content structure and sidebar structure...\n  105     and so on.\n  106  \n  107   * The second solution involves duplication of common code with all its negative\n  108     consequences: any change involves finding and editing all affected copies\n  109:    of the structure, correctness has to be verified for each copy, copies may\n  110     go out of sync by careless modifications etc.\n  111  \n  112  In such a situation, the ``embed`` tag comes in handy. The common layout\n  113: code can live in a single base template, and the two different content structures,\n  114  let's call them \"micro layouts\" go into separate templates which are embedded\n  115  as necessary:\n\n/Users/sopae/Projects/AkinsParker/vendor/twig/twig/doc/tags/if.rst:\n   42  .. code-block:: jinja\n   43  \n   44:     {% if temperature > 18 and temperature < 27 %}\n   45          <p>It's a nice day for a walk in the park.</p>\n   46      {% endif %}\n\n/Users/sopae/Projects/AkinsParker/vendor/twig/twig/doc/tags/include.rst:\n   61  \n   62  .. versionadded:: 1.2\n   63:     The ``ignore missing`` feature has been added in Twig 1.2.\n   64  \n   65  You can mark an include with ``ignore missing`` in which case Twig will ignore\n\n/Users/sopae/Projects/AkinsParker/vendor/twig/twig/doc/tags/set.rst:\n   39      {% set bar = 'bar' %}\n   40  \n   41: The ``set`` tag can also be used to 'capture' chunks of text:\n   42  \n   43  .. code-block:: jinja\n\n/Users/sopae/Projects/AkinsParker/vendor/twig/twig/doc/tags/use.rst:\n    7  .. note::\n    8  \n    9:     Horizontal reuse is an advanced Twig feature that is hardly ever needed in\n   10      regular templates. It is mainly used by projects that need to make\n   11      template blocks reusable without using inheritance.\n   12  \n   13: Template inheritance is one of the most powerful Twig's feature but it is\n   14  limited to single inheritance; a template can only extend one other template.\n   15  This limitation makes template inheritance simple to understand and easy to\n\n/Users/sopae/Projects/AkinsParker/vendor/twig/twig/lib/Twig/Compiler.php:\n  213              // when mbstring.func_overload is set to 2\n  214              // mb_substr_count() replaces substr_count()\n  215:             // but they have different signatures!\n  216              if (((int) ini_get('mbstring.func_overload')) & 2) {\n  217                  // this is much slower than the \"right\" version\n\n/Users/sopae/Projects/AkinsParker/vendor/twig/twig/lib/Twig/Parser.php:\n  380          }\n  381  \n  382:         // bypass \"set\" nodes as they \"capture\" the output\n  383          if ($node instanceof Twig_Node_Set) {\n  384              return $node;\n\n/Users/sopae/Projects/AkinsParker/vendor/twig/twig/lib/Twig/Extension/Core.php:\n 1009   * @param string           $strategy   The escaping strategy\n 1010   * @param string           $charset    The charset\n 1011:  * @param bool             $autoescape Whether the function is called by the auto-escaping feature (true) or by the developer (false)\n 1012   *\n 1013   * @return string\n ....\n 1068  \n 1069              if (isset($htmlspecialcharsCharsets[strtoupper($charset)])) {\n 1070:                 // cache the lowercase variant for future iterations\n 1071                  $htmlspecialcharsCharsets[$charset] = true;\n 1072  \n\n/Users/sopae/Projects/AkinsParker/vendor/twig/twig/lib/Twig/Node/Set.php:\n   17  class Twig_Node_Set extends Twig_Node\n   18  {\n   19:     public function __construct($capture, Twig_NodeInterface $names, Twig_NodeInterface $values, $lineno, $tag = null)\n   20      {\n   21:         parent::__construct(array('names' => $names, 'values' => $values), array('capture' => $capture, 'safe' => false), $lineno, $tag);\n   22  \n   23          /*\n   24:          * Optimizes the node when capture is used for a large block of text.\n   25           *\n   26           * {% set foo %}foo{% endset %} is compiled to $context['foo'] = new Twig_Markup(\"foo\");\n   27           */\n   28:         if ($this->getAttribute('capture')) {\n   29              $this->setAttribute('safe', true);\n   30  \n   ..\n   32              if ($values instanceof Twig_Node_Text) {\n   33                  $this->setNode('values', new Twig_Node_Expression_Constant($values->getAttribute('data'), $values->getLine()));\n   34:                 $this->setAttribute('capture', false);\n   35              }\n   36          }\n   ..\n   57              $compiler->raw(')');\n   58          } else {\n   59:             if ($this->getAttribute('capture')) {\n   60                  $compiler\n   61                      ->write(\"ob_start();\\n\")\n   ..\n   66              $compiler->subcompile($this->getNode('names'), false);\n   67  \n   68:             if ($this->getAttribute('capture')) {\n   69                  $compiler->raw(\" = ('' === \\$tmp = ob_get_clean()) ? '' : new Twig_Markup(\\$tmp, \\$this->env->getCharset())\");\n   70              }\n   71          }\n   72  \n   73:         if (!$this->getAttribute('capture')) {\n   74              $compiler->raw(' = ');\n   75  \n\n/Users/sopae/Projects/AkinsParker/vendor/twig/twig/lib/Twig/Test/IntegrationTestCase.php:\n   21       * @return string\n   22       */\n   23:     abstract protected function getFixturesDir();\n   24  \n   25      /**\n   ..\n   74      public function getTests($name, $legacyTests = false)\n   75      {\n   76:         $fixturesDir = realpath($this->getFixturesDir());\n   77          $tests = array();\n   78  \n   79:         foreach (new RecursiveIteratorIterator(new RecursiveDirectoryIterator($fixturesDir), RecursiveIteratorIterator::LEAVES_ONLY) as $file) {\n   80              if (!preg_match('/\\.test$/', $file)) {\n   81                  continue;\n   ..\n  101                  preg_match_all('/--DATA--(.*?)(?:--CONFIG--(.*?))?--EXPECT--(.*?)(?=\\-\\-DATA\\-\\-|$)/s', $test, $outputs, PREG_SET_ORDER);\n  102              } else {\n  103:                 throw new InvalidArgumentException(sprintf('Test \"%s\" is not valid.', str_replace($fixturesDir.'/', '', $file)));\n  104              }\n  105  \n  106:             $tests[] = array(str_replace($fixturesDir.'/', '', $file), $message, $condition, $templates, $exception, $outputs);\n  107          }\n  108  \n\n/Users/sopae/Projects/AkinsParker/vendor/twig/twig/lib/Twig/TokenParser/Set.php:\n   42          $names = $this->parser->getExpressionParser()->parseAssignmentExpression();\n   43  \n   44:         $capture = false;\n   45          if ($stream->nextIf(Twig_Token::OPERATOR_TYPE, '=')) {\n   46              $values = $this->parser->getExpressionParser()->parseMultitargetExpression();\n   ..\n   52              }\n   53          } else {\n   54:             $capture = true;\n   55  \n   56              if (count($names) > 1) {\n   ..\n   64          }\n   65  \n   66:         return new Twig_Node_Set($capture, $names, $values, $lineno, $this->getTag());\n   67      }\n   68  \n\n/Users/sopae/Projects/AkinsParker/vendor/twig/twig/test/Twig/Tests/ErrorTest.php:\n   30      public function testTwigExceptionAddsFileAndLineWhenMissingWithInheritanceOnDisk()\n   31      {\n   32:         $loader = new Twig_Loader_Filesystem(dirname(__FILE__).'/Fixtures/errors');\n   33          $twig = new Twig_Environment($loader, array('strict_variables' => true, 'debug' => true, 'cache' => false));\n   34  \n\n/Users/sopae/Projects/AkinsParker/vendor/twig/twig/test/Twig/Tests/IntegrationTest.php:\n   31      }\n   32  \n   33:     public function getFixturesDir()\n   34      {\n   35:         return dirname(__FILE__).'/Fixtures/';\n   36      }\n   37  }\n\n/Users/sopae/Projects/AkinsParker/vendor/twig/twig/test/Twig/Tests/LegacyIntegrationTest.php:\n   19      }\n   20  \n   21:     public function getFixturesDir()\n   22      {\n   23:         return dirname(__FILE__).'/LegacyFixtures/';\n   24      }\n   25  \n\n/Users/sopae/Projects/AkinsParker/vendor/twig/twig/test/Twig/Tests/Fixtures/tags/set/capture-empty.test:\n    1  --TEST--\n    2: \"set\" tag block empty capture\n    3  --TEMPLATE--\n    4  {% set foo %}{% endset %}\n\n/Users/sopae/Projects/AkinsParker/vendor/twig/twig/test/Twig/Tests/Fixtures/tags/set/capture.test:\n    1  --TEST--\n    2: \"set\" tag block capture\n    3  --TEMPLATE--\n    4  {% set foo %}f<br />o<br />o{% endset %}\n\n/Users/sopae/Projects/AkinsParker/vendor/twig/twig/test/Twig/Tests/Loader/FilesystemTest.php:\n   17      public function testSecurity($template)\n   18      {\n   19:         $loader = new Twig_Loader_Filesystem(array(dirname(__FILE__).'/../Fixtures'));\n   20  \n   21          try {\n   ..\n   54      public function testPaths()\n   55      {\n   56:         $basePath = dirname(__FILE__).'/Fixtures';\n   57  \n   58          $loader = new Twig_Loader_Filesystem(array($basePath.'/normal', $basePath.'/normal_bis'));\n   ..\n  104      public function testFindTemplateExceptionNamespace()\n  105      {\n  106:         $basePath = dirname(__FILE__).'/Fixtures';\n  107  \n  108          $loader = new Twig_Loader_Filesystem(array($basePath.'/normal'));\n  ...\n  119      public function testFindTemplateWithCache()\n  120      {\n  121:         $basePath = dirname(__FILE__).'/Fixtures';\n  122  \n  123          $loader = new Twig_Loader_Filesystem(array($basePath.'/normal'));\n  ...\n  135      {\n  136          $loader = new Twig_Loader_Filesystem(array());\n  137:         $loader->addPath(dirname(__FILE__).'/Fixtures/themes/theme2');\n  138:         $loader->addPath(dirname(__FILE__).'/Fixtures/themes/theme1');\n  139:         $loader->addPath(dirname(__FILE__).'/Fixtures/themes/theme1', 'default_theme');\n  140  \n  141          $twig = new Twig_Environment($loader);\n  ...\n  166      {\n  167          $loader = new Twig_Loader_Filesystem(array());\n  168:         $loader->addPath(dirname(__FILE__).'/Fixtures/inheritance');\n  169  \n  170          $twig = new Twig_Environment($loader);\n\n/Users/sopae/Projects/AkinsParker/vendor/twig/twig/test/Twig/Tests/Node/SetTest.php:\n   20          $this->assertEquals($names, $node->getNode('names'));\n   21          $this->assertEquals($values, $node->getNode('values'));\n   22:         $this->assertFalse($node->getAttribute('capture'));\n   23      }\n   24  \n\n/Users/sopae/Projects/AkinsParker/web/css/bootstrap.css:\n 2285    content: \"\\f03d\";\n 2286  }\n 2287: .icon-picture:before {\n 2288    content: \"\\f03e\";\n 2289  }\n ....\n 3271    *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf03d;');\n 3272  }\n 3273: .icon-picture {\n 3274    *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf03e;');\n 3275  }\n\n/Users/sopae/Projects/AkinsParker/web/css/bootstrap.min.css:\n  394  .icon-indent-right:before{content:\"\\f03c\";}\n  395  .icon-facetime-video:before{content:\"\\f03d\";}\n  396: .icon-picture:before{content:\"\\f03e\";}\n  397  .icon-pencil:before{content:\"\\f040\";}\n  398  .icon-map-marker:before{content:\"\\f041\";}\n  ...\n  703  .icon-indent-right{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf03c;');}\n  704  .icon-facetime-video{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf03d;');}\n  705: .icon-picture{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf03e;');}\n  706  .icon-pencil{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf040;');}\n  707  .icon-map-marker{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf041;');}\n\n/Users/sopae/Projects/AkinsParker/web/css/docs.css:\n    8  \n    9  \n   10: /* Body and structure\n   11  -------------------------------------------------- */\n   12  \n\n~/Projects/AkinsParker/web/font/FontAwesome.otf:\n    <binary>\n\n/Users/sopae/Projects/AkinsParker/web/js/tests/index.html:\n   51      <h2 id=\"qunit-userAgent\"></h2>\n   52      <ol id=\"qunit-tests\"></ol>\n   53:     <div id=\"qunit-fixture\"></div>\n   54    </div>\n   55  </body>\n\n/Users/sopae/Projects/AkinsParker/web/js/tests/unit/bootstrap-alert.js:\n   36            + '<p><strong>Holy guacamole!</strong> Best check yo self, you\\'re not looking too good.</p>'\n   37            + '</div>'\n   38:           , alert = $(alertHTML).appendTo('#qunit-fixture').alert()\n   39  \n   40:         ok($('#qunit-fixture').find('.alert-message').length, 'element added to dom')\n   41  \n   42          alert.find('.close').click()\n   43  \n   44:         ok(!$('#qunit-fixture').find('.alert-message').length, 'element removed from dom')\n   45        })\n   46  \n\n/Users/sopae/Projects/AkinsParker/web/js/tests/unit/bootstrap-button.js:\n   63          btn\n   64            .append(inner)\n   65:           .appendTo($('#qunit-fixture'))\n   66          ok(!btn.hasClass('active'), 'btn does not have active class')\n   67          inner.click()\n   ..\n   75          btngroup\n   76            .append(btn.append(inner))\n   77:           .appendTo($('#qunit-fixture'))\n   78          ok(!btn.hasClass('active'), 'btn does not have active class')\n   79          inner.click()\n   ..\n   91          group\n   92            .append(wrap)\n   93:           .appendTo($('#qunit-fixture'))\n   94  \n   95          ok(btn1.hasClass('active'), 'btn1 has active class')\n\n/Users/sopae/Projects/AkinsParker/web/js/tests/unit/bootstrap-collapse.js:\n   63  \n   64          var target = $('<a data-toggle=\"collapse\" href=\"#test1\"></a>')\n   65:           .appendTo($('#qunit-fixture'))\n   66  \n   67          var collapsible = $('<div id=\"test1\"></div>')\n   68:           .appendTo($('#qunit-fixture'))\n   69            .on('show', function () {\n   70              ok(!target.hasClass('collapsed'))\n   ..\n   80  \n   81          var target = $('<a data-toggle=\"collapse\" href=\"#test1\"></a>')\n   82:           .appendTo($('#qunit-fixture'))\n   83  \n   84          var collapsible = $('<div id=\"test1\" class=\"in\"></div>')\n   85:           .appendTo($('#qunit-fixture'))\n   86            .on('hide', function () {\n   87              ok(target.hasClass('collapsed'))\n\n/Users/sopae/Projects/AkinsParker/web/js/tests/unit/bootstrap-dropdown.js:\n  100            + '</ul>'\n  101            , dropdown = $(dropdownHTML)\n  102:             .appendTo('#qunit-fixture')\n  103              .find('[data-toggle=\"dropdown\"]')\n  104              .dropdown()\n  ...\n  128              + '    </ul>'\n  129              + '</div>'\n  130:           , dropdowns = $(dropdownHTML).appendTo('#qunit-fixture').find('[data-toggle=\"dropdown\"]')\n  131            , first = dropdowns.first()\n  132            , last = dropdowns.last()\n  ...\n  136          first.click()\n  137          ok(first.parents('.open').length == 1, 'open class added on click')\n  138:         ok($('#qunit-fixture .open').length == 1, 'only one object is open')\n  139          $('body').click()\n  140:         ok($(\"#qunit-fixture .open\").length === 0, 'open class removed')\n  141  \n  142          last.click()\n  143          ok(last.parent('.open').length == 1, 'open class added on click')\n  144:         ok($('#qunit-fixture .open').length == 1, 'only one object is open')\n  145          $('body').click()\n  146:         ok($(\"#qunit-fixture .open\").length === 0, 'open class removed')\n  147  \n  148:         $(\"#qunit-fixture\").html(\"\")\n  149        })\n  150  \n\n/Users/sopae/Projects/AkinsParker/web/js/tests/unit/bootstrap-popover.js:\n   22          $.support.transition = false\n   23          var popover = $('<a href=\"#\" title=\"mdo\" data-content=\"http://twitter.com/mdo\">@mdo</a>')\n   24:           .appendTo('#qunit-fixture')\n   25            .popover('show')\n   26  \n   ..\n   41          $.support.transition = false\n   42          var popover = $('<a href=\"#\">@fat</a>')\n   43:           .appendTo('#qunit-fixture')\n   44            .popover({\n   45              title: function () {\n   ..\n   59          popover.popover('hide')\n   60          ok(!$('.popover').length, 'popover was removed')\n   61:         $('#qunit-fixture').empty()\n   62        })\n   63  \n   ..\n   65          $.support.transition = false\n   66          var popover = $('<a href=\"#\" title=\"@mdo\" data-content=\"loves data attributes (づ｡◕‿‿◕｡)づ ︵ ┻━┻\" >@mdo</a>')\n   67:           .appendTo('#qunit-fixture')\n   68            .popover()\n   69            .popover('show')\n   ..\n   75          popover.popover('hide')\n   76          ok(!$('.popover').length, 'popover was removed')\n   77:         $('#qunit-fixture').empty()\n   78        })\n   79  \n   ..\n   81          $.support.transition = false\n   82          var popover = $('<a href=\"#\">@fat</a>')\n   83:           .appendTo('#qunit-fixture')\n   84            .popover({\n   85              title: 'Test'\n   ..\n   95          popover.popover('hide')\n   96          ok(!$('.popover').length, 'popover was removed')\n   97:         $('#qunit-fixture').empty()\n   98        })\n   99  \n\n/Users/sopae/Projects/AkinsParker/web/js/tests/unit/bootstrap-scrollspy.js:\n   19        test(\"should switch active class on scroll\", function () {\n   20          var sectionHTML = '<div id=\"masthead\"></div>'\n   21:           , $section = $(sectionHTML).append('#qunit-fixture')\n   22            , topbarHTML ='<div class=\"topbar\">'\n   23            + '<div class=\"topbar-inner\">'\n\n/Users/sopae/Projects/AkinsParker/web/js/tests/unit/bootstrap-tab.js:\n   24            + '</ul>'\n   25  \n   26:         $('<ul><li id=\"home\"></li><li id=\"profile\"></li></ul>').appendTo(\"#qunit-fixture\")\n   27  \n   28          $(tabsHTML).find('li:last a').tab('show')\n   29:         equals($(\"#qunit-fixture\").find('.active').attr('id'), \"profile\")\n   30  \n   31          $(tabsHTML).find('li:first a').tab('show')\n   32:         equals($(\"#qunit-fixture\").find('.active').attr('id'), \"home\")\n   33        })\n   34  \n   ..\n   40            + '</ul>'\n   41  \n   42:         $('<ul><li id=\"home\"></li><li id=\"profile\"></li></ul>').appendTo(\"#qunit-fixture\")\n   43  \n   44          $(pillsHTML).find('li:last a').tab('show')\n   45:         equals($(\"#qunit-fixture\").find('.active').attr('id'), \"profile\")\n   46  \n   47          $(pillsHTML).find('li:first a').tab('show')\n   48:         equals($(\"#qunit-fixture\").find('.active').attr('id'), \"home\")\n   49        })\n   50  \n\n/Users/sopae/Projects/AkinsParker/web/js/tests/unit/bootstrap-tooltip.js:\n   36          $.support.transition = false\n   37          var tooltip = $('<a href=\"#\" rel=\"tooltip\" title=\"Another tooltip\"></a>')\n   38:           .appendTo('#qunit-fixture')\n   39            .tooltip({placement: 'bottom'})\n   40            .tooltip('show')\n   ..\n   47          $.support.transition = false\n   48          var tooltip = $('<a href=\"#\" rel=\"tooltip\" title=\"<b>@fat</b>\"></a>')\n   49:           .appendTo('#qunit-fixture')\n   50            .tooltip({html: true})\n   51            .tooltip('show')\n   ..\n   58        test(\"should respect custom classes\", function () {\n   59          var tooltip = $('<a href=\"#\" rel=\"tooltip\" title=\"Another tooltip\"></a>')\n   60:           .appendTo('#qunit-fixture')\n   61            .tooltip({ template: '<div class=\"tooltip some-class\"><div class=\"tooltip-arrow\"/><div class=\"tooltip-inner\"/></div>'})\n   62            .tooltip('show')\n   ..\n   69        test(\"should not show tooltip if leave event occurs before delay expires\", function () {\n   70          var tooltip = $('<a href=\"#\" rel=\"tooltip\" title=\"Another tooltip\"></a>')\n   71:           .appendTo('#qunit-fixture')\n   72            .tooltip({ delay: 200 })\n   73  \n   ..\n   88        test(\"should not show tooltip if leave event occurs before delay expires, even if hide delay is 0\", function () {\n   89          var tooltip = $('<a href=\"#\" rel=\"tooltip\" title=\"Another tooltip\"></a>')\n   90:           .appendTo('#qunit-fixture')\n   91            .tooltip({ delay: { show: 200, hide: 0} })\n   92  \n   ..\n  107        test(\"should not show tooltip if leave event occurs before delay expires\", function () {\n  108          var tooltip = $('<a href=\"#\" rel=\"tooltip\" title=\"Another tooltip\"></a>')\n  109:           .appendTo('#qunit-fixture')\n  110            .tooltip({ delay: 100 })\n  111          stop()\n  ...\n  123        test(\"should show tooltip if leave event hasn't occured before delay expires\", function () {\n  124          var tooltip = $('<a href=\"#\" rel=\"tooltip\" title=\"Another tooltip\"></a>')\n  125:           .appendTo('#qunit-fixture')\n  126            .tooltip({ delay: 150 })\n  127          stop()\n  ...\n  151        test(\"should show tooltip with delegate selector on click\", function () {\n  152          var div = $('<div><a href=\"#\" rel=\"tooltip\" title=\"Another tooltip\"></a></div>')\n  153:         var tooltip = div.appendTo('#qunit-fixture')\n  154                           .tooltip({ selector: 'a[rel=tooltip]',\n  155                                      trigger: 'click' })\n\n/Users/sopae/Projects/AkinsParker/web/js/tests/vendor/jquery.js:\n    1  /*! jQuery v@1.8.1 jquery.com | jquery.org/license */\n    2: (function(a,b){function G(a){var b=F[a]={};return p.each(a.split(s),function(a,c){b[c]=!0}),b}function J(a,c,d){if(d===b&&a.nodeType===1){var e=\"data-\"+c.replace(I,\"-$1\").toLowerCase();d=a.getAttribute(e);if(typeof d==\"string\"){try{d=d===\"true\"?!0:d===\"false\"?!1:d===\"null\"?null:+d+\"\"===d?+d:H.test(d)?p.parseJSON(d):d}catch(f){}p.data(a,c,d)}else d=b}return d}function K(a){var b;for(b in a){if(b===\"data\"&&p.isEmptyObject(a[b]))continue;if(b!==\"toJSON\")return!1}return!0}function ba(){return!1}function bb(){return!0}function bh(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function bi(a,b){do a=a[b];while(a&&a.nodeType!==1);return a}function bj(a,b,c){b=b||0;if(p.isFunction(b))return p.grep(a,function(a,d){var e=!!b.call(a,d,a);return e===c});if(b.nodeType)return p.grep(a,function(a,d){return a===b===c});if(typeof b==\"string\"){var d=p.grep(a,function(a){return a.nodeType===1});if(be.test(b))return p.filter(b,d,!c);b=p.filter(b,d)}return p.grep(a,function(a,d){return p.inArray(a,b)>=0===c})}function bk(a){var b=bl.split(\"|\"),c=a.createDocumentFragment();if(c.createElement)while(b.length)c.createElement(b.pop());return c}function bC(a,b){return a.getElementsByTagName(b)[0]||a.appendChild(a.ownerDocument.createElement(b))}function bD(a,b){if(b.nodeType!==1||!p.hasData(a))return;var c,d,e,f=p._data(a),g=p._data(b,f),h=f.events;if(h){delete g.handle,g.events={};for(c in h)for(d=0,e=h[c].length;d<e;d++)p.event.add(b,c,h[c][d])}g.data&&(g.data=p.extend({},g.data))}function bE(a,b){var c;if(b.nodeType!==1)return;b.clearAttributes&&b.clearAttributes(),b.mergeAttributes&&b.mergeAttributes(a),c=b.nodeName.toLowerCase(),c===\"object\"?(b.parentNode&&(b.outerHTML=a.outerHTML),p.support.html5Clone&&a.innerHTML&&!p.trim(b.innerHTML)&&(b.innerHTML=a.innerHTML)):c===\"input\"&&bv.test(a.type)?(b.defaultChecked=b.checked=a.checked,b.value!==a.value&&(b.value=a.value)):c===\"option\"?b.selected=a.defaultSelected:c===\"input\"||c===\"textarea\"?b.defaultValue=a.defaultValue:c===\"script\"&&b.text!==a.text&&(b.text=a.text),b.removeAttribute(p.expando)}function bF(a){return typeof a.getElementsByTagName!=\"undefined\"?a.getElementsByTagName(\"*\"):typeof a.querySelectorAll!=\"undefined\"?a.querySelectorAll(\"*\"):[]}function bG(a){bv.test(a.type)&&(a.defaultChecked=a.checked)}function bY(a,b){if(b in a)return b;var c=b.charAt(0).toUpperCase()+b.slice(1),d=b,e=bW.length;while(e--){b=bW[e]+c;if(b in a)return b}return d}function bZ(a,b){return a=b||a,p.css(a,\"display\")===\"none\"||!p.contains(a.ownerDocument,a)}function b$(a,b){var c,d,e=[],f=0,g=a.length;for(;f<g;f++){c=a[f];if(!c.style)continue;e[f]=p._data(c,\"olddisplay\"),b?(!e[f]&&c.style.display===\"none\"&&(c.style.display=\"\"),c.style.display===\"\"&&bZ(c)&&(e[f]=p._data(c,\"olddisplay\",cc(c.nodeName)))):(d=bH(c,\"display\"),!e[f]&&d!==\"none\"&&p._data(c,\"olddisplay\",d))}for(f=0;f<g;f++){c=a[f];if(!c.style)continue;if(!b||c.style.display===\"none\"||c.style.display===\"\")c.style.display=b?e[f]||\"\":\"none\"}return a}function b_(a,b,c){var d=bP.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||\"px\"):b}function ca(a,b,c,d){var e=c===(d?\"border\":\"content\")?4:b===\"width\"?1:0,f=0;for(;e<4;e+=2)c===\"margin\"&&(f+=p.css(a,c+bV[e],!0)),d?(c===\"content\"&&(f-=parseFloat(bH(a,\"padding\"+bV[e]))||0),c!==\"margin\"&&(f-=parseFloat(bH(a,\"border\"+bV[e]+\"Width\"))||0)):(f+=parseFloat(bH(a,\"padding\"+bV[e]))||0,c!==\"padding\"&&(f+=parseFloat(bH(a,\"border\"+bV[e]+\"Width\"))||0));return f}function cb(a,b,c){var d=b===\"width\"?a.offsetWidth:a.offsetHeight,e=!0,f=p.support.boxSizing&&p.css(a,\"boxSizing\")===\"border-box\";if(d<=0||d==null){d=bH(a,b);if(d<0||d==null)d=a.style[b];if(bQ.test(d))return d;e=f&&(p.support.boxSizingReliable||d===a.style[b]),d=parseFloat(d)||0}return d+ca(a,b,c||(f?\"border\":\"content\"),e)+\"px\"}function cc(a){if(bS[a])return bS[a];var b=p(\"<\"+a+\">\").appendTo(e.body),c=b.css(\"display\");b.remove();if(c===\"none\"||c===\"\"){bI=e.body.appendChild(bI||p.extend(e.createElement(\"iframe\"),{frameBorder:0,width:0,height:0}));if(!bJ||!bI.createElement)bJ=(bI.contentWindow||bI.contentDocument).document,bJ.write(\"<!doctype html><html><body>\"),bJ.close();b=bJ.body.appendChild(bJ.createElement(a)),c=bH(b,\"display\"),e.body.removeChild(bI)}return bS[a]=c,c}function ci(a,b,c,d){var e;if(p.isArray(b))p.each(b,function(b,e){c||ce.test(a)?d(a,e):ci(a+\"[\"+(typeof e==\"object\"?b:\"\")+\"]\",e,c,d)});else if(!c&&p.type(b)===\"object\")for(e in b)ci(a+\"[\"+e+\"]\",b[e],c,d);else d(a,b)}function cz(a){return function(b,c){typeof b!=\"string\"&&(c=b,b=\"*\");var d,e,f,g=b.toLowerCase().split(s),h=0,i=g.length;if(p.isFunction(c))for(;h<i;h++)d=g[h],f=/^\\+/.test(d),f&&(d=d.substr(1)||\"*\"),e=a[d]=a[d]||[],e[f?\"unshift\":\"push\"](c)}}function cA(a,c,d,e,f,g){f=f||c.dataTypes[0],g=g||{},g[f]=!0;var h,i=a[f],j=0,k=i?i.length:0,l=a===cv;for(;j<k&&(l||!h);j++)h=i[j](c,d,e),typeof h==\"string\"&&(!l||g[h]?h=b:(c.dataTypes.unshift(h),h=cA(a,c,d,e,h,g)));return(l||!h)&&!g[\"*\"]&&(h=cA(a,c,d,e,\"*\",g)),h}function cB(a,c){var d,e,f=p.ajaxSettings.flatOptions||{};for(d in c)c[d]!==b&&((f[d]?a:e||(e={}))[d]=c[d]);e&&p.extend(!0,a,e)}function cC(a,c,d){var e,f,g,h,i=a.contents,j=a.dataTypes,k=a.responseFields;for(f in k)f in d&&(c[k[f]]=d[f]);while(j[0]===\"*\")j.shift(),e===b&&(e=a.mimeType||c.getResponseHeader(\"content-type\"));if(e)for(f in i)if(i[f]&&i[f].test(e)){j.unshift(f);break}if(j[0]in d)g=j[0];else{for(f in d){if(!j[0]||a.converters[f+\" \"+j[0]]){g=f;break}h||(h=f)}g=g||h}if(g)return g!==j[0]&&j.unshift(g),d[g]}function cD(a,b){var c,d,e,f,g=a.dataTypes.slice(),h=g[0],i={},j=0;a.dataFilter&&(b=a.dataFilter(b,a.dataType));if(g[1])for(c in a.converters)i[c.toLowerCase()]=a.converters[c];for(;e=g[++j];)if(e!==\"*\"){if(h!==\"*\"&&h!==e){c=i[h+\" \"+e]||i[\"* \"+e];if(!c)for(d in i){f=d.split(\" \");if(f[1]===e){c=i[h+\" \"+f[0]]||i[\"* \"+f[0]];if(c){c===!0?c=i[d]:i[d]!==!0&&(e=f[0],g.splice(j--,0,e));break}}}if(c!==!0)if(c&&a[\"throws\"])b=c(b);else try{b=c(b)}catch(k){return{state:\"parsererror\",error:c?k:\"No conversion from \"+h+\" to \"+e}}}h=e}return{state:\"success\",data:b}}function cL(){try{return new a.XMLHttpRequest}catch(b){}}function cM(){try{return new a.ActiveXObject(\"Microsoft.XMLHTTP\")}catch(b){}}function cU(){return setTimeout(function(){cN=b},0),cN=p.now()}function cV(a,b){p.each(b,function(b,c){var d=(cT[b]||[]).concat(cT[\"*\"]),e=0,f=d.length;for(;e<f;e++)if(d[e].call(a,b,c))return})}function cW(a,b,c){var d,e=0,f=0,g=cS.length,h=p.Deferred().always(function(){delete i.elem}),i=function(){var b=cN||cU(),c=Math.max(0,j.startTime+j.duration-b),d=1-(c/j.duration||0),e=0,f=j.tweens.length;for(;e<f;e++)j.tweens[e].run(d);return h.notifyWith(a,[j,d,c]),d<1&&f?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:p.extend({},b),opts:p.extend(!0,{specialEasing:{}},c),originalProperties:b,originalOptions:c,startTime:cN||cU(),duration:c.duration,tweens:[],createTween:function(b,c,d){var e=p.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(e),e},stop:function(b){var c=0,d=b?j.tweens.length:0;for(;c<d;c++)j.tweens[c].run(1);return b?h.resolveWith(a,[j,b]):h.rejectWith(a,[j,b]),this}}),k=j.props;cX(k,j.opts.specialEasing);for(;e<g;e++){d=cS[e].call(j,a,k,j.opts);if(d)return d}return cV(j,k),p.isFunction(j.opts.start)&&j.opts.start.call(a,j),p.fx.timer(p.extend(i,{anim:j,queue:j.opts.queue,elem:a})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}function cX(a,b){var c,d,e,f,g;for(c in a){d=p.camelCase(c),e=b[d],f=a[c],p.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=p.cssHooks[d];if(g&&\"expand\"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}}function cY(a,b,c){var d,e,f,g,h,i,j,k,l=this,m=a.style,n={},o=[],q=a.nodeType&&bZ(a);c.queue||(j=p._queueHooks(a,\"fx\"),j.unqueued==null&&(j.unqueued=0,k=j.empty.fire,j.empty.fire=function(){j.unqueued||k()}),j.unqueued++,l.always(function(){l.always(function(){j.unqueued--,p.queue(a,\"fx\").length||j.empty.fire()})})),a.nodeType===1&&(\"height\"in b||\"width\"in b)&&(c.overflow=[m.overflow,m.overflowX,m.overflowY],p.css(a,\"display\")===\"inline\"&&p.css(a,\"float\")===\"none\"&&(!p.support.inlineBlockNeedsLayout||cc(a.nodeName)===\"inline\"?m.display=\"inline-block\":m.zoom=1)),c.overflow&&(m.overflow=\"hidden\",p.support.shrinkWrapBlocks||l.done(function(){m.overflow=c.overflow[0],m.overflowX=c.overflow[1],m.overflowY=c.overflow[2]}));for(d in b){f=b[d];if(cP.exec(f)){delete b[d];if(f===(q?\"hide\":\"show\"))continue;o.push(d)}}g=o.length;if(g){h=p._data(a,\"fxshow\")||p._data(a,\"fxshow\",{}),q?p(a).show():l.done(function(){p(a).hide()}),l.done(function(){var b;p.removeData(a,\"fxshow\",!0);for(b in n)p.style(a,b,n[b])});for(d=0;d<g;d++)e=o[d],i=l.createTween(e,q?h[e]:0),n[e]=h[e]||p.style(a,e),e in h||(h[e]=i.start,q&&(i.end=i.start,i.start=e===\"width\"||e===\"height\"?1:0))}}function cZ(a,b,c,d,e){return new cZ.prototype.init(a,b,c,d,e)}function c$(a,b){var c,d={height:a},e=0;b=b?1:0;for(;e<4;e+=2-b)c=bV[e],d[\"margin\"+c]=d[\"padding\"+c]=a;return b&&(d.opacity=d.width=a),d}function da(a){return p.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:!1}var c,d,e=a.document,f=a.location,g=a.navigator,h=a.jQuery,i=a.$,j=Array.prototype.push,k=Array.prototype.slice,l=Array.prototype.indexOf,m=Object.prototype.toString,n=Object.prototype.hasOwnProperty,o=String.prototype.trim,p=function(a,b){return new p.fn.init(a,b,c)},q=/[\\-+]?(?:\\d*\\.|)\\d+(?:[eE][\\-+]?\\d+|)/.source,r=/\\S/,s=/\\s+/,t=/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,u=/^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/,v=/^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,w=/^[\\],:{}\\s]*$/,x=/(?:^|:|,)(?:\\s*\\[)+/g,y=/\\\\(?:[\"\\\\\\/bfnrt]|u[\\da-fA-F]{4})/g,z=/\"[^\"\\\\\\r\\n]*\"|true|false|null|-?(?:\\d\\d*\\.|)\\d+(?:[eE][\\-+]?\\d+|)/g,A=/^-ms-/,B=/-([\\da-z])/gi,C=function(a,b){return(b+\"\").toUpperCase()},D=function(){e.addEventListener?(e.removeEventListener(\"DOMContentLoaded\",D,!1),p.ready()):e.readyState===\"complete\"&&(e.detachEvent(\"onreadystatechange\",D),p.ready())},E={};p.fn=p.prototype={constructor:p,init:function(a,c,d){var f,g,h,i;if(!a)return this;if(a.nodeType)return this.context=this[0]=a,this.length=1,this;if(typeof a==\"string\"){a.charAt(0)===\"<\"&&a.charAt(a.length-1)===\">\"&&a.length>=3?f=[null,a,null]:f=u.exec(a);if(f&&(f[1]||!c)){if(f[1])return c=c instanceof p?c[0]:c,i=c&&c.nodeType?c.ownerDocument||c:e,a=p.parseHTML(f[1],i,!0),v.test(f[1])&&p.isPlainObject(c)&&this.attr.call(a,c,!0),p.merge(this,a);g=e.getElementById(f[2]);if(g&&g.parentNode){if(g.id!==f[2])return d.find(a);this.length=1,this[0]=g}return this.context=e,this.selector=a,this}return!c||c.jquery?(c||d).find(a):this.constructor(c).find(a)}return p.isFunction(a)?d.ready(a):(a.selector!==b&&(this.selector=a.selector,this.context=a.context),p.makeArray(a,this))},selector:\"\",jquery:\"1.8.1\",length:0,size:function(){return this.length},toArray:function(){return k.call(this)},get:function(a){return a==null?this.toArray():a<0?this[this.length+a]:this[a]},pushStack:function(a,b,c){var d=p.merge(this.constructor(),a);return d.prevObject=this,d.context=this.context,b===\"find\"?d.selector=this.selector+(this.selector?\" \":\"\")+c:b&&(d.selector=this.selector+\".\"+b+\"(\"+c+\")\"),d},each:function(a,b){return p.each(this,a,b)},ready:function(a){return p.ready.promise().done(a),this},eq:function(a){return a=+a,a===-1?this.slice(a):this.slice(a,a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(k.apply(this,arguments),\"slice\",k.call(arguments).join(\",\"))},map:function(a){return this.pushStack(p.map(this,function(b,c){return a.call(b,c,b)}))},end:function(){return this.prevObject||this.constructor(null)},push:j,sort:[].sort,splice:[].splice},p.fn.init.prototype=p.fn,p.extend=p.fn.extend=function(){var a,c,d,e,f,g,h=arguments[0]||{},i=1,j=arguments.length,k=!1;typeof h==\"boolean\"&&(k=h,h=arguments[1]||{},i=2),typeof h!=\"object\"&&!p.isFunction(h)&&(h={}),j===i&&(h=this,--i);for(;i<j;i++)if((a=arguments[i])!=null)for(c in a){d=h[c],e=a[c];if(h===e)continue;k&&e&&(p.isPlainObject(e)||(f=p.isArray(e)))?(f?(f=!1,g=d&&p.isArray(d)?d:[]):g=d&&p.isPlainObject(d)?d:{},h[c]=p.extend(k,g,e)):e!==b&&(h[c]=e)}return h},p.extend({noConflict:function(b){return a.$===p&&(a.$=i),b&&a.jQuery===p&&(a.jQuery=h),p},isReady:!1,readyWait:1,holdReady:function(a){a?p.readyWait++:p.ready(!0)},ready:function(a){if(a===!0?--p.readyWait:p.isReady)return;if(!e.body)return setTimeout(p.ready,1);p.isReady=!0;if(a!==!0&&--p.readyWait>0)return;d.resolveWith(e,[p]),p.fn.trigger&&p(e).trigger(\"ready\").off(\"ready\")},isFunction:function(a){return p.type(a)===\"function\"},isArray:Array.isArray||function(a){return p.type(a)===\"array\"},isWindow:function(a){return a!=null&&a==a.window},isNumeric:function(a){return!isNaN(parseFloat(a))&&isFinite(a)},type:function(a){return a==null?String(a):E[m.call(a)]||\"object\"},isPlainObject:function(a){if(!a||p.type(a)!==\"object\"||a.nodeType||p.isWindow(a))return!1;try{if(a.constructor&&!n.call(a,\"constructor\")&&!n.call(a.constructor.prototype,\"isPrototypeOf\"))return!1}catch(c){return!1}var d;for(d in a);return d===b||n.call(a,d)},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},error:function(a){throw new Error(a)},parseHTML:function(a,b,c){var d;return!a||typeof a!=\"string\"?null:(typeof b==\"boolean\"&&(c=b,b=0),b=b||e,(d=v.exec(a))?[b.createElement(d[1])]:(d=p.buildFragment([a],b,c?null:[]),p.merge([],(d.cacheable?p.clone(d.fragment):d.fragment).childNodes)))},parseJSON:function(b){if(!b||typeof b!=\"string\")return null;b=p.trim(b);if(a.JSON&&a.JSON.parse)return a.JSON.parse(b);if(w.test(b.replace(y,\"@\").replace(z,\"]\").replace(x,\"\")))return(new Function(\"return \"+b))();p.error(\"Invalid JSON: \"+b)},parseXML:function(c){var d,e;if(!c||typeof c!=\"string\")return null;try{a.DOMParser?(e=new DOMParser,d=e.parseFromString(c,\"text/xml\")):(d=new ActiveXObject(\"Microsoft.XMLDOM\"),d.async=\"false\",d.loadXML(c))}catch(f){d=b}return(!d||!d.documentElement||d.getElementsByTagName(\"parsererror\").length)&&p.error(\"Invalid XML: \"+c),d},noop:function(){},globalEval:function(b){b&&r.test(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(A,\"ms-\").replace(B,C)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toUpperCase()===b.toUpperCase()},each:function(a,c,d){var e,f=0,g=a.length,h=g===b||p.isFunction(a);if(d){if(h){for(e in a)if(c.apply(a[e],d)===!1)break}else for(;f<g;)if(c.apply(a[f++],d)===!1)break}else if(h){for(e in a)if(c.call(a[e],e,a[e])===!1)break}else for(;f<g;)if(c.call(a[f],f,a[f++])===!1)break;return a},trim:o&&!o.call(\"﻿ \")?function(a){return a==null?\"\":o.call(a)}:function(a){return a==null?\"\":a.toString().replace(t,\"\")},makeArray:function(a,b){var c,d=b||[];return a!=null&&(c=p.type(a),a.length==null||c===\"string\"||c===\"function\"||c===\"regexp\"||p.isWindow(a)?j.call(d,a):p.merge(d,a)),d},inArray:function(a,b,c){var d;if(b){if(l)return l.call(b,a,c);d=b.length,c=c?c<0?Math.max(0,d+c):c:0;for(;c<d;c++)if(c in b&&b[c]===a)return c}return-1},merge:function(a,c){var d=c.length,e=a.length,f=0;if(typeof d==\"number\")for(;f<d;f++)a[e++]=c[f];else while(c[f]!==b)a[e++]=c[f++];return a.length=e,a},grep:function(a,b,c){var d,e=[],f=0,g=a.length;c=!!c;for(;f<g;f++)d=!!b(a[f],f),c!==d&&e.push(a[f]);return e},map:function(a,c,d){var e,f,g=[],h=0,i=a.length,j=a instanceof p||i!==b&&typeof i==\"number\"&&(i>0&&a[0]&&a[i-1]||i===0||p.isArray(a));if(j)for(;h<i;h++)e=c(a[h],h,d),e!=null&&(g[g.length]=e);else for(f in a)e=c(a[f],f,d),e!=null&&(g[g.length]=e);return g.concat.apply([],g)},guid:1,proxy:function(a,c){var d,e,f;return typeof c==\"string\"&&(d=a[c],c=a,a=d),p.isFunction(a)?(e=k.call(arguments,2),f=function(){return a.apply(c,e.concat(k.call(arguments)))},f.guid=a.guid=a.guid||f.guid||p.guid++,f):b},access:function(a,c,d,e,f,g,h){var i,j=d==null,k=0,l=a.length;if(d&&typeof d==\"object\"){for(k in d)p.access(a,c,k,d[k],1,g,e);f=1}else if(e!==b){i=h===b&&p.isFunction(e),j&&(i?(i=c,c=function(a,b,c){return i.call(p(a),c)}):(c.call(a,e),c=null));if(c)for(;k<l;k++)c(a[k],d,i?e.call(a[k],k,c(a[k],d)):e,h);f=1}return f?a:j?c.call(a):l?c(a[0],d):g},now:function(){return(new Date).getTime()}}),p.ready.promise=function(b){if(!d){d=p.Deferred();if(e.readyState===\"complete\")setTimeout(p.ready,1);else if(e.addEventListener)e.addEventListener(\"DOMContentLoaded\",D,!1),a.addEventListener(\"load\",p.ready,!1);else{e.attachEvent(\"onreadystatechange\",D),a.attachEvent(\"onload\",p.ready);var c=!1;try{c=a.frameElement==null&&e.documentElement}catch(f){}c&&c.doScroll&&function g(){if(!p.isReady){try{c.doScroll(\"left\")}catch(a){return setTimeout(g,50)}p.ready()}}()}}return d.promise(b)},p.each(\"Boolean Number String Function Array Date RegExp Object\".split(\" \"),function(a,b){E[\"[object \"+b+\"]\"]=b.toLowerCase()}),c=p(e);var F={};p.Callbacks=function(a){a=typeof a==\"string\"?F[a]||G(a):p.extend({},a);var c,d,e,f,g,h,i=[],j=!a.once&&[],k=function(b){c=a.memory&&b,d=!0,h=f||0,f=0,g=i.length,e=!0;for(;i&&h<g;h++)if(i[h].apply(b[0],b[1])===!1&&a.stopOnFalse){c=!1;break}e=!1,i&&(j?j.length&&k(j.shift()):c?i=[]:l.disable())},l={add:function(){if(i){var b=i.length;(function d(b){p.each(b,function(b,c){var e=p.type(c);e===\"function\"&&(!a.unique||!l.has(c))?i.push(c):c&&c.length&&e!==\"string\"&&d(c)})})(arguments),e?g=i.length:c&&(f=b,k(c))}return this},remove:function(){return i&&p.each(arguments,function(a,b){var c;while((c=p.inArray(b,i,c))>-1)i.splice(c,1),e&&(c<=g&&g--,c<=h&&h--)}),this},has:function(a){return p.inArray(a,i)>-1},empty:function(){return i=[],this},disable:function(){return i=j=c=b,this},disabled:function(){return!i},lock:function(){return j=b,c||l.disable(),this},locked:function(){return!j},fireWith:function(a,b){return b=b||[],b=[a,b.slice?b.slice():b],i&&(!d||j)&&(e?j.push(b):k(b)),this},fire:function(){return l.fireWith(this,arguments),this},fired:function(){return!!d}};return l},p.extend({Deferred:function(a){var b=[[\"resolve\",\"done\",p.Callbacks(\"once memory\"),\"resolved\"],[\"reject\",\"fail\",p.Callbacks(\"once memory\"),\"rejected\"],[\"notify\",\"progress\",p.Callbacks(\"memory\")]],c=\"pending\",d={state:function(){return c},always:function(){return e.done(arguments).fail(arguments),this},then:function(){var a=arguments;return p.Deferred(function(c){p.each(b,function(b,d){var f=d[0],g=a[b];e[d[1]](p.isFunction(g)?function(){var a=g.apply(this,arguments);a&&p.isFunction(a.promise)?a.promise().done(c.resolve).fail(c.reject).progress(c.notify):c[f+\"With\"](this===e?c:this,[a])}:c[f])}),a=null}).promise()},promise:function(a){return typeof a==\"object\"?p.extend(a,d):d}},e={};return d.pipe=d.then,p.each(b,function(a,f){var g=f[2],h=f[3];d[f[1]]=g.add,h&&g.add(function(){c=h},b[a^1][2].disable,b[2][2].lock),e[f[0]]=g.fire,e[f[0]+\"With\"]=g.fireWith}),d.promise(e),a&&a.call(e,e),e},when:function(a){var b=0,c=k.call(arguments),d=c.length,e=d!==1||a&&p.isFunction(a.promise)?d:0,f=e===1?a:p.Deferred(),g=function(a,b,c){return function(d){b[a]=this,c[a]=arguments.length>1?k.call(arguments):d,c===h?f.notifyWith(b,c):--e||f.resolveWith(b,c)}},h,i,j;if(d>1){h=new Array(d),i=new Array(d),j=new Array(d);for(;b<d;b++)c[b]&&p.isFunction(c[b].promise)?c[b].promise().done(g(b,j,c)).fail(f.reject).progress(g(b,i,h)):--e}return e||f.resolveWith(j,c),f.promise()}}),p.support=function(){var b,c,d,f,g,h,i,j,k,l,m,n=e.createElement(\"div\");n.setAttribute(\"className\",\"t\"),n.innerHTML=\"  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>\",c=n.getElementsByTagName(\"*\"),d=n.getElementsByTagName(\"a\")[0],d.style.cssText=\"top:1px;float:left;opacity:.5\";if(!c||!c.length||!d)return{};f=e.createElement(\"select\"),g=f.appendChild(e.createElement(\"option\")),h=n.getElementsByTagName(\"input\")[0],b={leadingWhitespace:n.firstChild.nodeType===3,tbody:!n.getElementsByTagName(\"tbody\").length,htmlSerialize:!!n.getElementsByTagName(\"link\").length,style:/top/.test(d.getAttribute(\"style\")),hrefNormalized:d.getAttribute(\"href\")===\"/a\",opacity:/^0.5/.test(d.style.opacity),cssFloat:!!d.style.cssFloat,checkOn:h.value===\"on\",optSelected:g.selected,getSetAttribute:n.className!==\"t\",enctype:!!e.createElement(\"form\").enctype,html5Clone:e.createElement(\"nav\").cloneNode(!0).outerHTML!==\"<:nav></:nav>\",boxModel:e.compatMode===\"CSS1Compat\",submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0,boxSizingReliable:!0,pixelPosition:!1},h.checked=!0,b.noCloneChecked=h.cloneNode(!0).checked,f.disabled=!0,b.optDisabled=!g.disabled;try{delete n.test}catch(o){b.deleteExpando=!1}!n.addEventListener&&n.attachEvent&&n.fireEvent&&(n.attachEvent(\"onclick\",m=function(){b.noCloneEvent=!1}),n.cloneNode(!0).fireEvent(\"onclick\"),n.detachEvent(\"onclick\",m)),h=e.createElement(\"input\"),h.value=\"t\",h.setAttribute(\"type\",\"radio\"),b.radioValue=h.value===\"t\",h.setAttribute(\"checked\",\"checked\"),h.setAttribute(\"name\",\"t\"),n.appendChild(h),i=e.createDocumentFragment(),i.appendChild(n.lastChild),b.checkClone=i.cloneNode(!0).cloneNode(!0).lastChild.checked,b.appendChecked=h.checked,i.removeChild(h),i.appendChild(n);if(n.attachEvent)for(k in{submit:!0,change:!0,focusin:!0})j=\"on\"+k,l=j in n,l||(n.setAttribute(j,\"return;\"),l=typeof n[j]==\"function\"),b[k+\"Bubbles\"]=l;return p(function(){var c,d,f,g,h=\"padding:0;margin:0;border:0;display:block;overflow:hidden;\",i=e.getElementsByTagName(\"body\")[0];if(!i)return;c=e.createElement(\"div\"),c.style.cssText=\"visibility:hidden;border:0;width:0;height:0;position:static;top:0;margin-top:1px\",i.insertBefore(c,i.firstChild),d=e.createElement(\"div\"),c.appendChild(d),d.innerHTML=\"<table><tr><td></td><td>t</td></tr></table>\",f=d.getElementsByTagName(\"td\"),f[0].style.cssText=\"padding:0;margin:0;border:0;display:none\",l=f[0].offsetHeight===0,f[0].style.display=\"\",f[1].style.display=\"none\",b.reliableHiddenOffsets=l&&f[0].offsetHeight===0,d.innerHTML=\"\",d.style.cssText=\"box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;\",b.boxSizing=d.offsetWidth===4,b.doesNotIncludeMarginInBodyOffset=i.offsetTop!==1,a.getComputedStyle&&(b.pixelPosition=(a.getComputedStyle(d,null)||{}).top!==\"1%\",b.boxSizingReliable=(a.getComputedStyle(d,null)||{width:\"4px\"}).width===\"4px\",g=e.createElement(\"div\"),g.style.cssText=d.style.cssText=h,g.style.marginRight=g.style.width=\"0\",d.style.width=\"1px\",d.appendChild(g),b.reliableMarginRight=!parseFloat((a.getComputedStyle(g,null)||{}).marginRight)),typeof d.style.zoom!=\"undefined\"&&(d.innerHTML=\"\",d.style.cssText=h+\"width:1px;padding:1px;display:inline;zoom:1\",b.inlineBlockNeedsLayout=d.offsetWidth===3,d.style.display=\"block\",d.style.overflow=\"visible\",d.innerHTML=\"<div></div>\",d.firstChild.style.width=\"5px\",b.shrinkWrapBlocks=d.offsetWidth!==3,c.style.zoom=1),i.removeChild(c),c=d=f=g=null}),i.removeChild(n),c=d=f=g=h=i=n=null,b}();var H=/(?:\\{[\\s\\S]*\\}|\\[[\\s\\S]*\\])$/,I=/([A-Z])/g;p.extend({cache:{},deletedIds:[],uuid:0,expando:\"jQuery\"+(p.fn.jquery+Math.random()).replace(/\\D/g,\"\"),noData:{embed:!0,object:\"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\",applet:!0},hasData:function(a){return a=a.nodeType?p.cache[a[p.expando]]:a[p.expando],!!a&&!K(a)},data:function(a,c,d,e){if(!p.acceptData(a))return;var f,g,h=p.expando,i=typeof c==\"string\",j=a.nodeType,k=j?p.cache:a,l=j?a[h]:a[h]&&h;if((!l||!k[l]||!e&&!k[l].data)&&i&&d===b)return;l||(j?a[h]=l=p.deletedIds.pop()||++p.uuid:l=h),k[l]||(k[l]={},j||(k[l].toJSON=p.noop));if(typeof c==\"object\"||typeof c==\"function\")e?k[l]=p.extend(k[l],c):k[l].data=p.extend(k[l].data,c);return f=k[l],e||(f.data||(f.data={}),f=f.data),d!==b&&(f[p.camelCase(c)]=d),i?(g=f[c],g==null&&(g=f[p.camelCase(c)])):g=f,g},removeData:function(a,b,c){if(!p.acceptData(a))return;var d,e,f,g=a.nodeType,h=g?p.cache:a,i=g?a[p.expando]:p.expando;if(!h[i])return;if(b){d=c?h[i]:h[i].data;if(d){p.isArray(b)||(b in d?b=[b]:(b=p.camelCase(b),b in d?b=[b]:b=b.split(\" \")));for(e=0,f=b.length;e<f;e++)delete d[b[e]];if(!(c?K:p.isEmptyObject)(d))return}}if(!c){delete h[i].data;if(!K(h[i]))return}g?p.cleanData([a],!0):p.support.deleteExpando||h!=h.window?delete h[i]:h[i]=null},_data:function(a,b,c){return p.data(a,b,c,!0)},acceptData:function(a){var b=a.nodeName&&p.noData[a.nodeName.toLowerCase()];return!b||b!==!0&&a.getAttribute(\"classid\")===b}}),p.fn.extend({data:function(a,c){var d,e,f,g,h,i=this[0],j=0,k=null;if(a===b){if(this.length){k=p.data(i);if(i.nodeType===1&&!p._data(i,\"parsedAttrs\")){f=i.attributes;for(h=f.length;j<h;j++)g=f[j].name,g.indexOf(\"data-\")===0&&(g=p.camelCase(g.substring(5)),J(i,g,k[g]));p._data(i,\"parsedAttrs\",!0)}}return k}return typeof a==\"object\"?this.each(function(){p.data(this,a)}):(d=a.split(\".\",2),d[1]=d[1]?\".\"+d[1]:\"\",e=d[1]+\"!\",p.access(this,function(c){if(c===b)return k=this.triggerHandler(\"getData\"+e,[d[0]]),k===b&&i&&(k=p.data(i,a),k=J(i,a,k)),k===b&&d[1]?this.data(d[0]):k;d[1]=c,this.each(function(){var b=p(this);b.triggerHandler(\"setData\"+e,d),p.data(this,a,c),b.triggerHandler(\"changeData\"+e,d)})},null,c,arguments.length>1,null,!1))},removeData:function(a){return this.each(function(){p.removeData(this,a)})}}),p.extend({queue:function(a,b,c){var d;if(a)return b=(b||\"fx\")+\"queue\",d=p._data(a,b),c&&(!d||p.isArray(c)?d=p._data(a,b,p.makeArray(c)):d.push(c)),d||[]},dequeue:function(a,b){b=b||\"fx\";var c=p.queue(a,b),d=c.length,e=c.shift(),f=p._queueHooks(a,b),g=function(){p.dequeue(a,b)};e===\"inprogress\"&&(e=c.shift(),d--),e&&(b===\"fx\"&&c.unshift(\"inprogress\"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+\"queueHooks\";return p._data(a,c)||p._data(a,c,{empty:p.Callbacks(\"once memory\").add(function(){p.removeData(a,b+\"queue\",!0),p.removeData(a,c,!0)})})}}),p.fn.extend({queue:function(a,c){var d=2;return typeof a!=\"string\"&&(c=a,a=\"fx\",d--),arguments.length<d?p.queue(this[0],a):c===b?this:this.each(function(){var b=p.queue(this,a,c);p._queueHooks(this,a),a===\"fx\"&&b[0]!==\"inprogress\"&&p.dequeue(this,a)})},dequeue:function(a){return this.each(function(){p.dequeue(this,a)})},delay:function(a,b){return a=p.fx?p.fx.speeds[a]||a:a,b=b||\"fx\",this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},clearQueue:function(a){return this.queue(a||\"fx\",[])},promise:function(a,c){var d,e=1,f=p.Deferred(),g=this,h=this.length,i=function(){--e||f.resolveWith(g,[g])};typeof a!=\"string\"&&(c=a,a=b),a=a||\"fx\";while(h--)d=p._data(g[h],a+\"queueHooks\"),d&&d.empty&&(e++,d.empty.add(i));return i(),f.promise(c)}});var L,M,N,O=/[\\t\\r\\n]/g,P=/\\r/g,Q=/^(?:button|input)$/i,R=/^(?:button|input|object|select|textarea)$/i,S=/^a(?:rea|)$/i,T=/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,U=p.support.getSetAttribute;p.fn.extend({attr:function(a,b){return p.access(this,p.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){p.removeAttr(this,a)})},prop:function(a,b){return p.access(this,p.prop,a,b,arguments.length>1)},removeProp:function(a){return a=p.propFix[a]||a,this.each(function(){try{this[a]=b,delete this[a]}catch(c){}})},addClass:function(a){var b,c,d,e,f,g,h;if(p.isFunction(a))return this.each(function(b){p(this).addClass(a.call(this,b,this.className))});if(a&&typeof a==\"string\"){b=a.split(s);for(c=0,d=this.length;c<d;c++){e=this[c];if(e.nodeType===1)if(!e.className&&b.length===1)e.className=a;else{f=\" \"+e.className+\" \";for(g=0,h=b.length;g<h;g++)~f.indexOf(\" \"+b[g]+\" \")||(f+=b[g]+\" \");e.className=p.trim(f)}}}return this},removeClass:function(a){var c,d,e,f,g,h,i;if(p.isFunction(a))return this.each(function(b){p(this).removeClass(a.call(this,b,this.className))});if(a&&typeof a==\"string\"||a===b){c=(a||\"\").split(s);for(h=0,i=this.length;h<i;h++){e=this[h];if(e.nodeType===1&&e.className){d=(\" \"+e.className+\" \").replace(O,\" \");for(f=0,g=c.length;f<g;f++)while(d.indexOf(\" \"+c[f]+\" \")>-1)d=d.replace(\" \"+c[f]+\" \",\" \");e.className=a?p.trim(d):\"\"}}}return this},toggleClass:function(a,b){var c=typeof a,d=typeof b==\"boolean\";return p.isFunction(a)?this.each(function(c){p(this).toggleClass(a.call(this,c,this.className,b),b)}):this.each(function(){if(c===\"string\"){var e,f=0,g=p(this),h=b,i=a.split(s);while(e=i[f++])h=d?h:!g.hasClass(e),g[h?\"addClass\":\"removeClass\"](e)}else if(c===\"undefined\"||c===\"boolean\")this.className&&p._data(this,\"__className__\",this.className),this.className=this.className||a===!1?\"\":p._data(this,\"__className__\")||\"\"})},hasClass:function(a){var b=\" \"+a+\" \",c=0,d=this.length;for(;c<d;c++)if(this[c].nodeType===1&&(\" \"+this[c].className+\" \").replace(O,\" \").indexOf(b)>-1)return!0;return!1},val:function(a){var c,d,e,f=this[0];if(!arguments.length){if(f)return c=p.valHooks[f.type]||p.valHooks[f.nodeName.toLowerCase()],c&&\"get\"in c&&(d=c.get(f,\"value\"))!==b?d:(d=f.value,typeof d==\"string\"?d.replace(P,\"\"):d==null?\"\":d);return}return e=p.isFunction(a),this.each(function(d){var f,g=p(this);if(this.nodeType!==1)return;e?f=a.call(this,d,g.val()):f=a,f==null?f=\"\":typeof f==\"number\"?f+=\"\":p.isArray(f)&&(f=p.map(f,function(a){return a==null?\"\":a+\"\"})),c=p.valHooks[this.type]||p.valHooks[this.nodeName.toLowerCase()];if(!c||!(\"set\"in c)||c.set(this,f,\"value\")===b)this.value=f})}}),p.extend({valHooks:{option:{get:function(a){var b=a.attributes.value;return!b||b.specified?a.value:a.text}},select:{get:function(a){var b,c,d,e,f=a.selectedIndex,g=[],h=a.options,i=a.type===\"select-one\";if(f<0)return null;c=i?f:0,d=i?f+1:h.length;for(;c<d;c++){e=h[c];if(e.selected&&(p.support.optDisabled?!e.disabled:e.getAttribute(\"disabled\")===null)&&(!e.parentNode.disabled||!p.nodeName(e.parentNode,\"optgroup\"))){b=p(e).val();if(i)return b;g.push(b)}}return i&&!g.length&&h.length?p(h[f]).val():g},set:function(a,b){var c=p.makeArray(b);return p(a).find(\"option\").each(function(){this.selected=p.inArray(p(this).val(),c)>=0}),c.length||(a.selectedIndex=-1),c}}},attrFn:{},attr:function(a,c,d,e){var f,g,h,i=a.nodeType;if(!a||i===3||i===8||i===2)return;if(e&&p.isFunction(p.fn[c]))return p(a)[c](d);if(typeof a.getAttribute==\"undefined\")return p.prop(a,c,d);h=i!==1||!p.isXMLDoc(a),h&&(c=c.toLowerCase(),g=p.attrHooks[c]||(T.test(c)?M:L));if(d!==b){if(d===null){p.removeAttr(a,c);return}return g&&\"set\"in g&&h&&(f=g.set(a,d,c))!==b?f:(a.setAttribute(c,\"\"+d),d)}return g&&\"get\"in g&&h&&(f=g.get(a,c))!==null?f:(f=a.getAttribute(c),f===null?b:f)},removeAttr:function(a,b){var c,d,e,f,g=0;if(b&&a.nodeType===1){d=b.split(s);for(;g<d.length;g++)e=d[g],e&&(c=p.propFix[e]||e,f=T.test(e),f||p.attr(a,e,\"\"),a.removeAttribute(U?e:c),f&&c in a&&(a[c]=!1))}},attrHooks:{type:{set:function(a,b){if(Q.test(a.nodeName)&&a.parentNode)p.error(\"type property can't be changed\");else if(!p.support.radioValue&&b===\"radio\"&&p.nodeName(a,\"input\")){var c=a.value;return a.setAttribute(\"type\",b),c&&(a.value=c),b}}},value:{get:function(a,b){return L&&p.nodeName(a,\"button\")?L.get(a,b):b in a?a.value:null},set:function(a,b,c){if(L&&p.nodeName(a,\"button\"))return L.set(a,b,c);a.value=b}}},propFix:{tabindex:\"tabIndex\",readonly:\"readOnly\",\"for\":\"htmlFor\",\"class\":\"className\",maxlength:\"maxLength\",cellspacing:\"cellSpacing\",cellpadding:\"cellPadding\",rowspan:\"rowSpan\",colspan:\"colSpan\",usemap:\"useMap\",frameborder:\"frameBorder\",contenteditable:\"contentEditable\"},prop:function(a,c,d){var e,f,g,h=a.nodeType;if(!a||h===3||h===8||h===2)return;return g=h!==1||!p.isXMLDoc(a),g&&(c=p.propFix[c]||c,f=p.propHooks[c]),d!==b?f&&\"set\"in f&&(e=f.set(a,d,c))!==b?e:a[c]=d:f&&\"get\"in f&&(e=f.get(a,c))!==null?e:a[c]},propHooks:{tabIndex:{get:function(a){var c=a.getAttributeNode(\"tabindex\");return c&&c.specified?parseInt(c.value,10):R.test(a.nodeName)||S.test(a.nodeName)&&a.href?0:b}}}}),M={get:function(a,c){var d,e=p.prop(a,c);return e===!0||typeof e!=\"boolean\"&&(d=a.getAttributeNode(c))&&d.nodeValue!==!1?c.toLowerCase():b},set:function(a,b,c){var d;return b===!1?p.removeAttr(a,c):(d=p.propFix[c]||c,d in a&&(a[d]=!0),a.setAttribute(c,c.toLowerCase())),c}},U||(N={name:!0,id:!0,coords:!0},L=p.valHooks.button={get:function(a,c){var d;return d=a.getAttributeNode(c),d&&(N[c]?d.value!==\"\":d.specified)?d.value:b},set:function(a,b,c){var d=a.getAttributeNode(c);return d||(d=e.createAttribute(c),a.setAttributeNode(d)),d.value=b+\"\"}},p.each([\"width\",\"height\"],function(a,b){p.attrHooks[b]=p.extend(p.attrHooks[b],{set:function(a,c){if(c===\"\")return a.setAttribute(b,\"auto\"),c}})}),p.attrHooks.contenteditable={get:L.get,set:function(a,b,c){b===\"\"&&(b=\"false\"),L.set(a,b,c)}}),p.support.hrefNormalized||p.each([\"href\",\"src\",\"width\",\"height\"],function(a,c){p.attrHooks[c]=p.extend(p.attrHooks[c],{get:function(a){var d=a.getAttribute(c,2);return d===null?b:d}})}),p.support.style||(p.attrHooks.style={get:function(a){return a.style.cssText.toLowerCase()||b},set:function(a,b){return a.style.cssText=\"\"+b}}),p.support.optSelected||(p.propHooks.selected=p.extend(p.propHooks.selected,{get:function(a){var b=a.parentNode;return b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex),null}})),p.support.enctype||(p.propFix.enctype=\"encoding\"),p.support.checkOn||p.each([\"radio\",\"checkbox\"],function(){p.valHooks[this]={get:function(a){return a.getAttribute(\"value\")===null?\"on\":a.value}}}),p.each([\"radio\",\"checkbox\"],function(){p.valHooks[this]=p.extend(p.valHooks[this],{set:function(a,b){if(p.isArray(b))return a.checked=p.inArray(p(a).val(),b)>=0}})});var V=/^(?:textarea|input|select)$/i,W=/^([^\\.]*|)(?:\\.(.+)|)$/,X=/(?:^|\\s)hover(\\.\\S+|)\\b/,Y=/^key/,Z=/^(?:mouse|contextmenu)|click/,$=/^(?:focusinfocus|focusoutblur)$/,_=function(a){return p.event.special.hover?a:a.replace(X,\"mouseenter$1 mouseleave$1\")};p.event={add:function(a,c,d,e,f){var g,h,i,j,k,l,m,n,o,q,r;if(a.nodeType===3||a.nodeType===8||!c||!d||!(g=p._data(a)))return;d.handler&&(o=d,d=o.handler,f=o.selector),d.guid||(d.guid=p.guid++),i=g.events,i||(g.events=i={}),h=g.handle,h||(g.handle=h=function(a){return typeof p!=\"undefined\"&&(!a||p.event.triggered!==a.type)?p.event.dispatch.apply(h.elem,arguments):b},h.elem=a),c=p.trim(_(c)).split(\" \");for(j=0;j<c.length;j++){k=W.exec(c[j])||[],l=k[1],m=(k[2]||\"\").split(\".\").sort(),r=p.event.special[l]||{},l=(f?r.delegateType:r.bindType)||l,r=p.event.special[l]||{},n=p.extend({type:l,origType:k[1],data:e,handler:d,guid:d.guid,selector:f,namespace:m.join(\".\")},o),q=i[l];if(!q){q=i[l]=[],q.delegateCount=0;if(!r.setup||r.setup.call(a,e,m,h)===!1)a.addEventListener?a.addEventListener(l,h,!1):a.attachEvent&&a.attachEvent(\"on\"+l,h)}r.add&&(r.add.call(a,n),n.handler.guid||(n.handler.guid=d.guid)),f?q.splice(q.delegateCount++,0,n):q.push(n),p.event.global[l]=!0}a=null},global:{},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,n,o,q,r=p.hasData(a)&&p._data(a);if(!r||!(m=r.events))return;b=p.trim(_(b||\"\")).split(\" \");for(f=0;f<b.length;f++){g=W.exec(b[f])||[],h=i=g[1],j=g[2];if(!h){for(h in m)p.event.remove(a,h+b[f],c,d,!0);continue}n=p.event.special[h]||{},h=(d?n.delegateType:n.bindType)||h,o=m[h]||[],k=o.length,j=j?new RegExp(\"(^|\\\\.)\"+j.split(\".\").sort().join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"):null;for(l=0;l<o.length;l++)q=o[l],(e||i===q.origType)&&(!c||c.guid===q.guid)&&(!j||j.test(q.namespace))&&(!d||d===q.selector||d===\"**\"&&q.selector)&&(o.splice(l--,1),q.selector&&o.delegateCount--,n.remove&&n.remove.call(a,q));o.length===0&&k!==o.length&&((!n.teardown||n.teardown.call(a,j,r.handle)===!1)&&p.removeEvent(a,h,r.handle),delete m[h])}p.isEmptyObject(m)&&(delete r.handle,p.removeData(a,\"events\",!0))},customEvent:{getData:!0,setData:!0,changeData:!0},trigger:function(c,d,f,g){if(!f||f.nodeType!==3&&f.nodeType!==8){var h,i,j,k,l,m,n,o,q,r,s=c.type||c,t=[];if($.test(s+p.event.triggered))return;s.indexOf(\"!\")>=0&&(s=s.slice(0,-1),i=!0),s.indexOf(\".\")>=0&&(t=s.split(\".\"),s=t.shift(),t.sort());if((!f||p.event.customEvent[s])&&!p.event.global[s])return;c=typeof c==\"object\"?c[p.expando]?c:new p.Event(s,c):new p.Event(s),c.type=s,c.isTrigger=!0,c.exclusive=i,c.namespace=t.join(\".\"),c.namespace_re=c.namespace?new RegExp(\"(^|\\\\.)\"+t.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"):null,m=s.indexOf(\":\")<0?\"on\"+s:\"\";if(!f){h=p.cache;for(j in h)h[j].events&&h[j].events[s]&&p.event.trigger(c,d,h[j].handle.elem,!0);return}c.result=b,c.target||(c.target=f),d=d!=null?p.makeArray(d):[],d.unshift(c),n=p.event.special[s]||{};if(n.trigger&&n.trigger.apply(f,d)===!1)return;q=[[f,n.bindType||s]];if(!g&&!n.noBubble&&!p.isWindow(f)){r=n.delegateType||s,k=$.test(r+s)?f:f.parentNode;for(l=f;k;k=k.parentNode)q.push([k,r]),l=k;l===(f.ownerDocument||e)&&q.push([l.defaultView||l.parentWindow||a,r])}for(j=0;j<q.length&&!c.isPropagationStopped();j++)k=q[j][0],c.type=q[j][1],o=(p._data(k,\"events\")||{})[c.type]&&p._data(k,\"handle\"),o&&o.apply(k,d),o=m&&k[m],o&&p.acceptData(k)&&o.apply(k,d)===!1&&c.preventDefault();return c.type=s,!g&&!c.isDefaultPrevented()&&(!n._default||n._default.apply(f.ownerDocument,d)===!1)&&(s!==\"click\"||!p.nodeName(f,\"a\"))&&p.acceptData(f)&&m&&f[s]&&(s!==\"focus\"&&s!==\"blur\"||c.target.offsetWidth!==0)&&!p.isWindow(f)&&(l=f[m],l&&(f[m]=null),p.event.triggered=s,f[s](),p.event.triggered=b,l&&(f[m]=l)),c.result}return},dispatch:function(c){c=p.event.fix(c||a.event);var d,e,f,g,h,i,j,k,l,m,n=(p._data(this,\"events\")||{})[c.type]||[],o=n.delegateCount,q=[].slice.call(arguments),r=!c.exclusive&&!c.namespace,s=p.event.special[c.type]||{},t=[];q[0]=c,c.delegateTarget=this;if(s.preDispatch&&s.preDispatch.call(this,c)===!1)return;if(o&&(!c.button||c.type!==\"click\"))for(f=c.target;f!=this;f=f.parentNode||this)if(f.disabled!==!0||c.type!==\"click\"){h={},j=[];for(d=0;d<o;d++)k=n[d],l=k.selector,h[l]===b&&(h[l]=p(l,this).index(f)>=0),h[l]&&j.push(k);j.length&&t.push({elem:f,matches:j})}n.length>o&&t.push({elem:this,matches:n.slice(o)});for(d=0;d<t.length&&!c.isPropagationStopped();d++){i=t[d],c.currentTarget=i.elem;for(e=0;e<i.matches.length&&!c.isImmediatePropagationStopped();e++){k=i.matches[e];if(r||!c.namespace&&!k.namespace||c.namespace_re&&c.namespace_re.test(k.namespace))c.data=k.data,c.handleObj=k,g=((p.event.special[k.origType]||{}).handle||k.handler).apply(i.elem,q),g!==b&&(c.result=g,g===!1&&(c.preventDefault(),c.stopPropagation()))}}return s.postDispatch&&s.postDispatch.call(this,c),c.result},props:\"attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which\".split(\" \"),fixHooks:{},keyHooks:{props:\"char charCode key keyCode\".split(\" \"),filter:function(a,b){return a.which==null&&(a.which=b.charCode!=null?b.charCode:b.keyCode),a}},mouseHooks:{props:\"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement\".split(\" \"),filter:function(a,c){var d,f,g,h=c.button,i=c.fromElement;return a.pageX==null&&c.clientX!=null&&(d=a.target.ownerDocument||e,f=d.documentElement,g=d.body,a.pageX=c.clientX+(f&&f.scrollLeft||g&&g.scrollLeft||0)-(f&&f.clientLeft||g&&g.clientLeft||0),a.pageY=c.clientY+(f&&f.scrollTop||g&&g.scrollTop||0)-(f&&f.clientTop||g&&g.clientTop||0)),!a.relatedTarget&&i&&(a.relatedTarget=i===a.target?c.toElement:i),!a.which&&h!==b&&(a.which=h&1?1:h&2?3:h&4?2:0),a}},fix:function(a){if(a[p.expando])return a;var b,c,d=a,f=p.event.fixHooks[a.type]||{},g=f.props?this.props.concat(f.props):this.props;a=p.Event(d);for(b=g.length;b;)c=g[--b],a[c]=d[c];return a.target||(a.target=d.srcElement||e),a.target.nodeType===3&&(a.target=a.target.parentNode),a.metaKey=!!a.metaKey,f.filter?f.filter(a,d):a},special:{load:{noBubble:!0},focus:{delegateType:\"focusin\"},blur:{delegateType:\"focusout\"},beforeunload:{setup:function(a,b,c){p.isWindow(this)&&(this.onbeforeunload=c)},teardown:function(a,b){this.onbeforeunload===b&&(this.onbeforeunload=null)}}},simulate:function(a,b,c,d){var e=p.extend(new p.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?p.event.trigger(e,null,b):p.event.dispatch.call(b,e),e.isDefaultPrevented()&&c.preventDefault()}},p.event.handle=p.event.dispatch,p.removeEvent=e.removeEventListener?function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)}:function(a,b,c){var d=\"on\"+b;a.detachEvent&&(typeof a[d]==\"undefined\"&&(a[d]=null),a.detachEvent(d,c))},p.Event=function(a,b){if(this instanceof p.Event)a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||a.returnValue===!1||a.getPreventDefault&&a.getPreventDefault()?bb:ba):this.type=a,b&&p.extend(this,b),this.timeStamp=a&&a.timeStamp||p.now(),this[p.expando]=!0;else return new p.Event(a,b)},p.Event.prototype={preventDefault:function(){this.isDefaultPrevented=bb;var a=this.originalEvent;if(!a)return;a.preventDefault?a.preventDefault():a.returnValue=!1},stopPropagation:function(){this.isPropagationStopped=bb;var a=this.originalEvent;if(!a)return;a.stopPropagation&&a.stopPropagation(),a.cancelBubble=!0},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=bb,this.stopPropagation()},isDefaultPrevented:ba,isPropagationStopped:ba,isImmediatePropagationStopped:ba},p.each({mouseenter:\"mouseover\",mouseleave:\"mouseout\"},function(a,b){p.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj,g=f.selector;if(!e||e!==d&&!p.contains(d,e))a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b;return c}}}),p.support.submitBubbles||(p.event.special.submit={setup:function(){if(p.nodeName(this,\"form\"))return!1;p.event.add(this,\"click._submit keypress._submit\",function(a){var c=a.target,d=p.nodeName(c,\"input\")||p.nodeName(c,\"button\")?c.form:b;d&&!p._data(d,\"_submit_attached\")&&(p.event.add(d,\"submit._submit\",function(a){a._submit_bubble=!0}),p._data(d,\"_submit_attached\",!0))})},postDispatch:function(a){a._submit_bubble&&(delete a._submit_bubble,this.parentNode&&!a.isTrigger&&p.event.simulate(\"submit\",this.parentNode,a,!0))},teardown:function(){if(p.nodeName(this,\"form\"))return!1;p.event.remove(this,\"._submit\")}}),p.support.changeBubbles||(p.event.special.change={setup:function(){if(V.test(this.nodeName)){if(this.type===\"checkbox\"||this.type===\"radio\")p.event.add(this,\"propertychange._change\",function(a){a.originalEvent.propertyName===\"checked\"&&(this._just_changed=!0)}),p.event.add(this,\"click._change\",function(a){this._just_changed&&!a.isTrigger&&(this._just_changed=!1),p.event.simulate(\"change\",this,a,!0)});return!1}p.event.add(this,\"beforeactivate._change\",function(a){var b=a.target;V.test(b.nodeName)&&!p._data(b,\"_change_attached\")&&(p.event.add(b,\"change._change\",function(a){this.parentNode&&!a.isSimulated&&!a.isTrigger&&p.event.simulate(\"change\",this.parentNode,a,!0)}),p._data(b,\"_change_attached\",!0))})},handle:function(a){var b=a.target;if(this!==b||a.isSimulated||a.isTrigger||b.type!==\"radio\"&&b.type!==\"checkbox\")return a.handleObj.handler.apply(this,arguments)},teardown:function(){return p.event.remove(this,\"._change\"),!V.test(this.nodeName)}}),p.support.focusinBubbles||p.each({focus:\"focusin\",blur:\"focusout\"},function(a,b){var c=0,d=function(a){p.event.simulate(b,a.target,p.event.fix(a),!0)};p.event.special[b]={setup:function(){c++===0&&e.addEventListener(a,d,!0)},teardown:function(){--c===0&&e.removeEventListener(a,d,!0)}}}),p.fn.extend({on:function(a,c,d,e,f){var g,h;if(typeof a==\"object\"){typeof c!=\"string\"&&(d=d||c,c=b);for(h in a)this.on(h,c,d,a[h],f);return this}d==null&&e==null?(e=c,d=c=b):e==null&&(typeof c==\"string\"?(e=d,d=b):(e=d,d=c,c=b));if(e===!1)e=ba;else if(!e)return this;return f===1&&(g=e,e=function(a){return p().off(a),g.apply(this,arguments)},e.guid=g.guid||(g.guid=p.guid++)),this.each(function(){p.event.add(this,a,e,d,c)})},one:function(a,b,c,d){return this.on(a,b,c,d,1)},off:function(a,c,d){var e,f;if(a&&a.preventDefault&&a.handleObj)return e=a.handleObj,p(a.delegateTarget).off(e.namespace?e.origType+\".\"+e.namespace:e.origType,e.selector,e.handler),this;if(typeof a==\"object\"){for(f in a)this.off(f,c,a[f]);return this}if(c===!1||typeof c==\"function\")d=c,c=b;return d===!1&&(d=ba),this.each(function(){p.event.remove(this,a,d,c)})},bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},live:function(a,b,c){return p(this.context).on(a,this.selector,b,c),this},die:function(a,b){return p(this.context).off(a,this.selector||\"**\",b),this},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return arguments.length==1?this.off(a,\"**\"):this.off(b,a||\"**\",c)},trigger:function(a,b){return this.each(function(){p.event.trigger(a,b,this)})},triggerHandler:function(a,b){if(this[0])return p.event.trigger(a,b,this[0],!0)},toggle:function(a){var b=arguments,c=a.guid||p.guid++,d=0,e=function(c){var e=(p._data(this,\"lastToggle\"+a.guid)||0)%d;return p._data(this,\"lastToggle\"+a.guid,e+1),c.preventDefault(),b[e].apply(this,arguments)||!1};e.guid=c;while(d<b.length)b[d++].guid=c;return this.click(e)},hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}}),p.each(\"blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu\".split(\" \"),function(a,b){p.fn[b]=function(a,c){return c==null&&(c=a,a=null),arguments.length>0?this.on(b,null,a,c):this.trigger(b)},Y.test(b)&&(p.event.fixHooks[b]=p.event.keyHooks),Z.test(b)&&(p.event.fixHooks[b]=p.event.mouseHooks)}),function(a,b){function $(a,b,c,d){c=c||[],b=b||q;var e,f,g,j,k=b.nodeType;if(k!==1&&k!==9)return[];if(!a||typeof a!=\"string\")return c;g=h(b);if(!g&&!d)if(e=L.exec(a))if(j=e[1]){if(k===9){f=b.getElementById(j);if(!f||!f.parentNode)return c;if(f.id===j)return c.push(f),c}else if(b.ownerDocument&&(f=b.ownerDocument.getElementById(j))&&i(b,f)&&f.id===j)return c.push(f),c}else{if(e[2])return u.apply(c,t.call(b.getElementsByTagName(a),0)),c;if((j=e[3])&&X&&b.getElementsByClassName)return u.apply(c,t.call(b.getElementsByClassName(j),0)),c}return bk(a,b,c,d,g)}function _(a){return function(b){var c=b.nodeName.toLowerCase();return c===\"input\"&&b.type===a}}function ba(a){return function(b){var c=b.nodeName.toLowerCase();return(c===\"input\"||c===\"button\")&&b.type===a}}function bb(a,b,c){if(a===b)return c;var d=a.nextSibling;while(d){if(d===b)return-1;d=d.nextSibling}return 1}function bc(a,b,c,d){var e,g,h,i,j,k,l,m,n,p,r=!c&&b!==q,s=(r?\"<s>\":\"\")+a.replace(H,\"$1<s>\"),u=y[o][s];if(u)return d?0:t.call(u,0);j=a,k=[],m=0,n=f.preFilter,p=f.filter;while(j){if(!e||(g=I.exec(j)))g&&(j=j.slice(g[0].length),h.selector=l),k.push(h=[]),l=\"\",r&&(j=\" \"+j);e=!1;if(g=J.exec(j))l+=g[0],j=j.slice(g[0].length),e=h.push({part:g.pop().replace(H,\" \"),string:g[0],captures:g});for(i in p)(g=S[i].exec(j))&&(!n[i]||(g=n[i](g,b,c)))&&(l+=g[0],j=j.slice(g[0].length),e=h.push({part:i,string:g.shift(),captures:g}));if(!e)break}return l&&(h.selector=l),d?j.length:j?$.error(a):t.call(y(s,k),0)}function bd(a,b,e,f){var g=b.dir,h=s++;return a||(a=function(a){return a===e}),b.first?function(b){while(b=b[g])if(b.nodeType===1)return a(b)&&b}:f?function(b){while(b=b[g])if(b.nodeType===1&&a(b))return b}:function(b){var e,f=h+\".\"+c,i=f+\".\"+d;while(b=b[g])if(b.nodeType===1){if((e=b[o])===i)return b.sizset;if(typeof e==\"string\"&&e.indexOf(f)===0){if(b.sizset)return b}else{b[o]=i;if(a(b))return b.sizset=!0,b;b.sizset=!1}}}}function be(a,b){return a?function(c){var d=b(c);return d&&a(d===!0?c:d)}:b}function bf(a,b,c){var d,e,g=0;for(;d=a[g];g++)f.relative[d.part]?e=bd(e,f.relative[d.part],b,c):e=be(e,f.filter[d.part].apply(null,d.captures.concat(b,c)));return e}function bg(a){return function(b){var c,d=0;for(;c=a[d];d++)if(c(b))return!0;return!1}}function bh(a,b,c,d){var e=0,f=b.length;for(;e<f;e++)$(a,b[e],c,d)}function bi(a,b,c,d,e,g){var h,i=f.setFilters[b.toLowerCase()];return i||$.error(b),(a||!(h=e))&&bh(a||\"*\",d,h=[],e),h.length>0?i(h,c,g):[]}function bj(a,c,d,e){var f,g,h,i,j,k,l,m,n,o,p,q,r,s=0,t=a.length,v=S.POS,w=new RegExp(\"^\"+v.source+\"(?!\"+A+\")\",\"i\"),x=function(){var a=1,c=arguments.length-2;for(;a<c;a++)arguments[a]===b&&(n[a]=b)};for(;s<t;s++){f=a[s],g=\"\",m=e;for(h=0,i=f.length;h<i;h++){j=f[h],k=j.string;if(j.part===\"PSEUDO\"){v.exec(\"\"),l=0;while(n=v.exec(k)){o=!0,p=v.lastIndex=n.index+n[0].length;if(p>l){g+=k.slice(l,n.index),l=p,q=[c],J.test(g)&&(m&&(q=m),m=e);if(r=O.test(g))g=g.slice(0,-5).replace(J,\"$&*\"),l++;n.length>1&&n[0].replace(w,x),m=bi(g,n[1],n[2],q,m,r)}g=\"\"}}o||(g+=k),o=!1}g?J.test(g)?bh(g,m||[c],d,e):$(g,c,d,e?e.concat(m):m):u.apply(d,m)}return t===1?d:$.uniqueSort(d)}function bk(a,b,e,g,h){a=a.replace(H,\"$1\");var i,k,l,m,n,o,p,q,r,s,v=bc(a,b,h),w=b.nodeType;if(S.POS.test(a))return bj(v,b,e,g);if(g)i=t.call(g,0);else if(v.length===1){if((o=t.call(v[0],0)).length>2&&(p=o[0]).part===\"ID\"&&w===9&&!h&&f.relative[o[1].part]){b=f.find.ID(p.captures[0].replace(R,\"\"),b,h)[0];if(!b)return e;a=a.slice(o.shift().string.length)}r=(v=N.exec(o[0].string))&&!v.index&&b.parentNode||b,q=\"\";for(n=o.length-1;n>=0;n--){p=o[n],s=p.part,q=p.string+q;if(f.relative[s])break;if(f.order.test(s)){i=f.find[s](p.captures[0].replace(R,\"\"),r,h);if(i==null)continue;a=a.slice(0,a.length-q.length)+q.replace(S[s],\"\"),a||u.apply(e,t.call(i,0));break}}}if(a){k=j(a,b,h),c=k.dirruns++,i==null&&(i=f.find.TAG(\"*\",N.test(a)&&b.parentNode||b));for(n=0;m=i[n];n++)d=k.runs++,k(m)&&e.push(m)}return e}var c,d,e,f,g,h,i,j,k,l,m=!0,n=\"undefined\",o=(\"sizcache\"+Math.random()).replace(\".\",\"\"),q=a.document,r=q.documentElement,s=0,t=[].slice,u=[].push,v=function(a,b){return a[o]=b||!0,a},w=function(){var a={},b=[];return v(function(c,d){return b.push(c)>f.cacheLength&&delete a[b.shift()],a[c]=d},a)},x=w(),y=w(),z=w(),A=\"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",B=\"(?:\\\\\\\\.|[-\\\\w]|[^\\\\x00-\\\\xa0])+\",C=B.replace(\"w\",\"w#\"),D=\"([*^$|!~]?=)\",E=\"\\\\[\"+A+\"*(\"+B+\")\"+A+\"*(?:\"+D+A+\"*(?:(['\\\"])((?:\\\\\\\\.|[^\\\\\\\\])*?)\\\\3|(\"+C+\")|)|)\"+A+\"*\\\\]\",F=\":(\"+B+\")(?:\\\\((?:(['\\\"])((?:\\\\\\\\.|[^\\\\\\\\])*?)\\\\2|([^()[\\\\]]*|(?:(?:\"+E+\")|[^:]|\\\\\\\\.)*|.*))\\\\)|)\",G=\":(nth|eq|gt|lt|first|last|even|odd)(?:\\\\(((?:-\\\\d)?\\\\d*)\\\\)|)(?=[^-]|$)\",H=new RegExp(\"^\"+A+\"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\"+A+\"+$\",\"g\"),I=new RegExp(\"^\"+A+\"*,\"+A+\"*\"),J=new RegExp(\"^\"+A+\"*([\\\\x20\\\\t\\\\r\\\\n\\\\f>+~])\"+A+\"*\"),K=new RegExp(F),L=/^(?:#([\\w\\-]+)|(\\w+)|\\.([\\w\\-]+))$/,M=/^:not/,N=/[\\x20\\t\\r\\n\\f]*[+~]/,O=/:not\\($/,P=/h\\d/i,Q=/input|select|textarea|button/i,R=/\\\\(?!\\\\)/g,S={ID:new RegExp(\"^#(\"+B+\")\"),CLASS:new RegExp(\"^\\\\.(\"+B+\")\"),NAME:new RegExp(\"^\\\\[name=['\\\"]?(\"+B+\")['\\\"]?\\\\]\"),TAG:new RegExp(\"^(\"+B.replace(\"w\",\"w*\")+\")\"),ATTR:new RegExp(\"^\"+E),PSEUDO:new RegExp(\"^\"+F),CHILD:new RegExp(\"^:(only|nth|last|first)-child(?:\\\\(\"+A+\"*(even|odd|(([+-]|)(\\\\d*)n|)\"+A+\"*(?:([+-]|)\"+A+\"*(\\\\d+)|))\"+A+\"*\\\\)|)\",\"i\"),POS:new RegExp(G,\"ig\"),needsContext:new RegExp(\"^\"+A+\"*[>+~]|\"+G,\"i\")},T=function(a){var b=q.createElement(\"div\");try{return a(b)}catch(c){return!1}finally{b=null}},U=T(function(a){return a.appendChild(q.createComment(\"\")),!a.getElementsByTagName(\"*\").length}),V=T(function(a){return a.innerHTML=\"<a href='#'></a>\",a.firstChild&&typeof a.firstChild.getAttribute!==n&&a.firstChild.getAttribute(\"href\")===\"#\"}),W=T(function(a){a.innerHTML=\"<select></select>\";var b=typeof a.lastChild.getAttribute(\"multiple\");return b!==\"boolean\"&&b!==\"string\"}),X=T(function(a){return a.innerHTML=\"<div class='hidden e'></div><div class='hidden'></div>\",!a.getElementsByClassName||!a.getElementsByClassName(\"e\").length?!1:(a.lastChild.className=\"e\",a.getElementsByClassName(\"e\").length===2)}),Y=T(function(a){a.id=o+0,a.innerHTML=\"<a name='\"+o+\"'></a><div name='\"+o+\"'></div>\",r.insertBefore(a,r.firstChild);var b=q.getElementsByName&&q.getElementsByName(o).length===2+q.getElementsByName(o+0).length;return e=!q.getElementById(o),r.removeChild(a),b});try{t.call(r.childNodes,0)[0].nodeType}catch(Z){t=function(a){var b,c=[];for(;b=this[a];a++)c.push(b);return c}}$.matches=function(a,b){return $(a,null,null,b)},$.matchesSelector=function(a,b){return $(b,null,null,[a]).length>0},g=$.getText=function(a){var b,c=\"\",d=0,e=a.nodeType;if(e){if(e===1||e===9||e===11){if(typeof a.textContent==\"string\")return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=g(a)}else if(e===3||e===4)return a.nodeValue}else for(;b=a[d];d++)c+=g(b);return c},h=$.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return b?b.nodeName!==\"HTML\":!1},i=$.contains=r.contains?function(a,b){var c=a.nodeType===9?a.documentElement:a,d=b&&b.parentNode;return a===d||!!(d&&d.nodeType===1&&c.contains&&c.contains(d))}:r.compareDocumentPosition?function(a,b){return b&&!!(a.compareDocumentPosition(b)&16)}:function(a,b){while(b=b.parentNode)if(b===a)return!0;return!1},$.attr=function(a,b){var c,d=h(a);return d||(b=b.toLowerCase()),f.attrHandle[b]?f.attrHandle[b](a):W||d?a.getAttribute(b):(c=a.getAttributeNode(b),c?typeof a[b]==\"boolean\"?a[b]?b:null:c.specified?c.value:null:null)},f=$.selectors={cacheLength:50,createPseudo:v,match:S,order:new RegExp(\"ID|TAG\"+(Y?\"|NAME\":\"\")+(X?\"|CLASS\":\"\")),attrHandle:V?{}:{href:function(a){return a.getAttribute(\"href\",2)},type:function(a){return a.getAttribute(\"type\")}},find:{ID:e?function(a,b,c){if(typeof b.getElementById!==n&&!c){var d=b.getElementById(a);return d&&d.parentNode?[d]:[]}}:function(a,c,d){if(typeof c.getElementById!==n&&!d){var e=c.getElementById(a);return e?e.id===a||typeof e.getAttributeNode!==n&&e.getAttributeNode(\"id\").value===a?[e]:b:[]}},TAG:U?function(a,b){if(typeof b.getElementsByTagName!==n)return b.getElementsByTagName(a)}:function(a,b){var c=b.getElementsByTagName(a);if(a===\"*\"){var d,e=[],f=0;for(;d=c[f];f++)d.nodeType===1&&e.push(d);return e}return c},NAME:function(a,b){if(typeof b.getElementsByName!==n)return b.getElementsByName(name)},CLASS:function(a,b,c){if(typeof b.getElementsByClassName!==n&&!c)return b.getElementsByClassName(a)}},relative:{\">\":{dir:\"parentNode\",first:!0},\" \":{dir:\"parentNode\"},\"+\":{dir:\"previousSibling\",first:!0},\"~\":{dir:\"previousSibling\"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(R,\"\"),a[3]=(a[4]||a[5]||\"\").replace(R,\"\"),a[2]===\"~=\"&&(a[3]=\" \"+a[3]+\" \"),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),a[1]===\"nth\"?(a[2]||$.error(a[0]),a[3]=+(a[3]?a[4]+(a[5]||1):2*(a[2]===\"even\"||a[2]===\"odd\")),a[4]=+(a[6]+a[7]||a[2]===\"odd\")):a[2]&&$.error(a[0]),a},PSEUDO:function(a,b,c){var d,e;if(S.CHILD.test(a[0]))return null;if(a[3])a[2]=a[3];else if(d=a[4])K.test(d)&&(e=bc(d,b,c,!0))&&(e=d.indexOf(\")\",d.length-e)-d.length)&&(d=d.slice(0,e),a[0]=a[0].slice(0,e)),a[2]=d;return a.slice(0,3)}},filter:{ID:e?function(a){return a=a.replace(R,\"\"),function(b){return b.getAttribute(\"id\")===a}}:function(a){return a=a.replace(R,\"\"),function(b){var c=typeof b.getAttributeNode!==n&&b.getAttributeNode(\"id\");return c&&c.value===a}},TAG:function(a){return a===\"*\"?function(){return!0}:(a=a.replace(R,\"\").toLowerCase(),function(b){return b.nodeName&&b.nodeName.toLowerCase()===a})},CLASS:function(a){var b=x[o][a];return b||(b=x(a,new RegExp(\"(^|\"+A+\")\"+a+\"(\"+A+\"|$)\"))),function(a){return b.test(a.className||typeof a.getAttribute!==n&&a.getAttribute(\"class\")||\"\")}},ATTR:function(a,b,c){return b?function(d){var e=$.attr(d,a),f=e+\"\";if(e==null)return b===\"!=\";switch(b){case\"=\":return f===c;case\"!=\":return f!==c;case\"^=\":return c&&f.indexOf(c)===0;case\"*=\":return c&&f.indexOf(c)>-1;case\"$=\":return c&&f.substr(f.length-c.length)===c;case\"~=\":return(\" \"+f+\" \").indexOf(c)>-1;case\"|=\":return f===c||f.substr(0,c.length+1)===c+\"-\"}}:function(b){return $.attr(b,a)!=null}},CHILD:function(a,b,c,d){if(a===\"nth\"){var e=s++;return function(a){var b,f,g=0,h=a;if(c===1&&d===0)return!0;b=a.parentNode;if(b&&(b[o]!==e||!a.sizset)){for(h=b.firstChild;h;h=h.nextSibling)if(h.nodeType===1){h.sizset=++g;if(h===a)break}b[o]=e}return f=a.sizset-d,c===0?f===0:f%c===0&&f/c>=0}}return function(b){var c=b;switch(a){case\"only\":case\"first\":while(c=c.previousSibling)if(c.nodeType===1)return!1;if(a===\"first\")return!0;c=b;case\"last\":while(c=c.nextSibling)if(c.nodeType===1)return!1;return!0}}},PSEUDO:function(a,b,c,d){var e,g=f.pseudos[a]||f.pseudos[a.toLowerCase()];return g||$.error(\"unsupported pseudo: \"+a),g[o]?g(b,c,d):g.length>1?(e=[a,a,\"\",b],function(a){return g(a,0,e)}):g}},pseudos:{not:v(function(a,b,c){var d=j(a.replace(H,\"$1\"),b,c);return function(a){return!d(a)}}),enabled:function(a){return a.disabled===!1},disabled:function(a){return a.disabled===!0},checked:function(a){var b=a.nodeName.toLowerCase();return b===\"input\"&&!!a.checked||b===\"option\"&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},parent:function(a){return!f.pseudos.empty(a)},empty:function(a){var b;a=a.firstChild;while(a){if(a.nodeName>\"@\"||(b=a.nodeType)===3||b===4)return!1;a=a.nextSibling}return!0},contains:v(function(a){return function(b){return(b.textContent||b.innerText||g(b)).indexOf(a)>-1}}),has:v(function(a){return function(b){return $(a,b).length>0}}),header:function(a){return P.test(a.nodeName)},text:function(a){var b,c;return a.nodeName.toLowerCase()===\"input\"&&(b=a.type)===\"text\"&&((c=a.getAttribute(\"type\"))==null||c.toLowerCase()===b)},radio:_(\"radio\"),checkbox:_(\"checkbox\"),file:_(\"file\"),password:_(\"password\"),image:_(\"image\"),submit:ba(\"submit\"),reset:ba(\"reset\"),button:function(a){var b=a.nodeName.toLowerCase();return b===\"input\"&&a.type===\"button\"||b===\"button\"},input:function(a){return Q.test(a.nodeName)},focus:function(a){var b=a.ownerDocument;return a===b.activeElement&&(!b.hasFocus||b.hasFocus())&&(!!a.type||!!a.href)},active:function(a){return a===a.ownerDocument.activeElement}},setFilters:{first:function(a,b,c){return c?a.slice(1):[a[0]]},last:function(a,b,c){var d=a.pop();return c?a:[d]},even:function(a,b,c){var d=[],e=c?1:0,f=a.length;for(;e<f;e=e+2)d.push(a[e]);return d},odd:function(a,b,c){var d=[],e=c?0:1,f=a.length;for(;e<f;e=e+2)d.push(a[e]);return d},lt:function(a,b,c){return c?a.slice(+b):a.slice(0,+b)},gt:function(a,b,c){return c?a.slice(0,+b+1):a.slice(+b+1)},eq:function(a,b,c){var d=a.splice(+b,1);return c?a:d}}},k=r.compareDocumentPosition?function(a,b){return a===b?(l=!0,0):(!a.compareDocumentPosition||!b.compareDocumentPosition?a.compareDocumentPosition:a.compareDocumentPosition(b)&4)?-1:1}:function(a,b){if(a===b)return l=!0,0;if(a.sourceIndex&&b.sourceIndex)return a.sourceIndex-b.sourceIndex;var c,d,e=[],f=[],g=a.parentNode,h=b.parentNode,i=g;if(g===h)return bb(a,b);if(!g)return-1;if(!h)return 1;while(i)e.unshift(i),i=i.parentNode;i=h;while(i)f.unshift(i),i=i.parentNode;c=e.length,d=f.length;for(var j=0;j<c&&j<d;j++)if(e[j]!==f[j])return bb(e[j],f[j]);return j===c?bb(a,f[j],-1):bb(e[j],b,1)},[0,0].sort(k),m=!l,$.uniqueSort=function(a){var b,c=1;l=m,a.sort(k);if(l)for(;b=a[c];c++)b===a[c-1]&&a.splice(c--,1);return a},$.error=function(a){throw new Error(\"Syntax error, unrecognized expression: \"+a)},j=$.compile=function(a,b,c){var d,e,f,g=z[o][a];if(g&&g.context===b)return g;d=bc(a,b,c);for(e=0,f=d.length;e<f;e++)d[e]=bf(d[e],b,c);return g=z(a,bg(d)),g.context=b,g.runs=g.dirruns=0,g},q.querySelectorAll&&function(){var a,b=bk,c=/'|\\\\/g,d=/\\=[\\x20\\t\\r\\n\\f]*([^'\"\\]]*)[\\x20\\t\\r\\n\\f]*\\]/g,e=[],f=[\":active\"],g=r.matchesSelector||r.mozMatchesSelector||r.webkitMatchesSelector||r.oMatchesSelector||r.msMatchesSelector;T(function(a){a.innerHTML=\"<select><option selected=''></option></select>\",a.querySelectorAll(\"[selected]\").length||e.push(\"\\\\[\"+A+\"*(?:checked|disabled|ismap|multiple|readonly|selected|value)\"),a.querySelectorAll(\":checked\").length||e.push(\":checked\")}),T(function(a){a.innerHTML=\"<p test=''></p>\",a.querySelectorAll(\"[test^='']\").length&&e.push(\"[*^$]=\"+A+\"*(?:\\\"\\\"|'')\"),a.innerHTML=\"<input type='hidden'/>\",a.querySelectorAll(\":enabled\").length||e.push(\":enabled\",\":disabled\")}),e=e.length&&new RegExp(e.join(\"|\")),bk=function(a,d,f,g,h){if(!g&&!h&&(!e||!e.test(a)))if(d.nodeType===9)try{return u.apply(f,t.call(d.querySelectorAll(a),0)),f}catch(i){}else if(d.nodeType===1&&d.nodeName.toLowerCase()!==\"object\"){var j,k,l,m=d.getAttribute(\"id\"),n=m||o,p=N.test(a)&&d.parentNode||d;m?n=n.replace(c,\"\\\\$&\"):d.setAttribute(\"id\",n),j=bc(a,d,h),n=\"[id='\"+n+\"']\";for(k=0,l=j.length;k<l;k++)j[k]=n+j[k].selector;try{return u.apply(f,t.call(p.querySelectorAll(j.join(\",\")),0)),f}catch(i){}finally{m||d.removeAttribute(\"id\")}}return b(a,d,f,g,h)},g&&(T(function(b){a=g.call(b,\"div\");try{g.call(b,\"[test!='']:sizzle\"),f.push(S.PSEUDO.source,S.POS.source,\"!=\")}catch(c){}}),f=new RegExp(f.join(\"|\")),$.matchesSelector=function(b,c){c=c.replace(d,\"='$1']\");if(!h(b)&&!f.test(c)&&(!e||!e.test(c)))try{var i=g.call(b,c);if(i||a||b.document&&b.document.nodeType!==11)return i}catch(j){}return $(c,null,null,[b]).length>0})}(),f.setFilters.nth=f.setFilters.eq,f.filters=f.pseudos,$.attr=p.attr,p.find=$,p.expr=$.selectors,p.expr[\":\"]=p.expr.pseudos,p.unique=$.uniqueSort,p.text=$.getText,p.isXMLDoc=$.isXML,p.contains=$.contains}(a);var bc=/Until$/,bd=/^(?:parents|prev(?:Until|All))/,be=/^.[^:#\\[\\.,]*$/,bf=p.expr.match.needsContext,bg={children:!0,contents:!0,next:!0,prev:!0};p.fn.extend({find:function(a){var b,c,d,e,f,g,h=this;if(typeof a!=\"string\")return p(a).filter(function(){for(b=0,c=h.length;b<c;b++)if(p.contains(h[b],this))return!0});g=this.pushStack(\"\",\"find\",a);for(b=0,c=this.length;b<c;b++){d=g.length,p.find(a,this[b],g);if(b>0)for(e=d;e<g.length;e++)for(f=0;f<d;f++)if(g[f]===g[e]){g.splice(e--,1);break}}return g},has:function(a){var b,c=p(a,this),d=c.length;return this.filter(function(){for(b=0;b<d;b++)if(p.contains(this,c[b]))return!0})},not:function(a){return this.pushStack(bj(this,a,!1),\"not\",a)},filter:function(a){return this.pushStack(bj(this,a,!0),\"filter\",a)},is:function(a){return!!a&&(typeof a==\"string\"?bf.test(a)?p(a,this.context).index(this[0])>=0:p.filter(a,this).length>0:this.filter(a).length>0)},closest:function(a,b){var c,d=0,e=this.length,f=[],g=bf.test(a)||typeof a!=\"string\"?p(a,b||this.context):0;for(;d<e;d++){c=this[d];while(c&&c.ownerDocument&&c!==b&&c.nodeType!==11){if(g?g.index(c)>-1:p.find.matchesSelector(c,a)){f.push(c);break}c=c.parentNode}}return f=f.length>1?p.unique(f):f,this.pushStack(f,\"closest\",a)},index:function(a){return a?typeof a==\"string\"?p.inArray(this[0],p(a)):p.inArray(a.jquery?a[0]:a,this):this[0]&&this[0].parentNode?this.prevAll().length:-1},add:function(a,b){var c=typeof a==\"string\"?p(a,b):p.makeArray(a&&a.nodeType?[a]:a),d=p.merge(this.get(),c);return this.pushStack(bh(c[0])||bh(d[0])?d:p.unique(d))},addBack:function(a){return this.add(a==null?this.prevObject:this.prevObject.filter(a))}}),p.fn.andSelf=p.fn.addBack,p.each({parent:function(a){var b=a.parentNode;return b&&b.nodeType!==11?b:null},parents:function(a){return p.dir(a,\"parentNode\")},parentsUntil:function(a,b,c){return p.dir(a,\"parentNode\",c)},next:function(a){return bi(a,\"nextSibling\")},prev:function(a){return bi(a,\"previousSibling\")},nextAll:function(a){return p.dir(a,\"nextSibling\")},prevAll:function(a){return p.dir(a,\"previousSibling\")},nextUntil:function(a,b,c){return p.dir(a,\"nextSibling\",c)},prevUntil:function(a,b,c){return p.dir(a,\"previousSibling\",c)},siblings:function(a){return p.sibling((a.parentNode||{}).firstChild,a)},children:function(a){return p.sibling(a.firstChild)},contents:function(a){return p.nodeName(a,\"iframe\")?a.contentDocument||a.contentWindow.document:p.merge([],a.childNodes)}},function(a,b){p.fn[a]=function(c,d){var e=p.map(this,b,c);return bc.test(a)||(d=c),d&&typeof d==\"string\"&&(e=p.filter(d,e)),e=this.length>1&&!bg[a]?p.unique(e):e,this.length>1&&bd.test(a)&&(e=e.reverse()),this.pushStack(e,a,k.call(arguments).join(\",\"))}}),p.extend({filter:function(a,b,c){return c&&(a=\":not(\"+a+\")\"),b.length===1?p.find.matchesSelector(b[0],a)?[b[0]]:[]:p.find.matches(a,b)},dir:function(a,c,d){var e=[],f=a[c];while(f&&f.nodeType!==9&&(d===b||f.nodeType!==1||!p(f).is(d)))f.nodeType===1&&e.push(f),f=f[c];return e},sibling:function(a,b){var c=[];for(;a;a=a.nextSibling)a.nodeType===1&&a!==b&&c.push(a);return c}});var bl=\"abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video\",bm=/ jQuery\\d+=\"(?:null|\\d+)\"/g,bn=/^\\s+/,bo=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi,bp=/<([\\w:]+)/,bq=/<tbody/i,br=/<|&#?\\w+;/,bs=/<(?:script|style|link)/i,bt=/<(?:script|object|embed|option|style)/i,bu=new RegExp(\"<(?:\"+bl+\")[\\\\s/>]\",\"i\"),bv=/^(?:checkbox|radio)$/,bw=/checked\\s*(?:[^=]|=\\s*.checked.)/i,bx=/\\/(java|ecma)script/i,by=/^\\s*<!(?:\\[CDATA\\[|\\-\\-)|[\\]\\-]{2}>\\s*$/g,bz={option:[1,\"<select multiple='multiple'>\",\"</select>\"],legend:[1,\"<fieldset>\",\"</fieldset>\"],thead:[1,\"<table>\",\"</table>\"],tr:[2,\"<table><tbody>\",\"</tbody></table>\"],td:[3,\"<table><tbody><tr>\",\"</tr></tbody></table>\"],col:[2,\"<table><tbody></tbody><colgroup>\",\"</colgroup></table>\"],area:[1,\"<map>\",\"</map>\"],_default:[0,\"\",\"\"]},bA=bk(e),bB=bA.appendChild(e.createElement(\"div\"));bz.optgroup=bz.option,bz.tbody=bz.tfoot=bz.colgroup=bz.caption=bz.thead,bz.th=bz.td,p.support.htmlSerialize||(bz._default=[1,\"X<div>\",\"</div>\"]),p.fn.extend({text:function(a){return p.access(this,function(a){return a===b?p.text(this):this.empty().append((this[0]&&this[0].ownerDocument||e).createTextNode(a))},null,a,arguments.length)},wrapAll:function(a){if(p.isFunction(a))return this.each(function(b){p(this).wrapAll(a.call(this,b))});if(this[0]){var b=p(a,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstChild&&a.firstChild.nodeType===1)a=a.firstChild;return a}).append(this)}return this},wrapInner:function(a){return p.isFunction(a)?this.each(function(b){p(this).wrapInner(a.call(this,b))}):this.each(function(){var b=p(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=p.isFunction(a);return this.each(function(c){p(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return this.parent().each(function(){p.nodeName(this,\"body\")||p(this).replaceWith(this.childNodes)}).end()},append:function(){return this.domManip(arguments,!0,function(a){(this.nodeType===1||this.nodeType===11)&&this.appendChild(a)})},prepend:function(){return this.domManip(arguments,!0,function(a){(this.nodeType===1||this.nodeType===11)&&this.insertBefore(a,this.firstChild)})},before:function(){if(!bh(this[0]))return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this)});if(arguments.length){var a=p.clean(arguments);return this.pushStack(p.merge(a,this),\"before\",this.selector)}},after:function(){if(!bh(this[0]))return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this.nextSibling)});if(arguments.length){var a=p.clean(arguments);return this.pushStack(p.merge(this,a),\"after\",this.selector)}},remove:function(a,b){var c,d=0;for(;(c=this[d])!=null;d++)if(!a||p.filter(a,[c]).length)!b&&c.nodeType===1&&(p.cleanData(c.getElementsByTagName(\"*\")),p.cleanData([c])),c.parentNode&&c.parentNode.removeChild(c);return this},empty:function(){var a,b=0;for(;(a=this[b])!=null;b++){a.nodeType===1&&p.cleanData(a.getElementsByTagName(\"*\"));while(a.firstChild)a.removeChild(a.firstChild)}return this},clone:function(a,b){return a=a==null?!1:a,b=b==null?a:b,this.map(function(){return p.clone(this,a,b)})},html:function(a){return p.access(this,function(a){var c=this[0]||{},d=0,e=this.length;if(a===b)return c.nodeType===1?c.innerHTML.replace(bm,\"\"):b;if(typeof a==\"string\"&&!bs.test(a)&&(p.support.htmlSerialize||!bu.test(a))&&(p.support.leadingWhitespace||!bn.test(a))&&!bz[(bp.exec(a)||[\"\",\"\"])[1].toLowerCase()]){a=a.replace(bo,\"<$1></$2>\");try{for(;d<e;d++)c=this[d]||{},c.nodeType===1&&(p.cleanData(c.getElementsByTagName(\"*\")),c.innerHTML=a);c=0}catch(f){}}c&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(a){return bh(this[0])?this.length?this.pushStack(p(p.isFunction(a)?a():a),\"replaceWith\",a):this:p.isFunction(a)?this.each(function(b){var c=p(this),d=c.html();c.replaceWith(a.call(this,b,d))}):(typeof a!=\"string\"&&(a=p(a).detach()),this.each(function(){var b=this.nextSibling,c=this.parentNode;p(this).remove(),b?p(b).before(a):p(c).append(a)}))},detach:function(a){return this.remove(a,!0)},domManip:function(a,c,d){a=[].concat.apply([],a);var e,f,g,h,i=0,j=a[0],k=[],l=this.length;if(!p.support.checkClone&&l>1&&typeof j==\"string\"&&bw.test(j))return this.each(function(){p(this).domManip(a,c,d)});if(p.isFunction(j))return this.each(function(e){var f=p(this);a[0]=j.call(this,e,c?f.html():b),f.domManip(a,c,d)});if(this[0]){e=p.buildFragment(a,this,k),g=e.fragment,f=g.firstChild,g.childNodes.length===1&&(g=f);if(f){c=c&&p.nodeName(f,\"tr\");for(h=e.cacheable||l-1;i<l;i++)d.call(c&&p.nodeName(this[i],\"table\")?bC(this[i],\"tbody\"):this[i],i===h?g:p.clone(g,!0,!0))}g=f=null,k.length&&p.each(k,function(a,b){b.src?p.ajax?p.ajax({url:b.src,type:\"GET\",dataType:\"script\",async:!1,global:!1,\"throws\":!0}):p.error(\"no ajax\"):p.globalEval((b.text||b.textContent||b.innerHTML||\"\").replace(by,\"\")),b.parentNode&&b.parentNode.removeChild(b)})}return this}}),p.buildFragment=function(a,c,d){var f,g,h,i=a[0];return c=c||e,c=!c.nodeType&&c[0]||c,c=c.ownerDocument||c,a.length===1&&typeof i==\"string\"&&i.length<512&&c===e&&i.charAt(0)===\"<\"&&!bt.test(i)&&(p.support.checkClone||!bw.test(i))&&(p.support.html5Clone||!bu.test(i))&&(g=!0,f=p.fragments[i],h=f!==b),f||(f=c.createDocumentFragment(),p.clean(a,c,f,d),g&&(p.fragments[i]=h&&f)),{fragment:f,cacheable:g}},p.fragments={},p.each({appendTo:\"append\",prependTo:\"prepend\",insertBefore:\"before\",insertAfter:\"after\",replaceAll:\"replaceWith\"},function(a,b){p.fn[a]=function(c){var d,e=0,f=[],g=p(c),h=g.length,i=this.length===1&&this[0].parentNode;if((i==null||i&&i.nodeType===11&&i.childNodes.length===1)&&h===1)return g[b](this[0]),this;for(;e<h;e++)d=(e>0?this.clone(!0):this).get(),p(g[e])[b](d),f=f.concat(d);return this.pushStack(f,a,g.selector)}}),p.extend({clone:function(a,b,c){var d,e,f,g;p.support.html5Clone||p.isXMLDoc(a)||!bu.test(\"<\"+a.nodeName+\">\")?g=a.cloneNode(!0):(bB.innerHTML=a.outerHTML,bB.removeChild(g=bB.firstChild));if((!p.support.noCloneEvent||!p.support.noCloneChecked)&&(a.nodeType===1||a.nodeType===11)&&!p.isXMLDoc(a)){bE(a,g),d=bF(a),e=bF(g);for(f=0;d[f];++f)e[f]&&bE(d[f],e[f])}if(b){bD(a,g);if(c){d=bF(a),e=bF(g);for(f=0;d[f];++f)bD(d[f],e[f])}}return d=e=null,g},clean:function(a,b,c,d){var f,g,h,i,j,k,l,m,n,o,q,r,s=b===e&&bA,t=[];if(!b||typeof b.createDocumentFragment==\"undefined\")b=e;for(f=0;(h=a[f])!=null;f++){typeof h==\"number\"&&(h+=\"\");if(!h)continue;if(typeof h==\"string\")if(!br.test(h))h=b.createTextNode(h);else{s=s||bk(b),l=b.createElement(\"div\"),s.appendChild(l),h=h.replace(bo,\"<$1></$2>\"),i=(bp.exec(h)||[\"\",\"\"])[1].toLowerCase(),j=bz[i]||bz._default,k=j[0],l.innerHTML=j[1]+h+j[2];while(k--)l=l.lastChild;if(!p.support.tbody){m=bq.test(h),n=i===\"table\"&&!m?l.firstChild&&l.firstChild.childNodes:j[1]===\"<table>\"&&!m?l.childNodes:[];for(g=n.length-1;g>=0;--g)p.nodeName(n[g],\"tbody\")&&!n[g].childNodes.length&&n[g].parentNode.removeChild(n[g])}!p.support.leadingWhitespace&&bn.test(h)&&l.insertBefore(b.createTextNode(bn.exec(h)[0]),l.firstChild),h=l.childNodes,l.parentNode.removeChild(l)}h.nodeType?t.push(h):p.merge(t,h)}l&&(h=l=s=null);if(!p.support.appendChecked)for(f=0;(h=t[f])!=null;f++)p.nodeName(h,\"input\")?bG(h):typeof h.getElementsByTagName!=\"undefined\"&&p.grep(h.getElementsByTagName(\"input\"),bG);if(c){q=function(a){if(!a.type||bx.test(a.type))return d?d.push(a.parentNode?a.parentNode.removeChild(a):a):c.appendChild(a)};for(f=0;(h=t[f])!=null;f++)if(!p.nodeName(h,\"script\")||!q(h))c.appendChild(h),typeof h.getElementsByTagName!=\"undefined\"&&(r=p.grep(p.merge([],h.getElementsByTagName(\"script\")),q),t.splice.apply(t,[f+1,0].concat(r)),f+=r.length)}return t},cleanData:function(a,b){var c,d,e,f,g=0,h=p.expando,i=p.cache,j=p.support.deleteExpando,k=p.event.special;for(;(e=a[g])!=null;g++)if(b||p.acceptData(e)){d=e[h],c=d&&i[d];if(c){if(c.events)for(f in c.events)k[f]?p.event.remove(e,f):p.removeEvent(e,f,c.handle);i[d]&&(delete i[d],j?delete e[h]:e.removeAttribute?e.removeAttribute(h):e[h]=null,p.deletedIds.push(d))}}}}),function(){var a,b;p.uaMatch=function(a){a=a.toLowerCase();var b=/(chrome)[ \\/]([\\w.]+)/.exec(a)||/(webkit)[ \\/]([\\w.]+)/.exec(a)||/(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec(a)||/(msie) ([\\w.]+)/.exec(a)||a.indexOf(\"compatible\")<0&&/(mozilla)(?:.*? rv:([\\w.]+)|)/.exec(a)||[];return{browser:b[1]||\"\",version:b[2]||\"0\"}},a=p.uaMatch(g.userAgent),b={},a.browser&&(b[a.browser]=!0,b.version=a.version),b.chrome?b.webkit=!0:b.webkit&&(b.safari=!0),p.browser=b,p.sub=function(){function a(b,c){return new a.fn.init(b,c)}p.extend(!0,a,this),a.superclass=this,a.fn=a.prototype=this(),a.fn.constructor=a,a.sub=this.sub,a.fn.init=function c(c,d){return d&&d instanceof p&&!(d instanceof a)&&(d=a(d)),p.fn.init.call(this,c,d,b)},a.fn.init.prototype=a.fn;var b=a(e);return a}}();var bH,bI,bJ,bK=/alpha\\([^)]*\\)/i,bL=/opacity=([^)]*)/,bM=/^(top|right|bottom|left)$/,bN=/^(none|table(?!-c[ea]).+)/,bO=/^margin/,bP=new RegExp(\"^(\"+q+\")(.*)$\",\"i\"),bQ=new RegExp(\"^(\"+q+\")(?!px)[a-z%]+$\",\"i\"),bR=new RegExp(\"^([-+])=(\"+q+\")\",\"i\"),bS={},bT={position:\"absolute\",visibility:\"hidden\",display:\"block\"},bU={letterSpacing:0,fontWeight:400},bV=[\"Top\",\"Right\",\"Bottom\",\"Left\"],bW=[\"Webkit\",\"O\",\"Moz\",\"ms\"],bX=p.fn.toggle;p.fn.extend({css:function(a,c){return p.access(this,function(a,c,d){return d!==b?p.style(a,c,d):p.css(a,c)},a,c,arguments.length>1)},show:function(){return b$(this,!0)},hide:function(){return b$(this)},toggle:function(a,b){var c=typeof a==\"boolean\";return p.isFunction(a)&&p.isFunction(b)?bX.apply(this,arguments):this.each(function(){(c?a:bZ(this))?p(this).show():p(this).hide()})}}),p.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=bH(a,\"opacity\");return c===\"\"?\"1\":c}}}},cssNumber:{fillOpacity:!0,fontWeight:!0,lineHeight:!0,opacity:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{\"float\":p.support.cssFloat?\"cssFloat\":\"styleFloat\"},style:function(a,c,d,e){if(!a||a.nodeType===3||a.nodeType===8||!a.style)return;var f,g,h,i=p.camelCase(c),j=a.style;c=p.cssProps[i]||(p.cssProps[i]=bY(j,i)),h=p.cssHooks[c]||p.cssHooks[i];if(d===b)return h&&\"get\"in h&&(f=h.get(a,!1,e))!==b?f:j[c];g=typeof d,g===\"string\"&&(f=bR.exec(d))&&(d=(f[1]+1)*f[2]+parseFloat(p.css(a,c)),g=\"number\");if(d==null||g===\"number\"&&isNaN(d))return;g===\"number\"&&!p.cssNumber[i]&&(d+=\"px\");if(!h||!(\"set\"in h)||(d=h.set(a,d,e))!==b)try{j[c]=d}catch(k){}},css:function(a,c,d,e){var f,g,h,i=p.camelCase(c);return c=p.cssProps[i]||(p.cssProps[i]=bY(a.style,i)),h=p.cssHooks[c]||p.cssHooks[i],h&&\"get\"in h&&(f=h.get(a,!0,e)),f===b&&(f=bH(a,c)),f===\"normal\"&&c in bU&&(f=bU[c]),d||e!==b?(g=parseFloat(f),d||p.isNumeric(g)?g||0:f):f},swap:function(a,b,c){var d,e,f={};for(e in b)f[e]=a.style[e],a.style[e]=b[e];d=c.call(a);for(e in b)a.style[e]=f[e];return d}}),a.getComputedStyle?bH=function(b,c){var d,e,f,g,h=a.getComputedStyle(b,null),i=b.style;return h&&(d=h[c],d===\"\"&&!p.contains(b.ownerDocument,b)&&(d=p.style(b,c)),bQ.test(d)&&bO.test(c)&&(e=i.width,f=i.minWidth,g=i.maxWidth,i.minWidth=i.maxWidth=i.width=d,d=h.width,i.width=e,i.minWidth=f,i.maxWidth=g)),d}:e.documentElement.currentStyle&&(bH=function(a,b){var c,d,e=a.currentStyle&&a.currentStyle[b],f=a.style;return e==null&&f&&f[b]&&(e=f[b]),bQ.test(e)&&!bM.test(b)&&(c=f.left,d=a.runtimeStyle&&a.runtimeStyle.left,d&&(a.runtimeStyle.left=a.currentStyle.left),f.left=b===\"fontSize\"?\"1em\":e,e=f.pixelLeft+\"px\",f.left=c,d&&(a.runtimeStyle.left=d)),e===\"\"?\"auto\":e}),p.each([\"height\",\"width\"],function(a,b){p.cssHooks[b]={get:function(a,c,d){if(c)return a.offsetWidth===0&&bN.test(bH(a,\"display\"))?p.swap(a,bT,function(){return cb(a,b,d)}):cb(a,b,d)},set:function(a,c,d){return b_(a,c,d?ca(a,b,d,p.support.boxSizing&&p.css(a,\"boxSizing\")===\"border-box\"):0)}}}),p.support.opacity||(p.cssHooks.opacity={get:function(a,b){return bL.test((b&&a.currentStyle?a.currentStyle.filter:a.style.filter)||\"\")?.01*parseFloat(RegExp.$1)+\"\":b?\"1\":\"\"},set:function(a,b){var c=a.style,d=a.currentStyle,e=p.isNumeric(b)?\"alpha(opacity=\"+b*100+\")\":\"\",f=d&&d.filter||c.filter||\"\";c.zoom=1;if(b>=1&&p.trim(f.replace(bK,\"\"))===\"\"&&c.removeAttribute){c.removeAttribute(\"filter\");if(d&&!d.filter)return}c.filter=bK.test(f)?f.replace(bK,e):f+\" \"+e}}),p(function(){p.support.reliableMarginRight||(p.cssHooks.marginRight={get:function(a,b){return p.swap(a,{display:\"inline-block\"},function(){if(b)return bH(a,\"marginRight\")})}}),!p.support.pixelPosition&&p.fn.position&&p.each([\"top\",\"left\"],function(a,b){p.cssHooks[b]={get:function(a,c){if(c){var d=bH(a,b);return bQ.test(d)?p(a).position()[b]+\"px\":d}}}})}),p.expr&&p.expr.filters&&(p.expr.filters.hidden=function(a){return a.offsetWidth===0&&a.offsetHeight===0||!p.support.reliableHiddenOffsets&&(a.style&&a.style.display||bH(a,\"display\"))===\"none\"},p.expr.filters.visible=function(a){return!p.expr.filters.hidden(a)}),p.each({margin:\"\",padding:\"\",border:\"Width\"},function(a,b){p.cssHooks[a+b]={expand:function(c){var d,e=typeof c==\"string\"?c.split(\" \"):[c],f={};for(d=0;d<4;d++)f[a+bV[d]+b]=e[d]||e[d-2]||e[0];return f}},bO.test(a)||(p.cssHooks[a+b].set=b_)});var cd=/%20/g,ce=/\\[\\]$/,cf=/\\r?\\n/g,cg=/^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,ch=/^(?:select|textarea)/i;p.fn.extend({serialize:function(){return p.param(this.serializeArray())},serializeArray:function(){return this.map(function(){return this.elements?p.makeArray(this.elements):this}).filter(function(){return this.name&&!this.disabled&&(this.checked||ch.test(this.nodeName)||cg.test(this.type))}).map(function(a,b){var c=p(this).val();return c==null?null:p.isArray(c)?p.map(c,function(a,c){return{name:b.name,value:a.replace(cf,\"\\r\\n\")}}):{name:b.name,value:c.replace(cf,\"\\r\\n\")}}).get()}}),p.param=function(a,c){var d,e=[],f=function(a,b){b=p.isFunction(b)?b():b==null?\"\":b,e[e.length]=encodeURIComponent(a)+\"=\"+encodeURIComponent(b)};c===b&&(c=p.ajaxSettings&&p.ajaxSettings.traditional);if(p.isArray(a)||a.jquery&&!p.isPlainObject(a))p.each(a,function(){f(this.name,this.value)});else for(d in a)ci(d,a[d],c,f);return e.join(\"&\").replace(cd,\"+\")};var cj,ck,cl=/#.*$/,cm=/^(.*?):[ \\t]*([^\\r\\n]*)\\r?$/mg,cn=/^(?:about|app|app\\-storage|.+\\-extension|file|res|widget):$/,co=/^(?:GET|HEAD)$/,cp=/^\\/\\//,cq=/\\?/,cr=/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,cs=/([?&])_=[^&]*/,ct=/^([\\w\\+\\.\\-]+:)(?:\\/\\/([^\\/?#:]*)(?::(\\d+)|)|)/,cu=p.fn.load,cv={},cw={},cx=[\"*/\"]+[\"*\"];try{cj=f.href}catch(cy){cj=e.createElement(\"a\"),cj.href=\"\",cj=cj.href}ck=ct.exec(cj.toLowerCase())||[],p.fn.load=function(a,c,d){if(typeof a!=\"string\"&&cu)return cu.apply(this,arguments);if(!this.length)return this;var e,f,g,h=this,i=a.indexOf(\" \");return i>=0&&(e=a.slice(i,a.length),a=a.slice(0,i)),p.isFunction(c)?(d=c,c=b):c&&typeof c==\"object\"&&(f=\"POST\"),p.ajax({url:a,type:f,dataType:\"html\",data:c,complete:function(a,b){d&&h.each(d,g||[a.responseText,b,a])}}).done(function(a){g=arguments,h.html(e?p(\"<div>\").append(a.replace(cr,\"\")).find(e):a)}),this},p.each(\"ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend\".split(\" \"),function(a,b){p.fn[b]=function(a){return this.on(b,a)}}),p.each([\"get\",\"post\"],function(a,c){p[c]=function(a,d,e,f){return p.isFunction(d)&&(f=f||e,e=d,d=b),p.ajax({type:c,url:a,data:d,success:e,dataType:f})}}),p.extend({getScript:function(a,c){return p.get(a,b,c,\"script\")},getJSON:function(a,b,c){return p.get(a,b,c,\"json\")},ajaxSetup:function(a,b){return b?cB(a,p.ajaxSettings):(b=a,a=p.ajaxSettings),cB(a,b),a},ajaxSettings:{url:cj,isLocal:cn.test(ck[1]),global:!0,type:\"GET\",contentType:\"application/x-www-form-urlencoded; charset=UTF-8\",processData:!0,async:!0,accepts:{xml:\"application/xml, text/xml\",html:\"text/html\",text:\"text/plain\",json:\"application/json, text/javascript\",\"*\":cx},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:\"responseXML\",text:\"responseText\"},converters:{\"* text\":a.String,\"text html\":!0,\"text json\":p.parseJSON,\"text xml\":p.parseXML},flatOptions:{context:!0,url:!0}},ajaxPrefilter:cz(cv),ajaxTransport:cz(cw),ajax:function(a,c){function y(a,c,f,i){var k,s,t,u,w,y=c;if(v===2)return;v=2,h&&clearTimeout(h),g=b,e=i||\"\",x.readyState=a>0?4:0,f&&(u=cC(l,x,f));if(a>=200&&a<300||a===304)l.ifModified&&(w=x.getResponseHeader(\"Last-Modified\"),w&&(p.lastModified[d]=w),w=x.getResponseHeader(\"Etag\"),w&&(p.etag[d]=w)),a===304?(y=\"notmodified\",k=!0):(k=cD(l,u),y=k.state,s=k.data,t=k.error,k=!t);else{t=y;if(!y||a)y=\"error\",a<0&&(a=0)}x.status=a,x.statusText=\"\"+(c||y),k?o.resolveWith(m,[s,y,x]):o.rejectWith(m,[x,y,t]),x.statusCode(r),r=b,j&&n.trigger(\"ajax\"+(k?\"Success\":\"Error\"),[x,l,k?s:t]),q.fireWith(m,[x,y]),j&&(n.trigger(\"ajaxComplete\",[x,l]),--p.active||p.event.trigger(\"ajaxStop\"))}typeof a==\"object\"&&(c=a,a=b),c=c||{};var d,e,f,g,h,i,j,k,l=p.ajaxSetup({},c),m=l.context||l,n=m!==l&&(m.nodeType||m instanceof p)?p(m):p.event,o=p.Deferred(),q=p.Callbacks(\"once memory\"),r=l.statusCode||{},t={},u={},v=0,w=\"canceled\",x={readyState:0,setRequestHeader:function(a,b){if(!v){var c=a.toLowerCase();a=u[c]=u[c]||a,t[a]=b}return this},getAllResponseHeaders:function(){return v===2?e:null},getResponseHeader:function(a){var c;if(v===2){if(!f){f={};while(c=cm.exec(e))f[c[1].toLowerCase()]=c[2]}c=f[a.toLowerCase()]}return c===b?null:c},overrideMimeType:function(a){return v||(l.mimeType=a),this},abort:function(a){return a=a||w,g&&g.abort(a),y(0,a),this}};o.promise(x),x.success=x.done,x.error=x.fail,x.complete=q.add,x.statusCode=function(a){if(a){var b;if(v<2)for(b in a)r[b]=[r[b],a[b]];else b=a[x.status],x.always(b)}return this},l.url=((a||l.url)+\"\").replace(cl,\"\").replace(cp,ck[1]+\"//\"),l.dataTypes=p.trim(l.dataType||\"*\").toLowerCase().split(s),l.crossDomain==null&&(i=ct.exec(l.url.toLowerCase()),l.crossDomain=!(!i||i[1]==ck[1]&&i[2]==ck[2]&&(i[3]||(i[1]===\"http:\"?80:443))==(ck[3]||(ck[1]===\"http:\"?80:443)))),l.data&&l.processData&&typeof l.data!=\"string\"&&(l.data=p.param(l.data,l.traditional)),cA(cv,l,c,x);if(v===2)return x;j=l.global,l.type=l.type.toUpperCase(),l.hasContent=!co.test(l.type),j&&p.active++===0&&p.event.trigger(\"ajaxStart\");if(!l.hasContent){l.data&&(l.url+=(cq.test(l.url)?\"&\":\"?\")+l.data,delete l.data),d=l.url;if(l.cache===!1){var z=p.now(),A=l.url.replace(cs,\"$1_=\"+z);l.url=A+(A===l.url?(cq.test(l.url)?\"&\":\"?\")+\"_=\"+z:\"\")}}(l.data&&l.hasContent&&l.contentType!==!1||c.contentType)&&x.setRequestHeader(\"Content-Type\",l.contentType),l.ifModified&&(d=d||l.url,p.lastModified[d]&&x.setRequestHeader(\"If-Modified-Since\",p.lastModified[d]),p.etag[d]&&x.setRequestHeader(\"If-None-Match\",p.etag[d])),x.setRequestHeader(\"Accept\",l.dataTypes[0]&&l.accepts[l.dataTypes[0]]?l.accepts[l.dataTypes[0]]+(l.dataTypes[0]!==\"*\"?\", \"+cx+\"; q=0.01\":\"\"):l.accepts[\"*\"]);for(k in l.headers)x.setRequestHeader(k,l.headers[k]);if(!l.beforeSend||l.beforeSend.call(m,x,l)!==!1&&v!==2){w=\"abort\";for(k in{success:1,error:1,complete:1})x[k](l[k]);g=cA(cw,l,c,x);if(!g)y(-1,\"No Transport\");else{x.readyState=1,j&&n.trigger(\"ajaxSend\",[x,l]),l.async&&l.timeout>0&&(h=setTimeout(function(){x.abort(\"timeout\")},l.timeout));try{v=1,g.send(t,y)}catch(B){if(v<2)y(-1,B);else throw B}}return x}return x.abort()},active:0,lastModified:{},etag:{}});var cE=[],cF=/\\?/,cG=/(=)\\?(?=&|$)|\\?\\?/,cH=p.now();p.ajaxSetup({jsonp:\"callback\",jsonpCallback:function(){var a=cE.pop()||p.expando+\"_\"+cH++;return this[a]=!0,a}}),p.ajaxPrefilter(\"json jsonp\",function(c,d,e){var f,g,h,i=c.data,j=c.url,k=c.jsonp!==!1,l=k&&cG.test(j),m=k&&!l&&typeof i==\"string\"&&!(c.contentType||\"\").indexOf(\"application/x-www-form-urlencoded\")&&cG.test(i);if(c.dataTypes[0]===\"jsonp\"||l||m)return f=c.jsonpCallback=p.isFunction(c.jsonpCallback)?c.jsonpCallback():c.jsonpCallback,g=a[f],l?c.url=j.replace(cG,\"$1\"+f):m?c.data=i.replace(cG,\"$1\"+f):k&&(c.url+=(cF.test(j)?\"&\":\"?\")+c.jsonp+\"=\"+f),c.converters[\"script json\"]=function(){return h||p.error(f+\" was not called\"),h[0]},c.dataTypes[0]=\"json\",a[f]=function(){h=arguments},e.always(function(){a[f]=g,c[f]&&(c.jsonpCallback=d.jsonpCallback,cE.push(f)),h&&p.isFunction(g)&&g(h[0]),h=g=b}),\"script\"}),p.ajaxSetup({accepts:{script:\"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"},contents:{script:/javascript|ecmascript/},converters:{\"text script\":function(a){return p.globalEval(a),a}}}),p.ajaxPrefilter(\"script\",function(a){a.cache===b&&(a.cache=!1),a.crossDomain&&(a.type=\"GET\",a.global=!1)}),p.ajaxTransport(\"script\",function(a){if(a.crossDomain){var c,d=e.head||e.getElementsByTagName(\"head\")[0]||e.documentElement;return{send:function(f,g){c=e.createElement(\"script\"),c.async=\"async\",a.scriptCharset&&(c.charset=a.scriptCharset),c.src=a.url,c.onload=c.onreadystatechange=function(a,e){if(e||!c.readyState||/loaded|complete/.test(c.readyState))c.onload=c.onreadystatechange=null,d&&c.parentNode&&d.removeChild(c),c=b,e||g(200,\"success\")},d.insertBefore(c,d.firstChild)},abort:function(){c&&c.onload(0,1)}}}});var cI,cJ=a.ActiveXObject?function(){for(var a in cI)cI[a](0,1)}:!1,cK=0;p.ajaxSettings.xhr=a.ActiveXObject?function(){return!this.isLocal&&cL()||cM()}:cL,function(a){p.extend(p.support,{ajax:!!a,cors:!!a&&\"withCredentials\"in a})}(p.ajaxSettings.xhr()),p.support.ajax&&p.ajaxTransport(function(c){if(!c.crossDomain||p.support.cors){var d;return{send:function(e,f){var g,h,i=c.xhr();c.username?i.open(c.type,c.url,c.async,c.username,c.password):i.open(c.type,c.url,c.async);if(c.xhrFields)for(h in c.xhrFields)i[h]=c.xhrFields[h];c.mimeType&&i.overrideMimeType&&i.overrideMimeType(c.mimeType),!c.crossDomain&&!e[\"X-Requested-With\"]&&(e[\"X-Requested-With\"]=\"XMLHttpRequest\");try{for(h in e)i.setRequestHeader(h,e[h])}catch(j){}i.send(c.hasContent&&c.data||null),d=function(a,e){var h,j,k,l,m;try{if(d&&(e||i.readyState===4)){d=b,g&&(i.onreadystatechange=p.noop,cJ&&delete cI[g]);if(e)i.readyState!==4&&i.abort();else{h=i.status,k=i.getAllResponseHeaders(),l={},m=i.responseXML,m&&m.documentElement&&(l.xml=m);try{l.text=i.responseText}catch(a){}try{j=i.statusText}catch(n){j=\"\"}!h&&c.isLocal&&!c.crossDomain?h=l.text?200:404:h===1223&&(h=204)}}}catch(o){e||f(-1,o)}l&&f(h,j,l,k)},c.async?i.readyState===4?setTimeout(d,0):(g=++cK,cJ&&(cI||(cI={},p(a).unload(cJ)),cI[g]=d),i.onreadystatechange=d):d()},abort:function(){d&&d(0,1)}}}});var cN,cO,cP=/^(?:toggle|show|hide)$/,cQ=new RegExp(\"^(?:([-+])=|)(\"+q+\")([a-z%]*)$\",\"i\"),cR=/queueHooks$/,cS=[cY],cT={\"*\":[function(a,b){var c,d,e,f=this.createTween(a,b),g=cQ.exec(b),h=f.cur(),i=+h||0,j=1;if(g){c=+g[2],d=g[3]||(p.cssNumber[a]?\"\":\"px\");if(d!==\"px\"&&i){i=p.css(f.elem,a,!0)||c||1;do e=j=j||\".5\",i=i/j,p.style(f.elem,a,i+d),j=f.cur()/h;while(j!==1&&j!==e)}f.unit=d,f.start=i,f.end=g[1]?i+(g[1]+1)*c:c}return f}]};p.Animation=p.extend(cW,{tweener:function(a,b){p.isFunction(a)?(b=a,a=[\"*\"]):a=a.split(\" \");var c,d=0,e=a.length;for(;d<e;d++)c=a[d],cT[c]=cT[c]||[],cT[c].unshift(b)},prefilter:function(a,b){b?cS.unshift(a):cS.push(a)}}),p.Tween=cZ,cZ.prototype={constructor:cZ,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||\"swing\",this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(p.cssNumber[c]?\"\":\"px\")},cur:function(){var a=cZ.propHooks[this.prop];return a&&a.get?a.get(this):cZ.propHooks._default.get(this)},run:function(a){var b,c=cZ.propHooks[this.prop];return this.options.duration?this.pos=b=p.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):this.pos=b=a,this.now=(this.end-this.start)*b+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),c&&c.set?c.set(this):cZ.propHooks._default.set(this),this}},cZ.prototype.init.prototype=cZ.prototype,cZ.propHooks={_default:{get:function(a){var b;return a.elem[a.prop]==null||!!a.elem.style&&a.elem.style[a.prop]!=null?(b=p.css(a.elem,a.prop,!1,\"\"),!b||b===\"auto\"?0:b):a.elem[a.prop]},set:function(a){p.fx.step[a.prop]?p.fx.step[a.prop](a):a.elem.style&&(a.elem.style[p.cssProps[a.prop]]!=null||p.cssHooks[a.prop])?p.style(a.elem,a.prop,a.now+a.unit):a.elem[a.prop]=a.now}}},cZ.propHooks.scrollTop=cZ.propHooks.scrollLeft={set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.elem[a.prop]=a.now)}},p.each([\"toggle\",\"show\",\"hide\"],function(a,b){var c=p.fn[b];p.fn[b]=function(d,e,f){return d==null||typeof d==\"boolean\"||!a&&p.isFunction(d)&&p.isFunction(e)?c.apply(this,arguments):this.animate(c$(b,!0),d,e,f)}}),p.fn.extend({fadeTo:function(a,b,c,d){return this.filter(bZ).css(\"opacity\",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=p.isEmptyObject(a),f=p.speed(b,c,d),g=function(){var b=cW(this,p.extend({},a),f);e&&b.stop(!0)};return e||f.queue===!1?this.each(g):this.queue(f.queue,g)},stop:function(a,c,d){var e=function(a){var b=a.stop;delete a.stop,b(d)};return typeof a!=\"string\"&&(d=c,c=a,a=b),c&&a!==!1&&this.queue(a||\"fx\",[]),this.each(function(){var b=!0,c=a!=null&&a+\"queueHooks\",f=p.timers,g=p._data(this);if(c)g[c]&&g[c].stop&&e(g[c]);else for(c in g)g[c]&&g[c].stop&&cR.test(c)&&e(g[c]);for(c=f.length;c--;)f[c].elem===this&&(a==null||f[c].queue===a)&&(f[c].anim.stop(d),b=!1,f.splice(c,1));(b||!d)&&p.dequeue(this,a)})}}),p.each({slideDown:c$(\"show\"),slideUp:c$(\"hide\"),slideToggle:c$(\"toggle\"),fadeIn:{opacity:\"show\"},fadeOut:{opacity:\"hide\"},fadeToggle:{opacity:\"toggle\"}},function(a,b){p.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),p.speed=function(a,b,c){var d=a&&typeof a==\"object\"?p.extend({},a):{complete:c||!c&&b||p.isFunction(a)&&a,duration:a,easing:c&&b||b&&!p.isFunction(b)&&b};d.duration=p.fx.off?0:typeof d.duration==\"number\"?d.duration:d.duration in p.fx.speeds?p.fx.speeds[d.duration]:p.fx.speeds._default;if(d.queue==null||d.queue===!0)d.queue=\"fx\";return d.old=d.complete,d.complete=function(){p.isFunction(d.old)&&d.old.call(this),d.queue&&p.dequeue(this,d.queue)},d},p.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2}},p.timers=[],p.fx=cZ.prototype.init,p.fx.tick=function(){var a,b=p.timers,c=0;for(;c<b.length;c++)a=b[c],!a()&&b[c]===a&&b.splice(c--,1);b.length||p.fx.stop()},p.fx.timer=function(a){a()&&p.timers.push(a)&&!cO&&(cO=setInterval(p.fx.tick,p.fx.interval))},p.fx.interval=13,p.fx.stop=function(){clearInterval(cO),cO=null},p.fx.speeds={slow:600,fast:200,_default:400},p.fx.step={},p.expr&&p.expr.filters&&(p.expr.filters.animated=function(a){return p.grep(p.timers,function(b){return a===b.elem}).length});var c_=/^(?:body|html)$/i;p.fn.offset=function(a){if(arguments.length)return a===b?this:this.each(function(b){p.offset.setOffset(this,a,b)});var c,d,e,f,g,h,i,j,k,l,m=this[0],n=m&&m.ownerDocument;if(!n)return;return(e=n.body)===m?p.offset.bodyOffset(m):(d=n.documentElement,p.contains(d,m)?(c=m.getBoundingClientRect(),f=da(n),g=d.clientTop||e.clientTop||0,h=d.clientLeft||e.clientLeft||0,i=f.pageYOffset||d.scrollTop,j=f.pageXOffset||d.scrollLeft,k=c.top+i-g,l=c.left+j-h,{top:k,left:l}):{top:0,left:0})},p.offset={bodyOffset:function(a){var b=a.offsetTop,c=a.offsetLeft;return p.support.doesNotIncludeMarginInBodyOffset&&(b+=parseFloat(p.css(a,\"marginTop\"))||0,c+=parseFloat(p.css(a,\"marginLeft\"))||0),{top:b,left:c}},setOffset:function(a,b,c){var d=p.css(a,\"position\");d===\"static\"&&(a.style.position=\"relative\");var e=p(a),f=e.offset(),g=p.css(a,\"top\"),h=p.css(a,\"left\"),i=(d===\"absolute\"||d===\"fixed\")&&p.inArray(\"auto\",[g,h])>-1,j={},k={},l,m;i?(k=e.position(),l=k.top,m=k.left):(l=parseFloat(g)||0,m=parseFloat(h)||0),p.isFunction(b)&&(b=b.call(a,c,f)),b.top!=null&&(j.top=b.top-f.top+l),b.left!=null&&(j.left=b.left-f.left+m),\"using\"in b?b.using.call(a,j):e.css(j)}},p.fn.extend({position:function(){if(!this[0])return;var a=this[0],b=this.offsetParent(),c=this.offset(),d=c_.test(b[0].nodeName)?{top:0,left:0}:b.offset();return c.top-=parseFloat(p.css(a,\"marginTop\"))||0,c.left-=parseFloat(p.css(a,\"marginLeft\"))||0,d.top+=parseFloat(p.css(b[0],\"borderTopWidth\"))||0,d.left+=parseFloat(p.css(b[0],\"borderLeftWidth\"))||0,{top:c.top-d.top,left:c.left-d.left}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||e.body;while(a&&!c_.test(a.nodeName)&&p.css(a,\"position\")===\"static\")a=a.offsetParent;return a||e.body})}}),p.each({scrollLeft:\"pageXOffset\",scrollTop:\"pageYOffset\"},function(a,c){var d=/Y/.test(c);p.fn[a]=function(e){return p.access(this,function(a,e,f){var g=da(a);if(f===b)return g?c in g?g[c]:g.document.documentElement[e]:a[e];g?g.scrollTo(d?p(g).scrollLeft():f,d?f:p(g).scrollTop()):a[e]=f},a,e,arguments.length,null)}}),p.each({Height:\"height\",Width:\"width\"},function(a,c){p.each({padding:\"inner\"+a,content:c,\"\":\"outer\"+a},function(d,e){p.fn[e]=function(e,f){var g=arguments.length&&(d||typeof e!=\"boolean\"),h=d||(e===!0||f===!0?\"margin\":\"border\");return p.access(this,function(c,d,e){var f;return p.isWindow(c)?c.document.documentElement[\"client\"+a]:c.nodeType===9?(f=c.documentElement,Math.max(c.body[\"scroll\"+a],f[\"scroll\"+a],c.body[\"offset\"+a],f[\"offset\"+a],f[\"client\"+a])):e===b?p.css(c,d,e,h):p.style(c,d,e,h)},c,g?e:b,g,null)}})}),a.jQuery=a.$=p,typeof define==\"function\"&&define.amd&&define.amd.jQuery&&define(\"jquery\",[],function(){return p})})(window);\n\n/Users/sopae/Projects/AkinsParker/web/js/tests/vendor/qunit.css:\n  218  }\n  219  \n  220: /** Fixture */\n  221  \n  222: #qunit-fixture {\n  223  	position: absolute;\n  224  	top: -10000px;\n  ...\n  228  /** Runoff */\n  229  \n  230: #qunit-fixture {\n  231    display:none;\n  232  }\n\n/Users/sopae/Projects/AkinsParker/web/js/tests/vendor/qunit.js:\n  543  	reset: function() {\n  544  		if ( window.jQuery ) {\n  545: 			jQuery( \"#qunit-fixture\" ).html( config.fixture );\n  546  		} else {\n  547: 			var main = id( 'qunit-fixture' );\n  548  			if ( main ) {\n  549: 				main.innerHTML = config.fixture;\n  550  			}\n  551  		}\n  ...\n  745  	}\n  746  \n  747: 	var main = id('qunit-fixture');\n  748  	if ( main ) {\n  749: 		config.fixture = main.innerHTML;\n  750  	}\n  751  \n  ...\n  837  \n  838  // so far supports only Firefox, Chrome and Opera (buggy)\n  839: // could be extended in the future to use something like https://github.com/csnover/TraceKit\n  840  function sourceFromStacktrace() {\n  841  	try {\n\n1296 matches across 420 files\n\n\nSearching 5210 files for \"ture\" (regex, case sensitive, whole word)\n\n/Users/sopae/Projects/AkinsParker/src/Swim/Form/Type/GroupDetailSignupType.php:\n   30                      array('All', 'Some', 'None')),\n   31                  'label' => 'I prefer to fill ___________ of the available spots in my group',\n   32:                 'expanded' => ture\n   33                  ))\n   34              ->add('addition', 'choice', array(\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/intl/Resources/data/languages/cs.json:\n  106          \"cps\": \"kapiznonština\",\n  107          \"cr\": \"kríjština\",\n  108:         \"crh\": \"turečtina (krymská)\",\n  109          \"cs\": \"čeština\",\n  110          \"csb\": \"kašubština\",\n  ...\n  404          \"os\": \"osetština\",\n  405          \"osa\": \"osage\",\n  406:         \"ota\": \"turečtina (osmanská)\",\n  407          \"pa\": \"paňdžábština\",\n  408          \"pag\": \"pangasinanština\",\n  ...\n  534          \"tog\": \"tonžština (nyasa)\",\n  535          \"tpi\": \"tok pisin\",\n  536:         \"tr\": \"turečtina\",\n  537          \"tru\": \"turojština\",\n  538          \"trv\": \"taroko\",\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/intl/Resources/data/languages/sk.json:\n   87          \"cop\": \"koptčina\",\n   88          \"cr\": \"krí\",\n   89:         \"crh\": \"krymská turečtina\",\n   90          \"cs\": \"čeština\",\n   91          \"csb\": \"kašubčina\",\n   ..\n  355          \"os\": \"osetčina\",\n  356          \"osa\": \"osagčina\",\n  357:         \"ota\": \"osmanská turečtina\",\n  358          \"pa\": \"pandžábčina\",\n  359          \"pag\": \"pangasinančina\",\n  ...\n  463          \"tog\": \"ňasa tonga\",\n  464          \"tpi\": \"tok pisin\",\n  465:         \"tr\": \"turečtina\",\n  466          \"trv\": \"taroko\",\n  467          \"ts\": \"tsonga\",\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/intl/Resources/data/locales/cs.json:\n  520          \"to\": \"tongánština\",\n  521          \"to_TO\": \"tongánština (Tonga)\",\n  522:         \"tr\": \"turečtina\",\n  523:         \"tr_CY\": \"turečtina (Kypr)\",\n  524:         \"tr_TR\": \"turečtina (Turecko)\",\n  525          \"ug\": \"ujgurština\",\n  526          \"ug_Arab\": \"ujgurština (arabské)\",\n\n/Users/sopae/Projects/AkinsParker/vendor/symfony/intl/Resources/data/locales/sk.json:\n  520          \"to\": \"tongčina\",\n  521          \"to_TO\": \"tongčina (Tonga)\",\n  522:         \"tr\": \"turečtina\",\n  523:         \"tr_CY\": \"turečtina (Cyprus)\",\n  524:         \"tr_TR\": \"turečtina (Turecko)\",\n  525          \"ug\": \"ujgurčina\",\n  526          \"ug_Arab\": \"ujgurčina (arabské)\",\n\n13 matches across 5 files\n",
			"settings":
			{
				"buffer_size": 382371,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "web/css/formsmain.min.css",
			"settings":
			{
				"buffer_size": 64659,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/views/login.html.twig",
			"settings":
			{
				"buffer_size": 556,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/views/thankyou.html.twig",
			"settings":
			{
				"buffer_size": 184,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/views/form.signup.html.twig",
			"settings":
			{
				"buffer_size": 946,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Swim/Controller/UserController.php",
			"settings":
			{
				"buffer_size": 1903,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Swim/Form/Type/UserType.php",
			"settings":
			{
				"buffer_size": 2164,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Swim/Entity/User.php",
			"settings":
			{
				"buffer_size": 4775,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/views/form.signup.groupcode.html.twig",
			"settings":
			{
				"buffer_size": 566,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Swim/Form/Type/HostRegistrationType.php",
			"settings":
			{
				"buffer_size": 2465,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Swim/Form/Type/AddressType.php",
			"settings":
			{
				"buffer_size": 1259,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Swim/Form/Type/PoolType.php",
			"settings":
			{
				"buffer_size": 1312,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Swim/Form/Type/PaymentType.php",
			"settings":
			{
				"buffer_size": 2864,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Swim/Entity/Payment.php",
			"settings":
			{
				"buffer_size": 329,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Swim/Form/Type/StudentType.php",
			"settings":
			{
				"buffer_size": 2054,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Swim/Form/Type/StudentPreferenceType.php",
			"settings":
			{
				"buffer_size": 1542,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/config/dev.php",
			"settings":
			{
				"buffer_size": 214,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/config/prod.php",
			"settings":
			{
				"buffer_size": 848,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "<div id=\"content\">\n\n        <div class=\"wrap cf\">\n\n            <main id=\"main\" class=\"m-all t-all d-all cf\" role=\"main\" itemscope itemprop=\"mainContentOfPage\" itemtype=\"http://schema.org/Blog\">\n\n              \n              <article id=\"post-38\" class=\"cf post-38 page type-page status-publish hentry\" role=\"article\" itemscope itemtype=\"http://schema.org/BlogPosting\">\n\n\n                <section class=\"entry-content cf\" itemprop=\"articleBody\">\n                  \n                <div class='gf_browser_safari gform_wrapper' id='gform_wrapper_1' style='display:none'><a id='gf_1' class='gform_anchor' ></a><form method='post' enctype='multipart/form-data'  id='gform_1'  action='/sign-up/host-an-event/#gf_1'>\n                        <div class='gform_heading'>\n                            <span class='gform_description'>Register to host lessons at your private pool</span>\n                        </div>\n        <div id='gf_progressbar_wrapper_1' class='gf_progressbar_wrapper'>\n            <h3 class='gf_progressbar_title'>Step 1 of 5\n        </h3>\n            <div class='gf_progressbar'>\n                <div class='gf_progressbar_percentage percentbar_blue percentbar_20' style='width:20%;'><span>20%</span></div>\n            </div></div>\n                        <div class='gform_body'><div id='gform_page_1_1' class='gform_page' >\n                                    <div class='gform_page_fields'><ul id='gform_fields_1' class='gform_fields top_label form_sublabel_above description_above'><li id='field_1_2' class='gfield field_sublabel_above field_description_above' ><label class='gfield_label' for='input_1_2_3' >Parent(s) Name(s)</label><div class='ginput_complex ginput_container no_prefix has_first_name no_middle_name has_last_name no_suffix' id='input_1_2'>\n                            \n                            <span id='input_1_2_3_container' class='name_first' >\n                                                    <label for='input_1_2_3' >First</label>\n                                                    <input type='text' name='input_2.3' id='input_1_2_3' value='' aria-label='First name' tabindex='2'  />\n                                                </span>\n                            \n                            <span id='input_1_2_6_container' class='name_last' >\n                                                            <label for='input_1_2_6' >Last</label>\n                                                            <input type='text' name='input_2.6' id='input_1_2_6' value='' aria-label='Last name' tabindex='4'  />\n                                                        </span>\n                            \n                        </div></li><li id='field_1_1' class='gfield field_sublabel_above field_description_above' ><label class='gfield_label' for='input_1_1_3' ></label><div class='ginput_complex ginput_container no_prefix has_first_name no_middle_name has_last_name no_suffix' id='input_1_1'>\n                            \n                            <span id='input_1_1_3_container' class='name_first' >\n                                                    <label for='input_1_1_3' >First</label>\n                                                    <input type='text' name='input_1.3' id='input_1_1_3' value='' aria-label='First name' tabindex='7'  />\n                                                </span>\n                            \n                            <span id='input_1_1_6_container' class='name_last' >\n                                                            <label for='input_1_1_6' >Last</label>\n                                                            <input type='text' name='input_1.6' id='input_1_1_6' value='' aria-label='Last name' tabindex='9'  />\n                                                        </span>\n                            \n                        </div></li><li id='field_1_3' class='gfield field_sublabel_above field_description_above' ><label class='gfield_label' for='input_1_3' >Mobile Phone</label><div class='ginput_container'><input name='input_3' id='input_1_3' type='text' value='' class='medium' tabindex='11'   /></div></li><li id='field_1_45' class='gfield field_sublabel_above field_description_above' ><label class='gfield_label' for='input_1_45' >Home Phone</label><div class='ginput_container'><input name='input_45' id='input_1_45' type='text' value='' class='medium' tabindex='12'   /></div></li><li id='field_1_46' class='gfield field_sublabel_above field_description_above' ><label class='gfield_label' for='input_1_46_1' >Address</label>    \n                    <div class='ginput_complex ginput_container has_street has_street2 has_city has_state has_zip' id='input_1_46' >\n                         <span class='ginput_full address_line_1' id='input_1_46_1_container' >\n                                        <label for='input_1_46_1' id='input_1_46_1_label' >Street Address</label>\n                                        <input type='text' name='input_46.1' id='input_1_46_1' value='' tabindex='13'  />\n                                    </span><span class='ginput_full address_line_2' id='input_1_46_2_container' >\n                                        <label for='input_1_46_2' id='input_1_46_2_label' >Address Line 2</label>\n                                        <input type='text' name='input_46.2' id='input_1_46_2' value='' tabindex='14'  />\n                                    </span><span class='ginput_left address_city' id='input_1_46_3_container' >\n                                    <label for='input_1_46_3' id='input_1_46_3_label' >City</label>\n                                    <input type='text' name='input_46.3' id='input_1_46_3' value='' tabindex='15'  />\n                                 </span><span class='ginput_right address_state' id='input_1_46_4_container' >\n                                        <label for='input_1_46_4' id='input_1_46_4_label' >State</label>\n                                        <select name='input_46.4' id='input_1_46_4' tabindex='16'   ><option value='' ></option><option value='Alabama' >Alabama</option><option value='Alaska' >Alaska</option><option value='Arizona' >Arizona</option><option value='Arkansas' >Arkansas</option><option value='California' selected='selected'>California</option><option value='Colorado' >Colorado</option><option value='Connecticut' >Connecticut</option><option value='Delaware' >Delaware</option><option value='District of Columbia' >District of Columbia</option><option value='Florida' >Florida</option><option value='Georgia' >Georgia</option><option value='Hawaii' >Hawaii</option><option value='Idaho' >Idaho</option><option value='Illinois' >Illinois</option><option value='Indiana' >Indiana</option><option value='Iowa' >Iowa</option><option value='Kansas' >Kansas</option><option value='Kentucky' >Kentucky</option><option value='Louisiana' >Louisiana</option><option value='Maine' >Maine</option><option value='Maryland' >Maryland</option><option value='Massachusetts' >Massachusetts</option><option value='Michigan' >Michigan</option><option value='Minnesota' >Minnesota</option><option value='Mississippi' >Mississippi</option><option value='Missouri' >Missouri</option><option value='Montana' >Montana</option><option value='Nebraska' >Nebraska</option><option value='Nevada' >Nevada</option><option value='New Hampshire' >New Hampshire</option><option value='New Jersey' >New Jersey</option><option value='New Mexico' >New Mexico</option><option value='New York' >New York</option><option value='North Carolina' >North Carolina</option><option value='North Dakota' >North Dakota</option><option value='Ohio' >Ohio</option><option value='Oklahoma' >Oklahoma</option><option value='Oregon' >Oregon</option><option value='Pennsylvania' >Pennsylvania</option><option value='Rhode Island' >Rhode Island</option><option value='South Carolina' >South Carolina</option><option value='South Dakota' >South Dakota</option><option value='Tennessee' >Tennessee</option><option value='Texas' >Texas</option><option value='Utah' >Utah</option><option value='Vermont' >Vermont</option><option value='Virginia' >Virginia</option><option value='Washington' >Washington</option><option value='West Virginia' >West Virginia</option><option value='Wisconsin' >Wisconsin</option><option value='Wyoming' >Wyoming</option><option value='Armed Forces Americas' >Armed Forces Americas</option><option value='Armed Forces Europe' >Armed Forces Europe</option><option value='Armed Forces Pacific' >Armed Forces Pacific</option></select>\n                                      </span><span class='ginput_left address_zip' id='input_1_46_5_container' >\n                                    <label for='input_1_46_5' id='input_1_46_5_label' >ZIP Code</label>\n                                    <input type='text' name='input_46.5' id='input_1_46_5' value='' tabindex='18'  />\n                                </span><input type='hidden' class='gform_hidden' name='input_46.6' id='input_1_46_6' value='United States'/>\n                    <div class='gf_clear gf_clear_complex'></div>\n                </div></li><li id='field_1_33' class='gfield gsection field_sublabel_above field_description_above' ><h2 class='gsection_title'>User Details</h2></li><li id='field_1_4' class='gfield field_sublabel_above field_description_above' ><label class='gfield_label' for='input_1_4' >Email</label><div class='gfield_description'>This is your Username</div><div class='ginput_container'>\n                            <input name='input_4' id='input_1_4' type='text' value='' class='medium' tabindex='19'   />\n                        </div></li><li id='field_1_5' class='gfield field_sublabel_above field_description_above' ><label class='gfield_label' for='input_1_5' >Password</label><div class='ginput_complex ginput_container' id='input_1_5_container'>\n          <span id='input_1_5_1_container' class='ginput_left'>\n            <label for='input_1_5' >Enter Password</label>\n            <input type='password' name='input_5' id='input_1_5' onkeyup='gformShowPasswordStrength(\"input_1_5\");' onchange='gformShowPasswordStrength(\"input_1_5\");' value='' tabindex='20'  />\n          </span>\n          <span id='input_1_5_2_container' class='ginput_right'>\n            <label for='input_1_5_2' >Confirm Password</label>\n            <input type='password' name='input_5_2' id='input_1_5_2' onkeyup='gformShowPasswordStrength(\"input_1_5\");' onchange='gformShowPasswordStrength(\"input_1_5\");' value='' tabindex='21'  />\n          </span>\n          <div class='gf_clear gf_clear_complex'></div>\n        </div><div id='input_1_5_strength_indicator' class='gfield_password_strength' >\n                                      Strength indicator\n                                    </div>\n                                    <input type='hidden' class='gform_hidden' id='input_1_5_strength' name='input_5_strength' /></li></ul>\n                    </div>\n                    <div class='gform_page_footer'>\n                         <input type='button' id='gform_next_button_1_6' class='gform_next_button button' value='Next' tabindex='22' onclick='jQuery(\"#gform_target_page_number_1\").val(\"2\");  jQuery(\"#gform_1\").trigger(\"submit\",[true]); ' /> \n                    </div>\n                </div>\n                <div id='gform_page_1_2' class='gform_page' style='display:none;'>\n                    <div class='gform_page_fields'>\n                        <ul id='gform_fields_1_2' class='gform_fields top_label form_sublabel_above description_above'><li id='field_1_16' class='gfield field_sublabel_above field_description_above' ><label class='gfield_label'  >How many students will be attending?</label><div class='ginput_container'><ul class='gfield_radio' id='input_1_16'><li class='gchoice_1_16_0'><input name='input_16' type='radio' value='1' checked='checked' id='choice_1_16_0' tabindex='23'  onclick='gf_apply_rules(1,[34,34,39,39,40,40,41,41,70,70,72,75,76,77,77,85,87,86,78,78,88,89,90]);'  /><label for='choice_1_16_0' id='label_1_16_0'>One</label></li><li class='gchoice_1_16_1'><input name='input_16' type='radio' value='2'  id='choice_1_16_1' tabindex='24'  onclick='gf_apply_rules(1,[34,34,39,39,40,40,41,41,70,70,72,75,76,77,77,85,87,86,78,78,88,89,90]);'  /><label for='choice_1_16_1' id='label_1_16_1'>Two</label></li><li class='gchoice_1_16_2'><input name='input_16' type='radio' value='3'  id='choice_1_16_2' tabindex='25'  onclick='gf_apply_rules(1,[34,34,39,39,40,40,41,41,70,70,72,75,76,77,77,85,87,86,78,78,88,89,90]);'  /><label for='choice_1_16_2' id='label_1_16_2'>Three</label></li><li class='gchoice_1_16_3'><input name='input_16' type='radio' value='4'  id='choice_1_16_3' tabindex='26'  onclick='gf_apply_rules(1,[34,34,39,39,40,40,41,41,70,70,72,75,76,77,77,85,87,86,78,78,88,89,90]);'  /><label for='choice_1_16_3' id='label_1_16_3'>Four</label></li></ul></div></li><li id='field_1_34' class='gfield gsection field_sublabel_above field_description_above' ><h2 class='gsection_title'>Student 1</h2></li><li id='field_1_11' class='gfield field_sublabel_above field_description_above' ><label class='gfield_label' for='input_1_11' >Student Name</label><div class='ginput_container'><input name='input_11' id='input_1_11' type='text' value='' class='medium'  tabindex='27'   /></div></li><li id='field_1_12' class='gfield field_sublabel_above field_description_above' ><label class='gfield_label' for='input_1_12_1' >Date of Birth</label><div id='input_1_12' class='ginput_container'><div class='clear-multi'><div class='gfield_date_month ginput_container' id='input_1_12_1_container'>\n                                            <label for='input_1_12_1' >MM</label>\n                                            <input type='text' maxlength='2' name='input_12[]' id='input_1_12_1' value='' tabindex='28'   />\n                                        </div><div class='gfield_date_day ginput_container' id='input_1_12_2_container'>\n                                            <label for='input_1_12_2' >DD</label>\n                                            <input type='text' maxlength='2' name='input_12[]' id='input_1_12_2' value='' tabindex='29'   />\n                                        </div><div class='gfield_date_year ginput_container' id='input_1_12_3_container'>\n                                            <label for='input_1_12_3' >YYYY</label>\n                                            <input type='text' maxlength='4' name='input_12[]' id='input_1_12_3' value='' tabindex='30'     />\n                                       </div>\n                                   </div></div></li><li id='field_1_13' class='gfield field_sublabel_above field_description_above' ><label class='gfield_label' for='input_1_13' >Experience</label><div class='ginput_container'><select name='input_13' id='input_1_13'  class='medium gfield_select' tabindex='31' ><option value='First Time' selected='selected'>First Time</option><option value='Beginner' >Beginner</option><option value='Intermediate' >Intermediate</option><option value='Advanced' >Advanced</option></select></div></li><li id='field_1_14' class='gfield field_sublabel_above field_description_above' ><label class='gfield_label' for='input_1_14' >Does the Student have any special needs?</label><div class='ginput_container'>\n          <textarea name='input_14' id='input_1_14' class='textarea medium' tabindex='32'    rows='10' cols='50'></textarea>\n        </div></li><li id='field_1_39' class='gfield gsection field_sublabel_above field_description_above' ><h2 class='gsection_title'>Student 2</h2></li><li id='field_1_17' class='gfield gfield_contains_required field_sublabel_above field_description_above' ><label class='gfield_label' for='input_1_17' >Student Name<span class='gfield_required'>*</span></label><div class='ginput_container'><input name='input_17' id='input_1_17' type='text' value='' class='medium'  tabindex='33'   /></div></li><li id='field_1_18' class='gfield gfield_contains_required field_sublabel_above field_description_above' ><label class='gfield_label' for='input_1_18_1' >Date of Birth<span class='gfield_required'>*</span></label><div id='input_1_18' class='ginput_container'><div class='clear-multi'><div class='gfield_date_month ginput_container' id='input_1_18_1_container'>\n                                            <label for='input_1_18_1' >MM</label>\n                                            <input type='text' maxlength='2' name='input_18[]' id='input_1_18_1' value='' tabindex='34'   />\n                                        </div><div class='gfield_date_day ginput_container' id='input_1_18_2_container'>\n                                            <label for='input_1_18_2' >DD</label>\n                                            <input type='text' maxlength='2' name='input_18[]' id='input_1_18_2' value='' tabindex='35'   />\n                                        </div><div class='gfield_date_year ginput_container' id='input_1_18_3_container'>\n                                            <label for='input_1_18_3' >YYYY</label>\n                                            <input type='text' maxlength='4' name='input_18[]' id='input_1_18_3' value='' tabindex='36'     />\n                                       </div>\n                                   </div></div></li><li id='field_1_19' class='gfield gfield_contains_required field_sublabel_above field_description_above' ><label class='gfield_label' for='input_1_19' >Experience<span class='gfield_required'>*</span></label><div class='ginput_container'><select name='input_19' id='input_1_19'  class='medium gfield_select' tabindex='37' ><option value='First Time' >First Time</option><option value='Beginner' >Beginner</option><option value='Intermediate' >Intermediate</option><option value='Advanced' >Advanced</option></select></div></li><li id='field_1_20' class='gfield field_sublabel_above field_description_above' ><label class='gfield_label' for='input_1_20' >Does the Student have any special needs?</label><div class='ginput_container'>\n          <textarea name='input_20' id='input_1_20' class='textarea medium' tabindex='38'    rows='10' cols='50'></textarea>\n        </div></li><li id='field_1_40' class='gfield gsection field_sublabel_above field_description_above' ><h2 class='gsection_title'>Student 3</h2></li><li id='field_1_21' class='gfield gfield_contains_required field_sublabel_above field_description_above' ><label class='gfield_label' for='input_1_21' >Student Name<span class='gfield_required'>*</span></label><div class='ginput_container'><input name='input_21' id='input_1_21' type='text' value='' class='medium'  tabindex='39'   /></div></li><li id='field_1_22' class='gfield gfield_contains_required field_sublabel_above field_description_above' ><label class='gfield_label' for='input_1_22_1' >Date of Birth<span class='gfield_required'>*</span></label><div id='input_1_22' class='ginput_container'><div class='clear-multi'><div class='gfield_date_month ginput_container' id='input_1_22_1_container'>\n                                            <label for='input_1_22_1' >MM</label>\n                                            <input type='text' maxlength='2' name='input_22[]' id='input_1_22_1' value='' tabindex='40'   />\n                                        </div><div class='gfield_date_day ginput_container' id='input_1_22_2_container'>\n                                            <label for='input_1_22_2' >DD</label>\n                                            <input type='text' maxlength='2' name='input_22[]' id='input_1_22_2' value='' tabindex='41'   />\n                                        </div><div class='gfield_date_year ginput_container' id='input_1_22_3_container'>\n                                            <label for='input_1_22_3' >YYYY</label>\n                                            <input type='text' maxlength='4' name='input_22[]' id='input_1_22_3' value='' tabindex='42'     />\n                                       </div>\n                                   </div></div></li><li id='field_1_23' class='gfield gfield_contains_required field_sublabel_above field_description_above' ><label class='gfield_label' for='input_1_23' >Experience<span class='gfield_required'>*</span></label><div class='ginput_container'><select name='input_23' id='input_1_23'  class='medium gfield_select' tabindex='43' ><option value='First Time' >First Time</option><option value='Beginner' >Beginner</option><option value='Intermediate' >Intermediate</option><option value='Advanced' >Advanced</option></select></div></li><li id='field_1_24' class='gfield field_sublabel_above field_description_above' ><label class='gfield_label' for='input_1_24' >Does the Student have any special needs?</label><div class='ginput_container'>\n          <textarea name='input_24' id='input_1_24' class='textarea medium' tabindex='44'    rows='10' cols='50'></textarea>\n        </div></li><li id='field_1_41' class='gfield gsection field_sublabel_above field_description_above' ><h2 class='gsection_title'>Student 4</h2></li><li id='field_1_25' class='gfield gfield_contains_required field_sublabel_above field_description_above' ><label class='gfield_label' for='input_1_25' >Student Name<span class='gfield_required'>*</span></label><div class='ginput_container'><input name='input_25' id='input_1_25' type='text' value='' class='medium'  tabindex='45'   /></div></li><li id='field_1_26' class='gfield gfield_contains_required field_sublabel_above field_description_above' ><label class='gfield_label' for='input_1_26_1' >Date of Birth<span class='gfield_required'>*</span></label><div id='input_1_26' class='ginput_container'><div class='clear-multi'><div class='gfield_date_month ginput_container' id='input_1_26_1_container'>\n                                            <label for='input_1_26_1' >MM</label>\n                                            <input type='text' maxlength='2' name='input_26[]' id='input_1_26_1' value='' tabindex='46'   />\n                                        </div><div class='gfield_date_day ginput_container' id='input_1_26_2_container'>\n                                            <label for='input_1_26_2' >DD</label>\n                                            <input type='text' maxlength='2' name='input_26[]' id='input_1_26_2' value='' tabindex='47'   />\n                                        </div><div class='gfield_date_year ginput_container' id='input_1_26_3_container'>\n                                            <label for='input_1_26_3' >YYYY</label>\n                                            <input type='text' maxlength='4' name='input_26[]' id='input_1_26_3' value='' tabindex='48'     />\n                                       </div>\n                                   </div></div></li><li id='field_1_27' class='gfield gfield_contains_required field_sublabel_above field_description_above' ><label class='gfield_label' for='input_1_27' >Experience<span class='gfield_required'>*</span></label><div class='ginput_container'><select name='input_27' id='input_1_27'  class='medium gfield_select' tabindex='49' ><option value='First Time' >First Time</option><option value='Beginner' >Beginner</option><option value='Intermediate' >Intermediate</option><option value='Advanced' >Advanced</option></select></div></li><li id='field_1_28' class='gfield field_sublabel_above field_description_above' ><label class='gfield_label' for='input_1_28' >Does the Student have any special needs?</label><div class='ginput_container'>\n          <textarea name='input_28' id='input_1_28' class='textarea medium' tabindex='50'    rows='10' cols='50'></textarea>\n        </div></li></ul>\n                    </div>\n                    <div class='gform_page_footer'>\n                        <input type='button' id='gform_previous_button_1_42' class='gform_previous_button button' value='Previous' tabindex='52' onclick='jQuery(\"#gform_target_page_number_1\").val(\"1\");  jQuery(\"#gform_1\").trigger(\"submit\",[true]); ' /> <input type='button' id='gform_next_button_1_42' class='gform_next_button button' value='Next' tabindex='51' onclick='jQuery(\"#gform_target_page_number_1\").val(\"3\");  jQuery(\"#gform_1\").trigger(\"submit\",[true]); ' /> \n                    </div>\n                </div>\n                <div id='gform_page_1_3' class='gform_page' style='display:none;'>\n                    <div class='gform_page_fields'>\n                        <ul id='gform_fields_1_3' class='gform_fields top_label form_sublabel_above description_above'><li id='field_1_63' class='gfield gsection field_sublabel_above field_description_above' ><h2 class='gsection_title'>Student 1 ***Pulls student 1 name***</h2></li><li id='field_1_64' class='gfield field_sublabel_above field_description_above' ><label class='gfield_label' for='input_1_64' >Preference 1</label><div class='ginput_container'><select name='input_64' id='input_1_64' onchange='gf_apply_rules(1,[65]);' class='medium gfield_select' tabindex='53' ><option value='- Please Select -' >- Please Select -</option><option value='10/4' >10/4</option><option value='10/5' >10/5</option><option value='10/6' >10/6</option></select></div></li><li id='field_1_65' class='gfield field_sublabel_above field_description_above' ><label class='gfield_label'  >Select a time</label><div class='ginput_container'><ul class='gfield_checkbox' id='input_1_65'><li class='gchoice_1_65_1'>\n                <input name='input_65.1' type='checkbox'  value='Morning (8-10am)'  id='choice_1_65_1' tabindex='54'  />\n                <label for='choice_1_65_1' id='label_1_65_1'>Morning (8-10am)</label>\n              </li><li class='gchoice_1_65_2'>\n                <input name='input_65.2' type='checkbox'  value='Mid-Morning (10-12am)'  id='choice_1_65_2' tabindex='55'  />\n                <label for='choice_1_65_2' id='label_1_65_2'>Mid-Morning (10-12am)</label>\n              </li><li class='gchoice_1_65_3'>\n                <input name='input_65.3' type='checkbox'  value='Afternoon (12-2pm)'  id='choice_1_65_3' tabindex='56'  />\n                <label for='choice_1_65_3' id='label_1_65_3'>Afternoon (12-2pm)</label>\n              </li><li class='gchoice_1_65_4'>\n                <input name='input_65.4' type='checkbox'  value='Mid-Afternoon (2-4pm)'  id='choice_1_65_4' tabindex='57'  />\n                <label for='choice_1_65_4' id='label_1_65_4'>Mid-Afternoon (2-4pm)</label>\n              </li><li class='gchoice_1_65_5'>\n                <input name='input_65.5' type='checkbox'  value='Late-Afternoon (4-6pm)'  id='choice_1_65_5' tabindex='58'  />\n                <label for='choice_1_65_5' id='label_1_65_5'>Late-Afternoon (4-6pm)</label>\n              </li></ul></div></li><li id='field_1_67' class='gfield field_sublabel_above field_description_above' ><label class='gfield_label' for='input_1_67' >Preference 2</label><div class='ginput_container'><select name='input_67' id='input_1_67' onchange='gf_apply_rules(1,[69]);' class='medium gfield_select' tabindex='59' ><option value='- Please Select -' >- Please Select -</option><option value='10/4' >10/4</option><option value='10/5' >10/5</option><option value='10/6' >10/6</option></select></div></li><li id='field_1_69' class='gfield field_sublabel_above field_description_above' ><label class='gfield_label'  >Select a time</label><div class='ginput_container'><ul class='gfield_checkbox' id='input_1_69'><li class='gchoice_1_69_1'>\n                <input name='input_69.1' type='checkbox'  value='Morning (8-10am)'  id='choice_1_69_1' tabindex='60'  />\n                <label for='choice_1_69_1' id='label_1_69_1'>Morning (8-10am)</label>\n              </li><li class='gchoice_1_69_2'>\n                <input name='input_69.2' type='checkbox'  value='Mid-Morning (10-12am)'  id='choice_1_69_2' tabindex='61'  />\n                <label for='choice_1_69_2' id='label_1_69_2'>Mid-Morning (10-12am)</label>\n              </li><li class='gchoice_1_69_3'>\n                <input name='input_69.3' type='checkbox'  value='Afternoon (12-2pm)'  id='choice_1_69_3' tabindex='62'  />\n                <label for='choice_1_69_3' id='label_1_69_3'>Afternoon (12-2pm)</label>\n              </li><li class='gchoice_1_69_4'>\n                <input name='input_69.4' type='checkbox'  value='Mid-Afternoon (2-4pm)'  id='choice_1_69_4' tabindex='63'  />\n                <label for='choice_1_69_4' id='label_1_69_4'>Mid-Afternoon (2-4pm)</label>\n              </li><li class='gchoice_1_69_5'>\n                <input name='input_69.5' type='checkbox'  value='Late-Afternoon (4-6pm)'  id='choice_1_69_5' tabindex='64'  />\n                <label for='choice_1_69_5' id='label_1_69_5'>Late-Afternoon (4-6pm)</label>\n              </li></ul></div></li><li id='field_1_66' class='gfield field_sublabel_above field_description_above' ><label class='gfield_label' for='input_1_66' >Preference 3</label><div class='ginput_container'><select name='input_66' id='input_1_66' onchange='gf_apply_rules(1,[68]);' class='medium gfield_select' tabindex='65' ><option value='- Please Select -' >- Please Select -</option><option value='10/4' >10/4</option><option value='10/5' >10/5</option><option value='10/6' >10/6</option></select></div></li><li id='field_1_68' class='gfield field_sublabel_above field_description_above' ><label class='gfield_label'  >Select a time</label><div class='ginput_container'><ul class='gfield_checkbox' id='input_1_68'><li class='gchoice_1_68_1'>\n                <input name='input_68.1' type='checkbox'  value='Morning (8-10am)'  id='choice_1_68_1' tabindex='66'  />\n                <label for='choice_1_68_1' id='label_1_68_1'>Morning (8-10am)</label>\n              </li><li class='gchoice_1_68_2'>\n                <input name='input_68.2' type='checkbox'  value='Mid-Morning (10-12am)'  id='choice_1_68_2' tabindex='67'  />\n                <label for='choice_1_68_2' id='label_1_68_2'>Mid-Morning (10-12am)</label>\n              </li><li class='gchoice_1_68_3'>\n                <input name='input_68.3' type='checkbox'  value='Afternoon (12-2pm)'  id='choice_1_68_3' tabindex='68'  />\n                <label for='choice_1_68_3' id='label_1_68_3'>Afternoon (12-2pm)</label>\n              </li><li class='gchoice_1_68_4'>\n                <input name='input_68.4' type='checkbox'  value='Mid-Afternoon (2-4pm)'  id='choice_1_68_4' tabindex='69'  />\n                <label for='choice_1_68_4' id='label_1_68_4'>Mid-Afternoon (2-4pm)</label>\n              </li><li class='gchoice_1_68_5'>\n                <input name='input_68.5' type='checkbox'  value='Late-Afternoon (4-6pm)'  id='choice_1_68_5' tabindex='70'  />\n                <label for='choice_1_68_5' id='label_1_68_5'>Late-Afternoon (4-6pm)</label>\n              </li></ul></div></li><li id='field_1_70' class='gfield gsection field_sublabel_above field_description_above' ><h2 class='gsection_title'>Student 2</h2></li><li id='field_1_71' class='gfield field_sublabel_above field_description_above' ><label class='gfield_label' for='input_1_71' >Preference 1 S2</label><div class='ginput_container'><select name='input_71' id='input_1_71' onchange='gf_apply_rules(1,[72]);' class='medium gfield_select' tabindex='71' ><option value='- Please Select -' >- Please Select -</option><option value='10/4' >10/4</option><option value='10/5' >10/5</option><option value='10/6' >10/6</option></select></div></li><li id='field_1_72' class='gfield field_sublabel_above field_description_above' ><label class='gfield_label'  >Select a time</label><div class='ginput_container'><ul class='gfield_checkbox' id='input_1_72'><li class='gchoice_1_72_1'>\n                <input name='input_72.1' type='checkbox'  value='Morning (8-10am)'  id='choice_1_72_1' tabindex='72'  />\n                <label for='choice_1_72_1' id='label_1_72_1'>Morning (8-10am)</label>\n              </li><li class='gchoice_1_72_2'>\n                <input name='input_72.2' type='checkbox'  value='Mid-Morning (10-12am)'  id='choice_1_72_2' tabindex='73'  />\n                <label for='choice_1_72_2' id='label_1_72_2'>Mid-Morning (10-12am)</label>\n              </li><li class='gchoice_1_72_3'>\n                <input name='input_72.3' type='checkbox'  value='Afternoon (12-2pm)'  id='choice_1_72_3' tabindex='74'  />\n                <label for='choice_1_72_3' id='label_1_72_3'>Afternoon (12-2pm)</label>\n              </li><li class='gchoice_1_72_4'>\n                <input name='input_72.4' type='checkbox'  value='Mid-Afternoon (2-4pm)'  id='choice_1_72_4' tabindex='75'  />\n                <label for='choice_1_72_4' id='label_1_72_4'>Mid-Afternoon (2-4pm)</label>\n              </li><li class='gchoice_1_72_5'>\n                <input name='input_72.5' type='checkbox'  value='Late-Afternoon (4-6pm)'  id='choice_1_72_5' tabindex='76'  />\n                <label for='choice_1_72_5' id='label_1_72_5'>Late-Afternoon (4-6pm)</label>\n              </li></ul></div></li><li id='field_1_74' class='gfield field_sublabel_above field_description_above' ><label class='gfield_label' for='input_1_74' >Preference 2 S2</label><div class='ginput_container'><select name='input_74' id='input_1_74' onchange='gf_apply_rules(1,[75]);' class='medium gfield_select' tabindex='77' ><option value='- Please Select -' >- Please Select -</option><option value='10/4' >10/4</option><option value='10/5' >10/5</option><option value='10/6' >10/6</option></select></div></li><li id='field_1_75' class='gfield field_sublabel_above field_description_above' ><label class='gfield_label'  >Select a time</label><div class='ginput_container'><ul class='gfield_checkbox' id='input_1_75'><li class='gchoice_1_75_1'>\n                <input name='input_75.1' type='checkbox'  value='Morning (8-10am)'  id='choice_1_75_1' tabindex='78'  />\n                <label for='choice_1_75_1' id='label_1_75_1'>Morning (8-10am)</label>\n              </li><li class='gchoice_1_75_2'>\n                <input name='input_75.2' type='checkbox'  value='Mid-Morning (10-12am)'  id='choice_1_75_2' tabindex='79'  />\n                <label for='choice_1_75_2' id='label_1_75_2'>Mid-Morning (10-12am)</label>\n              </li><li class='gchoice_1_75_3'>\n                <input name='input_75.3' type='checkbox'  value='Afternoon (12-2pm)'  id='choice_1_75_3' tabindex='80'  />\n                <label for='choice_1_75_3' id='label_1_75_3'>Afternoon (12-2pm)</label>\n              </li><li class='gchoice_1_75_4'>\n                <input name='input_75.4' type='checkbox'  value='Mid-Afternoon (2-4pm)'  id='choice_1_75_4' tabindex='81'  />\n                <label for='choice_1_75_4' id='label_1_75_4'>Mid-Afternoon (2-4pm)</label>\n              </li><li class='gchoice_1_75_5'>\n                <input name='input_75.5' type='checkbox'  value='Late-Afternoon (4-6pm)'  id='choice_1_75_5' tabindex='82'  />\n                <label for='choice_1_75_5' id='label_1_75_5'>Late-Afternoon (4-6pm)</label>\n              </li></ul></div></li><li id='field_1_73' class='gfield field_sublabel_above field_description_above' ><label class='gfield_label' for='input_1_73' >Preference 3 S2</label><div class='ginput_container'><select name='input_73' id='input_1_73' onchange='gf_apply_rules(1,[76]);' class='medium gfield_select' tabindex='83' ><option value='- Please Select -' >- Please Select -</option><option value='10/4' >10/4</option><option value='10/5' >10/5</option><option value='10/6' >10/6</option></select></div></li><li id='field_1_76' class='gfield field_sublabel_above field_description_above' ><label class='gfield_label'  >Select a time</label><div class='ginput_container'><ul class='gfield_checkbox' id='input_1_76'><li class='gchoice_1_76_1'>\n                <input name='input_76.1' type='checkbox'  value='Morning (8-10am)'  id='choice_1_76_1' tabindex='84'  />\n                <label for='choice_1_76_1' id='label_1_76_1'>Morning (8-10am)</label>\n              </li><li class='gchoice_1_76_2'>\n                <input name='input_76.2' type='checkbox'  value='Mid-Morning (10-12am)'  id='choice_1_76_2' tabindex='85'  />\n                <label for='choice_1_76_2' id='label_1_76_2'>Mid-Morning (10-12am)</label>\n              </li><li class='gchoice_1_76_3'>\n                <input name='input_76.3' type='checkbox'  value='Afternoon (12-2pm)'  id='choice_1_76_3' tabindex='86'  />\n                <label for='choice_1_76_3' id='label_1_76_3'>Afternoon (12-2pm)</label>\n              </li><li class='gchoice_1_76_4'>\n                <input name='input_76.4' type='checkbox'  value='Mid-Afternoon (2-4pm)'  id='choice_1_76_4' tabindex='87'  />\n                <label for='choice_1_76_4' id='label_1_76_4'>Mid-Afternoon (2-4pm)</label>\n              </li><li class='gchoice_1_76_5'>\n                <input name='input_76.5' type='checkbox'  value='Late-Afternoon (4-6pm)'  id='choice_1_76_5' tabindex='88'  />\n                <label for='choice_1_76_5' id='label_1_76_5'>Late-Afternoon (4-6pm)</label>\n              </li></ul></div></li><li id='field_1_77' class='gfield gsection field_sublabel_above field_description_above' ><h2 class='gsection_title'>Student 3</h2></li><li id='field_1_79' class='gfield field_sublabel_above field_description_above' ><label class='gfield_label' for='input_1_79' >Preference 1 S3</label><div class='ginput_container'><select name='input_79' id='input_1_79' onchange='gf_apply_rules(1,[85]);' class='medium gfield_select' tabindex='89' ><option value='- Please Select -' >- Please Select -</option><option value='10/4' >10/4</option><option value='10/5' >10/5</option><option value='10/6' >10/6</option></select></div></li><li id='field_1_85' class='gfield field_sublabel_above field_description_above' ><label class='gfield_label'  >Select a time</label><div class='ginput_container'><ul class='gfield_checkbox' id='input_1_85'><li class='gchoice_1_85_1'>\n                <input name='input_85.1' type='checkbox'  value='Morning (8-10am)'  id='choice_1_85_1' tabindex='90'  />\n                <label for='choice_1_85_1' id='label_1_85_1'>Morning (8-10am)</label>\n              </li><li class='gchoice_1_85_2'>\n                <input name='input_85.2' type='checkbox'  value='Mid-Morning (10-12am)'  id='choice_1_85_2' tabindex='91'  />\n                <label for='choice_1_85_2' id='label_1_85_2'>Mid-Morning (10-12am)</label>\n              </li><li class='gchoice_1_85_3'>\n                <input name='input_85.3' type='checkbox'  value='Afternoon (12-2pm)'  id='choice_1_85_3' tabindex='92'  />\n                <label for='choice_1_85_3' id='label_1_85_3'>Afternoon (12-2pm)</label>\n              </li><li class='gchoice_1_85_4'>\n                <input name='input_85.4' type='checkbox'  value='Mid-Afternoon (2-4pm)'  id='choice_1_85_4' tabindex='93'  />\n                <label for='choice_1_85_4' id='label_1_85_4'>Mid-Afternoon (2-4pm)</label>\n              </li><li class='gchoice_1_85_5'>\n                <input name='input_85.5' type='checkbox'  value='Late-Afternoon (4-6pm)'  id='choice_1_85_5' tabindex='94'  />\n                <label for='choice_1_85_5' id='label_1_85_5'>Late-Afternoon (4-6pm)</label>\n              </li></ul></div></li><li id='field_1_80' class='gfield field_sublabel_above field_description_above' ><label class='gfield_label' for='input_1_80' >Preference 2 S3</label><div class='ginput_container'><select name='input_80' id='input_1_80' onchange='gf_apply_rules(1,[87]);' class='medium gfield_select' tabindex='95' ><option value='- Please Select -' >- Please Select -</option><option value='10/4' >10/4</option><option value='10/5' >10/5</option><option value='10/6' >10/6</option></select></div></li><li id='field_1_87' class='gfield field_sublabel_above field_description_above' ><label class='gfield_label'  >Select a time</label><div class='ginput_container'><ul class='gfield_checkbox' id='input_1_87'><li class='gchoice_1_87_1'>\n                <input name='input_87.1' type='checkbox'  value='Morning (8-10am)'  id='choice_1_87_1' tabindex='96'  />\n                <label for='choice_1_87_1' id='label_1_87_1'>Morning (8-10am)</label>\n              </li><li class='gchoice_1_87_2'>\n                <input name='input_87.2' type='checkbox'  value='Mid-Morning (10-12am)'  id='choice_1_87_2' tabindex='97'  />\n                <label for='choice_1_87_2' id='label_1_87_2'>Mid-Morning (10-12am)</label>\n              </li><li class='gchoice_1_87_3'>\n                <input name='input_87.3' type='checkbox'  value='Afternoon (12-2pm)'  id='choice_1_87_3' tabindex='98'  />\n                <label for='choice_1_87_3' id='label_1_87_3'>Afternoon (12-2pm)</label>\n              </li><li class='gchoice_1_87_4'>\n                <input name='input_87.4' type='checkbox'  value='Mid-Afternoon (2-4pm)'  id='choice_1_87_4' tabindex='99'  />\n                <label for='choice_1_87_4' id='label_1_87_4'>Mid-Afternoon (2-4pm)</label>\n              </li><li class='gchoice_1_87_5'>\n                <input name='input_87.5' type='checkbox'  value='Late-Afternoon (4-6pm)'  id='choice_1_87_5' tabindex='100'  />\n                <label for='choice_1_87_5' id='label_1_87_5'>Late-Afternoon (4-6pm)</label>\n              </li></ul></div></li><li id='field_1_81' class='gfield field_sublabel_above field_description_above' ><label class='gfield_label' for='input_1_81' >Preference 3 S3</label><div class='ginput_container'><select name='input_81' id='input_1_81' onchange='gf_apply_rules(1,[86]);' class='medium gfield_select' tabindex='101' ><option value='- Please Select -' >- Please Select -</option><option value='10/4' >10/4</option><option value='10/5' >10/5</option><option value='10/6' >10/6</option></select></div></li><li id='field_1_86' class='gfield field_sublabel_above field_description_above' ><label class='gfield_label'  >Select a time</label><div class='ginput_container'><ul class='gfield_checkbox' id='input_1_86'><li class='gchoice_1_86_1'>\n                <input name='input_86.1' type='checkbox'  value='Morning (8-10am)'  id='choice_1_86_1' tabindex='102'  />\n                <label for='choice_1_86_1' id='label_1_86_1'>Morning (8-10am)</label>\n              </li><li class='gchoice_1_86_2'>\n                <input name='input_86.2' type='checkbox'  value='Mid-Morning (10-12am)'  id='choice_1_86_2' tabindex='103'  />\n                <label for='choice_1_86_2' id='label_1_86_2'>Mid-Morning (10-12am)</label>\n              </li><li class='gchoice_1_86_3'>\n                <input name='input_86.3' type='checkbox'  value='Afternoon (12-2pm)'  id='choice_1_86_3' tabindex='104'  />\n                <label for='choice_1_86_3' id='label_1_86_3'>Afternoon (12-2pm)</label>\n              </li><li class='gchoice_1_86_4'>\n                <input name='input_86.4' type='checkbox'  value='Mid-Afternoon (2-4pm)'  id='choice_1_86_4' tabindex='105'  />\n                <label for='choice_1_86_4' id='label_1_86_4'>Mid-Afternoon (2-4pm)</label>\n              </li><li class='gchoice_1_86_5'>\n                <input name='input_86.5' type='checkbox'  value='Late-Afternoon (4-6pm)'  id='choice_1_86_5' tabindex='106'  />\n                <label for='choice_1_86_5' id='label_1_86_5'>Late-Afternoon (4-6pm)</label>\n              </li></ul></div></li><li id='field_1_78' class='gfield gsection field_sublabel_above field_description_above' ><h2 class='gsection_title'>Student 4</h2></li><li id='field_1_82' class='gfield field_sublabel_above field_description_above' ><label class='gfield_label' for='input_1_82' >Preference 1 S4</label><div class='ginput_container'><select name='input_82' id='input_1_82' onchange='gf_apply_rules(1,[88]);' class='medium gfield_select' tabindex='107' ><option value='- Please Select -' >- Please Select -</option><option value='10/4' >10/4</option><option value='10/5' >10/5</option><option value='10/6' >10/6</option></select></div></li><li id='field_1_88' class='gfield field_sublabel_above field_description_above' ><label class='gfield_label'  >Select a time</label><div class='ginput_container'><ul class='gfield_checkbox' id='input_1_88'><li class='gchoice_1_88_1'>\n                <input name='input_88.1' type='checkbox'  value='Morning (8-10am)'  id='choice_1_88_1' tabindex='108'  />\n                <label for='choice_1_88_1' id='label_1_88_1'>Morning (8-10am)</label>\n              </li><li class='gchoice_1_88_2'>\n                <input name='input_88.2' type='checkbox'  value='Mid-Morning (10-12am)'  id='choice_1_88_2' tabindex='109'  />\n                <label for='choice_1_88_2' id='label_1_88_2'>Mid-Morning (10-12am)</label>\n              </li><li class='gchoice_1_88_3'>\n                <input name='input_88.3' type='checkbox'  value='Afternoon (12-2pm)'  id='choice_1_88_3' tabindex='110'  />\n                <label for='choice_1_88_3' id='label_1_88_3'>Afternoon (12-2pm)</label>\n              </li><li class='gchoice_1_88_4'>\n                <input name='input_88.4' type='checkbox'  value='Mid-Afternoon (2-4pm)'  id='choice_1_88_4' tabindex='111'  />\n                <label for='choice_1_88_4' id='label_1_88_4'>Mid-Afternoon (2-4pm)</label>\n              </li><li class='gchoice_1_88_5'>\n                <input name='input_88.5' type='checkbox'  value='Late-Afternoon (4-6pm)'  id='choice_1_88_5' tabindex='112'  />\n                <label for='choice_1_88_5' id='label_1_88_5'>Late-Afternoon (4-6pm)</label>\n              </li></ul></div></li><li id='field_1_83' class='gfield field_sublabel_above field_description_above' ><label class='gfield_label' for='input_1_83' >Preference 2 S4</label><div class='ginput_container'><select name='input_83' id='input_1_83' onchange='gf_apply_rules(1,[89]);' class='medium gfield_select' tabindex='113' ><option value='- Please Select -' >- Please Select -</option><option value='10/4' >10/4</option><option value='10/5' >10/5</option><option value='10/6' >10/6</option></select></div></li><li id='field_1_89' class='gfield field_sublabel_above field_description_above' ><label class='gfield_label'  >Select a time</label><div class='ginput_container'><ul class='gfield_checkbox' id='input_1_89'><li class='gchoice_1_89_1'>\n                <input name='input_89.1' type='checkbox'  value='Morning (8-10am)'  id='choice_1_89_1' tabindex='114'  />\n                <label for='choice_1_89_1' id='label_1_89_1'>Morning (8-10am)</label>\n              </li><li class='gchoice_1_89_2'>\n                <input name='input_89.2' type='checkbox'  value='Mid-Morning (10-12am)'  id='choice_1_89_2' tabindex='115'  />\n                <label for='choice_1_89_2' id='label_1_89_2'>Mid-Morning (10-12am)</label>\n              </li><li class='gchoice_1_89_3'>\n                <input name='input_89.3' type='checkbox'  value='Afternoon (12-2pm)'  id='choice_1_89_3' tabindex='116'  />\n                <label for='choice_1_89_3' id='label_1_89_3'>Afternoon (12-2pm)</label>\n              </li><li class='gchoice_1_89_4'>\n                <input name='input_89.4' type='checkbox'  value='Mid-Afternoon (2-4pm)'  id='choice_1_89_4' tabindex='117'  />\n                <label for='choice_1_89_4' id='label_1_89_4'>Mid-Afternoon (2-4pm)</label>\n              </li><li class='gchoice_1_89_5'>\n                <input name='input_89.5' type='checkbox'  value='Late-Afternoon (4-6pm)'  id='choice_1_89_5' tabindex='118'  />\n                <label for='choice_1_89_5' id='label_1_89_5'>Late-Afternoon (4-6pm)</label>\n              </li></ul></div></li><li id='field_1_84' class='gfield field_sublabel_above field_description_above' ><label class='gfield_label' for='input_1_84' >Preference 3 S4</label><div class='ginput_container'><select name='input_84' id='input_1_84' onchange='gf_apply_rules(1,[90]);' class='medium gfield_select' tabindex='119' ><option value='- Please Select -' >- Please Select -</option><option value='10/4' >10/4</option><option value='10/5' >10/5</option><option value='10/6' >10/6</option></select></div></li><li id='field_1_90' class='gfield field_sublabel_above field_description_above' ><label class='gfield_label'  >Select a time</label><div class='ginput_container'><ul class='gfield_checkbox' id='input_1_90'><li class='gchoice_1_90_1'>\n                <input name='input_90.1' type='checkbox'  value='Morning (8-10am)'  id='choice_1_90_1' tabindex='120'  />\n                <label for='choice_1_90_1' id='label_1_90_1'>Morning (8-10am)</label>\n              </li><li class='gchoice_1_90_2'>\n                <input name='input_90.2' type='checkbox'  value='Mid-Morning (10-12am)'  id='choice_1_90_2' tabindex='121'  />\n                <label for='choice_1_90_2' id='label_1_90_2'>Mid-Morning (10-12am)</label>\n              </li><li class='gchoice_1_90_3'>\n                <input name='input_90.3' type='checkbox'  value='Afternoon (12-2pm)'  id='choice_1_90_3' tabindex='122'  />\n                <label for='choice_1_90_3' id='label_1_90_3'>Afternoon (12-2pm)</label>\n              </li><li class='gchoice_1_90_4'>\n                <input name='input_90.4' type='checkbox'  value='Mid-Afternoon (2-4pm)'  id='choice_1_90_4' tabindex='123'  />\n                <label for='choice_1_90_4' id='label_1_90_4'>Mid-Afternoon (2-4pm)</label>\n              </li><li class='gchoice_1_90_5'>\n                <input name='input_90.5' type='checkbox'  value='Late-Afternoon (4-6pm)'  id='choice_1_90_5' tabindex='124'  />\n                <label for='choice_1_90_5' id='label_1_90_5'>Late-Afternoon (4-6pm)</label>\n              </li></ul></div></li></ul>\n                    </div>\n                    <div class='gform_page_footer'>\n                        <input type='button' id='gform_previous_button_1_47' class='gform_previous_button button' value='Previous' tabindex='126' onclick='jQuery(\"#gform_target_page_number_1\").val(\"2\");  jQuery(\"#gform_1\").trigger(\"submit\",[true]); ' /> <input type='button' id='gform_next_button_1_47' class='gform_next_button button' value='Next' tabindex='125' onclick='jQuery(\"#gform_target_page_number_1\").val(\"4\");  jQuery(\"#gform_1\").trigger(\"submit\",[true]); ' /> \n                    </div>\n                </div>\n                <div id='gform_page_1_4' class='gform_page' style='display:none;'>\n                    <div class='gform_page_fields'>\n                        <ul id='gform_fields_1_4' class='gform_fields top_label form_sublabel_above description_above'><li id='field_1_48' class='gfield gsection field_sublabel_above field_description_above' ><h2 class='gsection_title'>Group Details</h2></li><li id='field_1_49' class='gfield field_sublabel_above field_description_above' ><label class='gfield_label' for='input_1_49' >How many groups of 4 would you like to host?</label><div class='ginput_container'><select name='input_49' id='input_1_49'  class='medium gfield_select' tabindex='127' ><option value='1 Group' >1 Group</option><option value='2 Groups' >2 Groups</option><option value='3 Groups' >3 Groups</option><option value='4 Groups' >4 Groups</option><option value='5 Groups' >5 Groups</option><option value='6 Groups' >6 Groups</option><option value='7 Groups' >7 Groups</option></select></div></li><li id='field_1_50' class='gfield field_sublabel_above field_description_above' ><label class='gfield_label'  >I prefer to fill (all, some, none) of the available spots in my group</label><div class='ginput_container'><ul class='gfield_radio' id='input_1_50'><li class='gchoice_1_50_0'><input name='input_50' type='radio' value='All'  id='choice_1_50_0' tabindex='128'  onclick='gf_apply_rules(1,[51]);'  /><label for='choice_1_50_0' id='label_1_50_0'>All</label></li><li class='gchoice_1_50_1'><input name='input_50' type='radio' value='Some'  id='choice_1_50_1' tabindex='129'  onclick='gf_apply_rules(1,[51]);'  /><label for='choice_1_50_1' id='label_1_50_1'>Some</label></li><li class='gchoice_1_50_2'><input name='input_50' type='radio' value='None'  id='choice_1_50_2' tabindex='130'  onclick='gf_apply_rules(1,[51]);'  /><label for='choice_1_50_2' id='label_1_50_2'>None</label></li></ul></div></li><li id='field_1_51' class='gfield gfield_html gfield_html_formatted gfield_no_follows_desc field_sublabel_above field_description_above' >A code will be generated that you can use to invite guests that will be provided in the \"Thank you\" Email.</li><li id='field_1_52' class='gfield field_sublabel_above field_description_above' ><label class='gfield_label'  >Are you willing to add an additional group at your pool if all spots are filled and there is additional interest?</label><div class='ginput_container'><ul class='gfield_radio' id='input_1_52'><li class='gchoice_1_52_0'><input name='input_52' type='radio' value='Yes'  id='choice_1_52_0' tabindex='131'    /><label for='choice_1_52_0' id='label_1_52_0'>Yes</label></li><li class='gchoice_1_52_1'><input name='input_52' type='radio' value='No'  id='choice_1_52_1' tabindex='132'    /><label for='choice_1_52_1' id='label_1_52_1'>No</label></li></ul></div></li><li id='field_1_53' class='gfield field_sublabel_above field_description_above' ><label class='gfield_label'  ></label><div class='ginput_container'><ul class='gfield_checkbox' id='input_1_53'><li class='gchoice_1_53_1'>\n                <input name='input_53.1' type='checkbox'  value='I understand that anyone invited as a guest to my group must register at least one month prior to class start date or any open spots will be offered to our placement list.'  id='choice_1_53_1' tabindex='133'  />\n                <label for='choice_1_53_1' id='label_1_53_1'>I understand that anyone invited as a guest to my group must register at least one month prior to class start date or any open spots will be offered to our placement list.</label>\n              </li></ul></div></li><li id='field_1_54' class='gfield gsection field_sublabel_above field_description_above' ><h2 class='gsection_title'>Pool Details</h2><div class='gsection_description'>Lessons must be scheduled at a private, backyard pool that will be heated to 90 degrees.</div></li><li id='field_1_56' class='gfield field_sublabel_above field_description_above' ><label class='gfield_label' for='input_1_56_1' >Pool Address</label>    \n                    <div class='ginput_complex ginput_container has_street has_city has_state has_zip' id='input_1_56' >\n                         <span class='ginput_full address_line_1' id='input_1_56_1_container' >\n                                        <label for='input_1_56_1' id='input_1_56_1_label' >Street Address</label>\n                                        <input type='text' name='input_56.1' id='input_1_56_1' value='' tabindex='134'  />\n                                    </span><span class='ginput_left address_city' id='input_1_56_3_container' >\n                                    <label for='input_1_56_3' id='input_1_56_3_label' >City</label>\n                                    <input type='text' name='input_56.3' id='input_1_56_3' value='' tabindex='135'  />\n                                 </span><span class='ginput_right address_state' id='input_1_56_4_container' >\n                                        <label for='input_1_56_4' id='input_1_56_4_label' >State</label>\n                                        <select name='input_56.4' id='input_1_56_4' tabindex='136'   ><option value='' ></option><option value='Alabama' >Alabama</option><option value='Alaska' >Alaska</option><option value='Arizona' >Arizona</option><option value='Arkansas' >Arkansas</option><option value='California' selected='selected'>California</option><option value='Colorado' >Colorado</option><option value='Connecticut' >Connecticut</option><option value='Delaware' >Delaware</option><option value='District of Columbia' >District of Columbia</option><option value='Florida' >Florida</option><option value='Georgia' >Georgia</option><option value='Hawaii' >Hawaii</option><option value='Idaho' >Idaho</option><option value='Illinois' >Illinois</option><option value='Indiana' >Indiana</option><option value='Iowa' >Iowa</option><option value='Kansas' >Kansas</option><option value='Kentucky' >Kentucky</option><option value='Louisiana' >Louisiana</option><option value='Maine' >Maine</option><option value='Maryland' >Maryland</option><option value='Massachusetts' >Massachusetts</option><option value='Michigan' >Michigan</option><option value='Minnesota' >Minnesota</option><option value='Mississippi' >Mississippi</option><option value='Missouri' >Missouri</option><option value='Montana' >Montana</option><option value='Nebraska' >Nebraska</option><option value='Nevada' >Nevada</option><option value='New Hampshire' >New Hampshire</option><option value='New Jersey' >New Jersey</option><option value='New Mexico' >New Mexico</option><option value='New York' >New York</option><option value='North Carolina' >North Carolina</option><option value='North Dakota' >North Dakota</option><option value='Ohio' >Ohio</option><option value='Oklahoma' >Oklahoma</option><option value='Oregon' >Oregon</option><option value='Pennsylvania' >Pennsylvania</option><option value='Rhode Island' >Rhode Island</option><option value='South Carolina' >South Carolina</option><option value='South Dakota' >South Dakota</option><option value='Tennessee' >Tennessee</option><option value='Texas' >Texas</option><option value='Utah' >Utah</option><option value='Vermont' >Vermont</option><option value='Virginia' >Virginia</option><option value='Washington' >Washington</option><option value='West Virginia' >West Virginia</option><option value='Wisconsin' >Wisconsin</option><option value='Wyoming' >Wyoming</option><option value='Armed Forces Americas' >Armed Forces Americas</option><option value='Armed Forces Europe' >Armed Forces Europe</option><option value='Armed Forces Pacific' >Armed Forces Pacific</option></select>\n                                      </span><span class='ginput_left address_zip' id='input_1_56_5_container' >\n                                    <label for='input_1_56_5' id='input_1_56_5_label' >ZIP Code</label>\n                                    <input type='text' name='input_56.5' id='input_1_56_5' value='' tabindex='138'  />\n                                </span><input type='hidden' class='gform_hidden' name='input_56.6' id='input_1_56_6' value='United States'/>\n                    <div class='gf_clear gf_clear_complex'></div>\n                </div></li><li id='field_1_57' class='gfield field_sublabel_above field_description_above' ><label class='gfield_label' for='input_1_57' >Pool Photo</label><div class='gfield_description'>Include a photo of your pool for Mike's review if your pool has a cabo step, infinity edges, high walls, decorative decking, or is smaller or shallower than average</div><div class='ginput_container'><input type='hidden' name='MAX_FILE_SIZE' value='20971520' /><input name='input_57' id='input_1_57' type='file' class='medium' aria-describedby='extensions_message' tabindex='139' /><span id='extensions_message' class='screen-reader-text'></span></div></li><li id='field_1_58' class='gfield field_sublabel_above field_description_above' ><label class='gfield_label' for='input_1_58' >Please provide any pool access info that would be helpful to participants</label><div class='ginput_container'>\n          <textarea name='input_58' id='input_1_58' class='textarea medium' tabindex='140'  placeholder='(Gated community access, how you would like people to enter pool area, etc.)'  rows='10' cols='50'></textarea>\n        </div></li></ul>\n                    </div>\n                    <div class='gform_page_footer'>\n                        <input type='button' id='gform_previous_button_1_29' class='gform_previous_button button' value='Previous' tabindex='142' onclick='jQuery(\"#gform_target_page_number_1\").val(\"3\");  jQuery(\"#gform_1\").trigger(\"submit\",[true]); ' /> <input type='button' id='gform_next_button_1_29' class='gform_next_button button' value='Next' tabindex='141' onclick='jQuery(\"#gform_target_page_number_1\").val(\"5\");  jQuery(\"#gform_1\").trigger(\"submit\",[true]); ' /> \n                    </div>\n                </div>\n                <div id='gform_page_1_5' class='gform_page' style='display:none;'>\n                    <div class='gform_page_fields'>\n                        <ul id='gform_fields_1_5' class='gform_fields top_label form_sublabel_above description_above'><li id='field_1_43' class='gfield gfield_price gfield_price_1_43 gfield_product_1_43 field_sublabel_above field_description_above' ><label class='gfield_label' for='input_1_43_1' >Deposit (Per Student)</label><div class='ginput_container'>\n          <input type='hidden' name='input_43.1' value='Deposit (Per Student)' class='gform_hidden' />\n          <span class='ginput_product_price_label'>Price:</span> <span class='ginput_product_price' id='input_1_43'>$160.00</span>\n          <input type='hidden' name='input_43.2' id='ginput_base_price_1_43' class='gform_hidden' value='$160.00'/>\n           <span class='ginput_quantity_label'>Quantity:</span> <input type='text' name='input_43.3' value='' id='ginput_quantity_1_43' class='ginput_quantity' size='10'  tabindex='143'/>\n        </div></li><li id='field_1_60' class='gfield field_sublabel_above field_description_above' ><label class='gfield_label'  >Early Bird Special</label><div class='gfield_description'>Take advantage of $40 off per student if you pay in full today.</div><div class='ginput_container'><ul class='gfield_checkbox' id='input_1_60'><li class='gchoice_1_60_1'>\n                <input name='input_60.1' type='checkbox'  value='I would like to pay in full to take advantage of the discount'  id='choice_1_60_1' tabindex='144'  />\n                <label for='choice_1_60_1' id='label_1_60_1'>I would like to pay in full to take advantage of the discount</label>\n              </li></ul></div></li><li id='field_1_59' class='gfield field_sublabel_above field_description_above' ><label class='gfield_label' for='input_1_59' >Coupon Code</label><div class='ginput_container'><input name='input_59' id='input_1_59' type='text' value='' class='medium'  tabindex='145'   /></div></li><li id='field_1_31' class='gfield gfield_price gfield_price_1_ gfield_total gfield_total_1_ field_sublabel_above field_description_above' ><label class='gfield_label' for='input_1_31' >Total</label><div class='gfield_description'>If you are hosting multiple groups, your host discount will be applied to your balance due on the first day of classes.</div><div class='ginput_container'>\n            <span class='ginput_total ginput_total_1'>$0.00</span>\n            <input type='hidden' name='input_31' id='input_1_31' class='gform_hidden'/>\n          </div></li><li id='field_1_61' class='gfield field_sublabel_above field_description_above' ><label class='gfield_label' for='input_1_61_1' >Billing Address</label>    \n                    <div class='ginput_complex ginput_container has_street has_street2 has_city has_state has_zip has_country' id='input_1_61' >\n                         <span class='ginput_full address_line_1' id='input_1_61_1_container' >\n                                        <label for='input_1_61_1' id='input_1_61_1_label' >Street Address</label>\n                                        <input type='text' name='input_61.1' id='input_1_61_1' value='' tabindex='146'  />\n                                    </span><span class='ginput_full address_line_2' id='input_1_61_2_container' >\n                                        <label for='input_1_61_2' id='input_1_61_2_label' >Address Line 2</label>\n                                        <input type='text' name='input_61.2' id='input_1_61_2' value='' tabindex='147'  />\n                                    </span><span class='ginput_left address_city' id='input_1_61_3_container' >\n                                    <label for='input_1_61_3' id='input_1_61_3_label' >City</label>\n                                    <input type='text' name='input_61.3' id='input_1_61_3' value='' tabindex='148'  />\n                                 </span><span class='ginput_right address_state' id='input_1_61_4_container' >\n                                        <label for='input_1_61_4' id='input_1_61_4_label' >State / Province / Region</label>\n                                        <input type='text' name='input_61.4' id='input_1_61_4' value='' tabindex='150'    />\n                                      </span><span class='ginput_left address_zip' id='input_1_61_5_container' >\n                                    <label for='input_1_61_5' id='input_1_61_5_label' >ZIP / Postal Code</label>\n                                    <input type='text' name='input_61.5' id='input_1_61_5' value='' tabindex='151'  />\n                                </span><span class='ginput_right address_country' id='input_1_61_6_container' >\n                                        <label for='input_1_61_6' id='input_1_61_6_label' >Country</label>\n                                        <select name='input_61.6' id='input_1_61_6' tabindex='152' ><option value='' ></option><option value='Afghanistan' >Afghanistan</option><option value='Albania' >Albania</option><option value='Algeria' >Algeria</option><option value='American Samoa' >American Samoa</option><option value='Andorra' >Andorra</option><option value='Angola' >Angola</option><option value='Antigua and Barbuda' >Antigua and Barbuda</option><option value='Argentina' >Argentina</option><option value='Armenia' >Armenia</option><option value='Australia' >Australia</option><option value='Austria' >Austria</option><option value='Azerbaijan' >Azerbaijan</option><option value='Bahamas' >Bahamas</option><option value='Bahrain' >Bahrain</option><option value='Bangladesh' >Bangladesh</option><option value='Barbados' >Barbados</option><option value='Belarus' >Belarus</option><option value='Belgium' >Belgium</option><option value='Belize' >Belize</option><option value='Benin' >Benin</option><option value='Bermuda' >Bermuda</option><option value='Bhutan' >Bhutan</option><option value='Bolivia' >Bolivia</option><option value='Bosnia and Herzegovina' >Bosnia and Herzegovina</option><option value='Botswana' >Botswana</option><option value='Brazil' >Brazil</option><option value='Brunei' >Brunei</option><option value='Bulgaria' >Bulgaria</option><option value='Burkina Faso' >Burkina Faso</option><option value='Burundi' >Burundi</option><option value='Cambodia' >Cambodia</option><option value='Cameroon' >Cameroon</option><option value='Canada' >Canada</option><option value='Cape Verde' >Cape Verde</option><option value='Cayman Islands' >Cayman Islands</option><option value='Central African Republic' >Central African Republic</option><option value='Chad' >Chad</option><option value='Chile' >Chile</option><option value='China' >China</option><option value='Colombia' >Colombia</option><option value='Comoros' >Comoros</option><option value='Congo, Democratic Republic of the' >Congo, Democratic Republic of the</option><option value='Congo, Republic of the' >Congo, Republic of the</option><option value='Costa Rica' >Costa Rica</option><option value='Côte d&#039;Ivoire' >Côte d&#039;Ivoire</option><option value='Croatia' >Croatia</option><option value='Cuba' >Cuba</option><option value='Cyprus' >Cyprus</option><option value='Czech Republic' >Czech Republic</option><option value='Denmark' >Denmark</option><option value='Djibouti' >Djibouti</option><option value='Dominica' >Dominica</option><option value='Dominican Republic' >Dominican Republic</option><option value='East Timor' >East Timor</option><option value='Ecuador' >Ecuador</option><option value='Egypt' >Egypt</option><option value='El Salvador' >El Salvador</option><option value='Equatorial Guinea' >Equatorial Guinea</option><option value='Eritrea' >Eritrea</option><option value='Estonia' >Estonia</option><option value='Ethiopia' >Ethiopia</option><option value='Faroe Islands' >Faroe Islands</option><option value='Fiji' >Fiji</option><option value='Finland' >Finland</option><option value='France' >France</option><option value='French Polynesia' >French Polynesia</option><option value='Gabon' >Gabon</option><option value='Gambia' >Gambia</option><option value='Georgia' >Georgia</option><option value='Germany' >Germany</option><option value='Ghana' >Ghana</option><option value='Greece' >Greece</option><option value='Greenland' >Greenland</option><option value='Grenada' >Grenada</option><option value='Guam' >Guam</option><option value='Guatemala' >Guatemala</option><option value='Guinea' >Guinea</option><option value='Guinea-Bissau' >Guinea-Bissau</option><option value='Guyana' >Guyana</option><option value='Haiti' >Haiti</option><option value='Honduras' >Honduras</option><option value='Hong Kong' >Hong Kong</option><option value='Hungary' >Hungary</option><option value='Iceland' >Iceland</option><option value='India' >India</option><option value='Indonesia' >Indonesia</option><option value='Iran' >Iran</option><option value='Iraq' >Iraq</option><option value='Ireland' >Ireland</option><option value='Israel' >Israel</option><option value='Italy' >Italy</option><option value='Jamaica' >Jamaica</option><option value='Japan' >Japan</option><option value='Jordan' >Jordan</option><option value='Kazakhstan' >Kazakhstan</option><option value='Kenya' >Kenya</option><option value='Kiribati' >Kiribati</option><option value='North Korea' >North Korea</option><option value='South Korea' >South Korea</option><option value='Kosovo' >Kosovo</option><option value='Kuwait' >Kuwait</option><option value='Kyrgyzstan' >Kyrgyzstan</option><option value='Laos' >Laos</option><option value='Latvia' >Latvia</option><option value='Lebanon' >Lebanon</option><option value='Lesotho' >Lesotho</option><option value='Liberia' >Liberia</option><option value='Libya' >Libya</option><option value='Liechtenstein' >Liechtenstein</option><option value='Lithuania' >Lithuania</option><option value='Luxembourg' >Luxembourg</option><option value='Macedonia' >Macedonia</option><option value='Madagascar' >Madagascar</option><option value='Malawi' >Malawi</option><option value='Malaysia' >Malaysia</option><option value='Maldives' >Maldives</option><option value='Mali' >Mali</option><option value='Malta' >Malta</option><option value='Marshall Islands' >Marshall Islands</option><option value='Mauritania' >Mauritania</option><option value='Mauritius' >Mauritius</option><option value='Mexico' >Mexico</option><option value='Micronesia' >Micronesia</option><option value='Moldova' >Moldova</option><option value='Monaco' >Monaco</option><option value='Mongolia' >Mongolia</option><option value='Montenegro' >Montenegro</option><option value='Morocco' >Morocco</option><option value='Mozambique' >Mozambique</option><option value='Myanmar' >Myanmar</option><option value='Namibia' >Namibia</option><option value='Nauru' >Nauru</option><option value='Nepal' >Nepal</option><option value='Netherlands' >Netherlands</option><option value='New Zealand' >New Zealand</option><option value='Nicaragua' >Nicaragua</option><option value='Niger' >Niger</option><option value='Nigeria' >Nigeria</option><option value='Northern Mariana Islands' >Northern Mariana Islands</option><option value='Norway' >Norway</option><option value='Oman' >Oman</option><option value='Pakistan' >Pakistan</option><option value='Palau' >Palau</option><option value='Palestine, State of' >Palestine, State of</option><option value='Panama' >Panama</option><option value='Papua New Guinea' >Papua New Guinea</option><option value='Paraguay' >Paraguay</option><option value='Peru' >Peru</option><option value='Philippines' >Philippines</option><option value='Poland' >Poland</option><option value='Portugal' >Portugal</option><option value='Puerto Rico' >Puerto Rico</option><option value='Qatar' >Qatar</option><option value='Romania' >Romania</option><option value='Russia' >Russia</option><option value='Rwanda' >Rwanda</option><option value='Saint Kitts and Nevis' >Saint Kitts and Nevis</option><option value='Saint Lucia' >Saint Lucia</option><option value='Saint Vincent and the Grenadines' >Saint Vincent and the Grenadines</option><option value='Samoa' >Samoa</option><option value='San Marino' >San Marino</option><option value='Sao Tome and Principe' >Sao Tome and Principe</option><option value='Saudi Arabia' >Saudi Arabia</option><option value='Senegal' >Senegal</option><option value='Serbia' >Serbia</option><option value='Seychelles' >Seychelles</option><option value='Sierra Leone' >Sierra Leone</option><option value='Singapore' >Singapore</option><option value='Sint Maarten' >Sint Maarten</option><option value='Slovakia' >Slovakia</option><option value='Slovenia' >Slovenia</option><option value='Solomon Islands' >Solomon Islands</option><option value='Somalia' >Somalia</option><option value='South Africa' >South Africa</option><option value='Spain' >Spain</option><option value='Sri Lanka' >Sri Lanka</option><option value='Sudan' >Sudan</option><option value='Sudan, South' >Sudan, South</option><option value='Suriname' >Suriname</option><option value='Swaziland' >Swaziland</option><option value='Sweden' >Sweden</option><option value='Switzerland' >Switzerland</option><option value='Syria' >Syria</option><option value='Taiwan' >Taiwan</option><option value='Tajikistan' >Tajikistan</option><option value='Tanzania' >Tanzania</option><option value='Thailand' >Thailand</option><option value='Togo' >Togo</option><option value='Tonga' >Tonga</option><option value='Trinidad and Tobago' >Trinidad and Tobago</option><option value='Tunisia' >Tunisia</option><option value='Turkey' >Turkey</option><option value='Turkmenistan' >Turkmenistan</option><option value='Tuvalu' >Tuvalu</option><option value='Uganda' >Uganda</option><option value='Ukraine' >Ukraine</option><option value='United Arab Emirates' >United Arab Emirates</option><option value='United Kingdom' >United Kingdom</option><option value='United States' selected='selected'>United States</option><option value='Uruguay' >Uruguay</option><option value='Uzbekistan' >Uzbekistan</option><option value='Vanuatu' >Vanuatu</option><option value='Vatican City' >Vatican City</option><option value='Venezuela' >Venezuela</option><option value='Vietnam' >Vietnam</option><option value='Virgin Islands, British' >Virgin Islands, British</option><option value='Virgin Islands, U.S.' >Virgin Islands, U.S.</option><option value='Yemen' >Yemen</option><option value='Zambia' >Zambia</option><option value='Zimbabwe' >Zimbabwe</option></select>\n                                    </span>\n                    <div class='gf_clear gf_clear_complex'></div>\n                </div></li><li id='field_1_32' class='gfield gfield_creditcard_warning field_sublabel_above field_description_above' ><div class='gfield_creditcard_warning_message'><span>This page is unsecured. Do not enter a real credit card number! Use this field only for testing purposes. </span></div><label class='gfield_label' for='input_1_32_1' >Credit Card</label><div class='ginput_complex ginput_container' id='input_1_32'><span class='ginput_full' id='input_1_32_1_container' >\n                                    <div class='gform_card_icon_container gform_card_icon_style1'><div class='gform_card_icon gform_card_icon_amex' >American Express</div><div class='gform_card_icon gform_card_icon_discover' >Discover</div><div class='gform_card_icon gform_card_icon_mastercard' >MasterCard</div><div class='gform_card_icon gform_card_icon_visa' >Visa</div></div>\n                                    <label for='input_1_32_1' id='input_1_32_1_label' >Card Number</label>\n                                    <input type='text' name='input_32.1' id='input_1_32_1' value='' tabindex='153'  onchange='gformMatchCard(\"input_1_32_1\");' onkeyup='gformMatchCard(\"input_1_32_1\");'   />\n                                 </span><span class='ginput_full ginput_cardextras' id='input_1_32_2_container'>\n                                            <span class='ginput_cardinfo_left' id='input_1_32_2_cardinfo_left'>\n                                                <span class='ginput_card_expiration_container ginput_card_field'>\n                                                    <label for='input_1_32_2_month' >Expiration Date</label>\n                                                    <select name='input_32.2[]' id='input_1_32_2_month' tabindex='154'  class='ginput_card_expiration ginput_card_expiration_month'>\n                                                        <option value=''>Month</option><option value='1' >01</option><option value='2' >02</option><option value='3' >03</option><option value='4' >04</option><option value='5' >05</option><option value='6' >06</option><option value='7' >07</option><option value='8' >08</option><option value='9' >09</option><option value='10' >10</option><option value='11' >11</option><option value='12' >12</option>\n                                                    </select>\n                                                    <select name='input_32.2[]' id='input_1_32_2_year' tabindex='155'  class='ginput_card_expiration ginput_card_expiration_year'>\n                                                        <option value=''>Year</option><option value='2015' >2015</option><option value='2016' >2016</option><option value='2017' >2017</option><option value='2018' >2018</option><option value='2019' >2019</option><option value='2020' >2020</option><option value='2021' >2021</option><option value='2022' >2022</option><option value='2023' >2023</option><option value='2024' >2024</option><option value='2025' >2025</option><option value='2026' >2026</option><option value='2027' >2027</option><option value='2028' >2028</option><option value='2029' >2029</option><option value='2030' >2030</option><option value='2031' >2031</option><option value='2032' >2032</option><option value='2033' >2033</option><option value='2034' >2034</option>\n                                                    </select>\n                                                </span>\n                                            </span><span class='ginput_cardinfo_right' id='input_1_32_2_cardinfo_right'>\n                                                <label for='input_1_32_3' >Security Code</label>\n                                                <input type='text' name='input_32.3' id='input_1_32_3' tabindex='156'  class='ginput_card_security_code' value=''    />\n                                                <span class='ginput_card_security_code_icon'>&nbsp;</span>\n                                             </span>\n                                        </span><span class='ginput_full' id='input_1_32_5_container'>\n                                            <label for='input_1_32_5' id='input_1_32_5_label' >Cardholder Name</label>\n                                            <input type='text' name='input_32.5' id='input_1_32_5' value='' tabindex='157'  />\n                                        </span> </div></li><li id='field_1_55' class='gfield gfield_html gfield_html_formatted gfield_no_follows_desc field_sublabel_above field_description_above' ><small>I understand that my credit card will be charged the deposit amount of $180 (or full payment of $360 with early registration) when I submit this registration form. My submission of this registration form does not guarantee my requested date and time. Spots are filled on a first-come, first-served basis and not all requested times and locations may be available when this form is received. I understand I will be contacted when an opening becomes available and given the option to accept or decline the scheduled date/time or group in a timely manner (5 business days or less). Once my approval for the spot is given, I understand it is reserved for me and my deposit of $180 becomes non-refundable. I understand my balance will be charged to my credit card the day of the first lesson. If I need to cancel or change my reserved time, my deposit may be credited to another session within the same calendar year only if notice is given at least one month prior to my reserved start date. If I cancel or withdraw from a spot that has been reserved for me within one month of the start date. I understand that I will lose my deposit if the spot cannot be filled. If the opening is able to be filled, I may receive a credit towards another session within the same calendar year if available. I understand that each instructor has limited time and therefore make-up lessons for missed classes are not always available. For hosts: I understand that if I agree to host one or more groups, Mike O’Brien Swim, Inc. reserves the right to fill any openings one month prior to the start of the session (openings are defined as any spots for which a registration form and payment have not been received).</small></li><li id='field_1_62' class='gfield field_sublabel_above field_description_above' ><label class='gfield_label'  ></label><div class='ginput_container'><ul class='gfield_checkbox' id='input_1_62'><li class='gchoice_1_62_1'>\n                <input name='input_62.1' type='checkbox'  value='I have read and agree to the Terms of Service'  id='choice_1_62_1' tabindex='158'  />\n                <label for='choice_1_62_1' id='label_1_62_1'>I have read and agree to the Terms of Service</label>\n              </li></ul></div></li><li id='field_1_91' class='gfield gform_validation_container field_sublabel_above field_description_above' ><label class='gfield_label' for='input_1_91' >Email</label><div class='gfield_description'>This field is for validation purposes and should be left unchanged.</div><div class='ginput_container'><input name='input_91' id='input_1_91' type='text' value='' /></div></li>\n                            </ul></div>\n        <div class='gform_page_footer top_label'><input type='submit' id='gform_previous_button_1' class='gform_previous_button button' value='Previous' tabindex='159' onclick='if(window[\"gf_submitting_1\"]){return false;}  window[\"gf_submitting_1\"]=true;  ' /> <input type='submit' id='gform_submit_button_1' class='gform_button button' value='Submit' tabindex='160' onclick='if(window[\"gf_submitting_1\"]){return false;}  window[\"gf_submitting_1\"]=true;  ' /><!-- Begin Daddy Analytics fields --><input type=\"hidden\" name=\"\" value=\"\" /><input type=\"hidden\" name=\"\" value=\"\" /><!-- End Daddy Analytics fields --> \n            <input type='hidden' class='gform_hidden' name='is_submit_1' value='1' />\n            <input type='hidden' class='gform_hidden' name='gform_submit' value='1' />\n            \n            <input type='hidden' class='gform_hidden' name='gform_unique_id' value='' />\n            <input type='hidden' class='gform_hidden' name='state_1' value='WyJ7XCI0My4xXCI6XCJmZTEyYTA4Njc4ZjYyMjE2ZjdmNDVlMWZmYTMwOTczMVwiLFwiNDMuMlwiOlwiN2M2ZGRiODZjYzY5ODc4MjA3NGFkYjJkNTVmNGI2MDhcIn0iLCJkNGUxMzgxYjA2ZmRkYTUyMWE2MmVlZTgxZGYxODc3OCJd' />\n            <input type='hidden' class='gform_hidden' name='gform_target_page_number_1' id='gform_target_page_number_1' value='2' />\n            <input type='hidden' class='gform_hidden' name='gform_source_page_number_1' id='gform_source_page_number_1' value='1' />\n            <input type='hidden' name='gform_field_values' value='' />\n            \n        </div>\n                        </div></div>\n                        </form>\n                        </div><script type='text/javascript'> if(typeof gf_global == 'undefined') var gf_global = {\"gf_currency_config\":{\"name\":\"U.S. Dollar\",\"symbol_left\":\"$\",\"symbol_right\":\"\",\"symbol_padding\":\"\",\"thousand_separator\":\",\",\"decimal_separator\":\".\",\"decimals\":2},\"base_url\":\"http:\\/\\/mobs.akinsparker.com\\/wp-content\\/plugins\\/gravityforms\",\"number_formats\":[],\"spinnerUrl\":\"http:\\/\\/mobs.akinsparker.com\\/wp-content\\/plugins\\/gravityforms\\/images\\/spinner.gif\"};jQuery(document).bind('gform_post_render', function(event, formId, currentPage){if(formId == 1) {if(window['jQuery']){if(!window['gf_form_conditional_logic'])window['gf_form_conditional_logic'] = new Array();window['gf_form_conditional_logic'][1] = {'logic' : {34: {\"field\":{\"actionType\":\"show\",\"logicType\":\"any\",\"rules\":[{\"fieldId\":\"16\",\"operator\":\"is\",\"value\":\"1\"},{\"fieldId\":\"16\",\"operator\":\"is\",\"value\":\"2\"},{\"fieldId\":\"16\",\"operator\":\"is\",\"value\":\"3\"},{\"fieldId\":\"16\",\"operator\":\"is\",\"value\":\"4\"}]},\"nextButton\":null,\"section\":{\"actionType\":\"show\",\"logicType\":\"any\",\"rules\":[{\"fieldId\":\"16\",\"operator\":\"is\",\"value\":\"1\"},{\"fieldId\":\"16\",\"operator\":\"is\",\"value\":\"2\"},{\"fieldId\":\"16\",\"operator\":\"is\",\"value\":\"3\"},{\"fieldId\":\"16\",\"operator\":\"is\",\"value\":\"4\"}]}},39: {\"field\":{\"actionType\":\"show\",\"logicType\":\"any\",\"rules\":[{\"fieldId\":\"16\",\"operator\":\"is\",\"value\":\"2\"},{\"fieldId\":\"16\",\"operator\":\"is\",\"value\":\"3\"},{\"fieldId\":\"16\",\"operator\":\"is\",\"value\":\"4\"}]},\"nextButton\":null,\"section\":{\"actionType\":\"show\",\"logicType\":\"any\",\"rules\":[{\"fieldId\":\"16\",\"operator\":\"is\",\"value\":\"2\"},{\"fieldId\":\"16\",\"operator\":\"is\",\"value\":\"3\"},{\"fieldId\":\"16\",\"operator\":\"is\",\"value\":\"4\"}]}},40: {\"field\":{\"actionType\":\"show\",\"logicType\":\"any\",\"rules\":[{\"fieldId\":\"16\",\"operator\":\"is\",\"value\":\"3\"},{\"fieldId\":\"16\",\"operator\":\"is\",\"value\":\"4\"}]},\"nextButton\":null,\"section\":{\"actionType\":\"show\",\"logicType\":\"any\",\"rules\":[{\"fieldId\":\"16\",\"operator\":\"is\",\"value\":\"3\"},{\"fieldId\":\"16\",\"operator\":\"is\",\"value\":\"4\"}]}},41: {\"field\":{\"actionType\":\"show\",\"logicType\":\"any\",\"rules\":[{\"fieldId\":\"16\",\"operator\":\"is\",\"value\":\"4\"}]},\"nextButton\":null,\"section\":{\"actionType\":\"show\",\"logicType\":\"any\",\"rules\":[{\"fieldId\":\"16\",\"operator\":\"is\",\"value\":\"4\"}]}},65: {\"field\":{\"actionType\":\"show\",\"logicType\":\"all\",\"rules\":[{\"fieldId\":\"64\",\"operator\":\"isnot\",\"value\":\"- Please Select -\"}]},\"nextButton\":null,\"section\":\"\"},69: {\"field\":{\"actionType\":\"show\",\"logicType\":\"all\",\"rules\":[{\"fieldId\":\"67\",\"operator\":\"isnot\",\"value\":\"- Please Select -\"}]},\"nextButton\":null,\"section\":\"\"},68: {\"field\":{\"actionType\":\"show\",\"logicType\":\"all\",\"rules\":[{\"fieldId\":\"66\",\"operator\":\"isnot\",\"value\":\"- Please Select -\"}]},\"nextButton\":null,\"section\":\"\"},70: {\"field\":{\"actionType\":\"show\",\"logicType\":\"any\",\"rules\":[{\"fieldId\":\"16\",\"operator\":\"is\",\"value\":\"2\"},{\"fieldId\":\"16\",\"operator\":\"is\",\"value\":\"3\"},{\"fieldId\":\"16\",\"operator\":\"is\",\"value\":\"4\"}]},\"nextButton\":null,\"section\":{\"actionType\":\"show\",\"logicType\":\"any\",\"rules\":[{\"fieldId\":\"16\",\"operator\":\"is\",\"value\":\"2\"},{\"fieldId\":\"16\",\"operator\":\"is\",\"value\":\"3\"},{\"fieldId\":\"16\",\"operator\":\"is\",\"value\":\"4\"}]}},72: {\"field\":{\"actionType\":\"show\",\"logicType\":\"all\",\"rules\":[{\"fieldId\":\"71\",\"operator\":\"isnot\",\"value\":\"- Please Select -\"}]},\"nextButton\":null,\"section\":{\"actionType\":\"show\",\"logicType\":\"any\",\"rules\":[{\"fieldId\":\"16\",\"operator\":\"is\",\"value\":\"2\"},{\"fieldId\":\"16\",\"operator\":\"is\",\"value\":\"3\"},{\"fieldId\":\"16\",\"operator\":\"is\",\"value\":\"4\"}]}},75: {\"field\":{\"actionType\":\"show\",\"logicType\":\"all\",\"rules\":[{\"fieldId\":\"74\",\"operator\":\"isnot\",\"value\":\"- Please Select -\"}]},\"nextButton\":null,\"section\":{\"actionType\":\"show\",\"logicType\":\"any\",\"rules\":[{\"fieldId\":\"16\",\"operator\":\"is\",\"value\":\"2\"},{\"fieldId\":\"16\",\"operator\":\"is\",\"value\":\"3\"},{\"fieldId\":\"16\",\"operator\":\"is\",\"value\":\"4\"}]}},76: {\"field\":{\"actionType\":\"show\",\"logicType\":\"all\",\"rules\":[{\"fieldId\":\"73\",\"operator\":\"isnot\",\"value\":\"- Please Select -\"}]},\"nextButton\":null,\"section\":{\"actionType\":\"show\",\"logicType\":\"any\",\"rules\":[{\"fieldId\":\"16\",\"operator\":\"is\",\"value\":\"2\"},{\"fieldId\":\"16\",\"operator\":\"is\",\"value\":\"3\"},{\"fieldId\":\"16\",\"operator\":\"is\",\"value\":\"4\"}]}},77: {\"field\":{\"actionType\":\"show\",\"logicType\":\"any\",\"rules\":[{\"fieldId\":\"16\",\"operator\":\"is\",\"value\":\"3\"},{\"fieldId\":\"16\",\"operator\":\"is\",\"value\":\"4\"}]},\"nextButton\":null,\"section\":{\"actionType\":\"show\",\"logicType\":\"any\",\"rules\":[{\"fieldId\":\"16\",\"operator\":\"is\",\"value\":\"3\"},{\"fieldId\":\"16\",\"operator\":\"is\",\"value\":\"4\"}]}},85: {\"field\":{\"actionType\":\"show\",\"logicType\":\"all\",\"rules\":[{\"fieldId\":\"79\",\"operator\":\"isnot\",\"value\":\"- Please Select -\"}]},\"nextButton\":null,\"section\":{\"actionType\":\"show\",\"logicType\":\"any\",\"rules\":[{\"fieldId\":\"16\",\"operator\":\"is\",\"value\":\"3\"},{\"fieldId\":\"16\",\"operator\":\"is\",\"value\":\"4\"}]}},87: {\"field\":{\"actionType\":\"show\",\"logicType\":\"all\",\"rules\":[{\"fieldId\":\"80\",\"operator\":\"isnot\",\"value\":\"- Please Select -\"}]},\"nextButton\":null,\"section\":{\"actionType\":\"show\",\"logicType\":\"any\",\"rules\":[{\"fieldId\":\"16\",\"operator\":\"is\",\"value\":\"3\"},{\"fieldId\":\"16\",\"operator\":\"is\",\"value\":\"4\"}]}},86: {\"field\":{\"actionType\":\"show\",\"logicType\":\"all\",\"rules\":[{\"fieldId\":\"81\",\"operator\":\"isnot\",\"value\":\"- Please Select -\"}]},\"nextButton\":null,\"section\":{\"actionType\":\"show\",\"logicType\":\"any\",\"rules\":[{\"fieldId\":\"16\",\"operator\":\"is\",\"value\":\"3\"},{\"fieldId\":\"16\",\"operator\":\"is\",\"value\":\"4\"}]}},78: {\"field\":{\"actionType\":\"show\",\"logicType\":\"all\",\"rules\":[{\"fieldId\":\"16\",\"operator\":\"is\",\"value\":\"4\"}]},\"nextButton\":null,\"section\":{\"actionType\":\"show\",\"logicType\":\"all\",\"rules\":[{\"fieldId\":\"16\",\"operator\":\"is\",\"value\":\"4\"}]}},88: {\"field\":{\"actionType\":\"show\",\"logicType\":\"all\",\"rules\":[{\"fieldId\":\"82\",\"operator\":\"isnot\",\"value\":\"- Please Select -\"}]},\"nextButton\":null,\"section\":{\"actionType\":\"show\",\"logicType\":\"all\",\"rules\":[{\"fieldId\":\"16\",\"operator\":\"is\",\"value\":\"4\"}]}},89: {\"field\":{\"actionType\":\"show\",\"logicType\":\"all\",\"rules\":[{\"fieldId\":\"83\",\"operator\":\"isnot\",\"value\":\"- Please Select -\"}]},\"nextButton\":null,\"section\":{\"actionType\":\"show\",\"logicType\":\"all\",\"rules\":[{\"fieldId\":\"16\",\"operator\":\"is\",\"value\":\"4\"}]}},90: {\"field\":{\"actionType\":\"show\",\"logicType\":\"all\",\"rules\":[{\"fieldId\":\"84\",\"operator\":\"isnot\",\"value\":\"- Please Select -\"}]},\"nextButton\":null,\"section\":{\"actionType\":\"show\",\"logicType\":\"all\",\"rules\":[{\"fieldId\":\"16\",\"operator\":\"is\",\"value\":\"4\"}]}},51: {\"field\":{\"actionType\":\"show\",\"logicType\":\"any\",\"rules\":[{\"fieldId\":\"50\",\"operator\":\"is\",\"value\":\"All\"},{\"fieldId\":\"50\",\"operator\":\"is\",\"value\":\"Some\"}]},\"nextButton\":null,\"section\":\"\"} }, 'dependents' : {34: [34,11,12,13,14],39: [39,17,18,19,20],40: [40,21,22,23,24],41: [41,25,26,27,28],65: [65],69: [69],68: [68],70: [70,71,72,74,75,73,76],72: [72],75: [75],76: [76],77: [77,79,85,80,87,81,86],85: [85],87: [87],86: [86],78: [78,82,88,83,89,84,90],88: [88],89: [89],90: [90],51: [51] }, 'animation' : 1 , 'defaults' : {\"2\":{\"2.2\":\"\",\"2.3\":\"\",\"2.4\":\"\",\"2.6\":\"\",\"2.8\":\"\"},\"1\":{\"1.2\":\"\",\"1.3\":\"\",\"1.4\":\"\",\"1.6\":\"\",\"1.8\":\"\"},\"46\":{\"46.1\":\"\",\"46.2\":\"\",\"46.3\":\"\",\"46.4\":\"California\",\"46.5\":\"\",\"46.6\":\"United States\"},\"5\":{\"5\":\"\",\"5.2\":\"\"},\"16\":[\"choice_1_16_0\"],\"12\":{\"m\":\"\",\"d\":\"\",\"y\":\"\"},\"13\":\"First Time\",\"18\":{\"m\":\"\",\"d\":\"\",\"y\":\"\"},\"22\":{\"m\":\"\",\"d\":\"\",\"y\":\"\"},\"26\":{\"m\":\"\",\"d\":\"\",\"y\":\"\"},\"56\":{\"56.1\":\"\",\"56.2\":\"\",\"56.3\":\"\",\"56.4\":\"California\",\"56.5\":\"\",\"56.6\":\"United States\"},\"43\":{\"43.1\":\"\",\"43.2\":\"\",\"43.3\":\"\"},\"61\":{\"61.1\":\"\",\"61.2\":\"\",\"61.3\":\"\",\"61.4\":\"\",\"61.5\":\"\",\"61.6\":\"United States\"},\"32\":{\"32.1\":\"\",\"32.2_month\":\"\",\"32.2_year\":\"\",\"32.3\":\"\",\"32.4\":\"\",\"32.5\":\"\"}} }; if(!window['gf_number_format'])window['gf_number_format'] = 'decimal_dot';jQuery(document).ready(function(){gf_apply_rules(1, [34,39,40,41,65,69,68,70,72,75,76,77,85,87,86,78,88,89,90,51], true);jQuery('#gform_wrapper_1').show();jQuery(document).trigger('gform_post_conditional_logic', [1, null, true]);} );} if(window[\"gformInitPriceFields\"]) jQuery(document).ready(function(){gformInitPriceFields();} );if(!window['gf_text']){window['gf_text'] = new Array();} window['gf_text']['password_blank'] = 'Strength indicator'; window['gf_text']['password_mismatch'] = 'Mismatch';window['gf_text']['password_bad'] = 'Bad'; window['gf_text']['password_short'] = 'Short'; window['gf_text']['password_good'] = 'Good'; window['gf_text']['password_strong'] = 'Strong';gformShowPasswordStrength(\"input_1_5\");if(typeof Placeholders != 'undefined'){\n                        Placeholders.enable();\n                    }if(!/(android)/i.test(navigator.userAgent)){jQuery('#input_1_3').mask('(999) 999-9999').bind('keypress', function(e){if(e.which == 13){jQuery(this).blur();} } );}if(!/(android)/i.test(navigator.userAgent)){jQuery('#input_1_45').mask('(999) 999-9999').bind('keypress', function(e){if(e.which == 13){jQuery(this).blur();} } );}if(!window['gf_cc_rules']){window['gf_cc_rules'] = new Array(); } window['gf_cc_rules'] = {\"amex\":[\"34\",\"37\"],\"discover\":[\"6011\",\"622\",\"64\",\"65\"],\"mastercard\":[\"51\",\"52\",\"53\",\"54\",\"55\"],\"visa\":[\"4\",\"417500\",\"4917\",\"4913\",\"4508\",\"4844\"],\"jcb\":[\"35\"],\"maestro\":[\"5018\",\"5020\",\"5038\",\"6304\",\"6759\",\"6761\"]}; jQuery(document).ready(function(){ { gformMatchCard(\"input_1_32_1\"); } } );} } );jQuery(document).bind('gform_post_conditional_logic', function(event, formId, fields, isInit){} );</script><script type='text/javascript'> jQuery(document).ready(function(){jQuery(document).trigger('gform_post_render', [1, 1]) } ); </script>\n                </section>\n\n              </article>\n\n              \n            </main>\n\n        </div>\n\n      </div>\n\n\n    </div>\n\n          <!-- ShiftNav Main Toggle -->\n    <div id=\"shiftnav-toggle-main\" class=\"shiftnav-toggle-main-align-center shiftnav-toggle-edge-left shiftnav-toggle-icon-x shiftnav-toggle-main-align-center shiftnav-toggle-edge-left shiftnav-toggle-icon-x\" data-shiftnav-target=\"shiftnav-main\"><span id=\"shiftnav-toggle-main-button\" class=\"shiftnav-toggle shiftnav-toggle-shiftnav-main shiftnav-toggle-burger\" data-shiftnav-target=\"shiftnav-main\"><i class=\"fa fa-bars\"></i></span>  <span class=\"shiftnav-main-toggle-content shiftnav-toggle-main-block\"><a href=\"http://mobs.akinsparker.com\">Mike O Brien Swim</a></span></div>  \n  <!-- /#shiftnav-toggle-main --> \n\n\n  <!-- ShiftNav #shiftnav-main -->\n  <div class=\"shiftnav shiftnav-nojs shiftnav-left-edge shiftnav-skin-light shiftnav-transition-standard\" id=\"shiftnav-main\" data-shiftnav-id=\"shiftnav-main\">\n    <div class=\"shiftnav-inner\">\n    <nav class=\"shiftnav-nav\"><ul id=\"menu-main-1\" class=\"shiftnav-menu shiftnav-targets-default shiftnav-targets-text-default shiftnav-targets-icon-default\"><li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-15 shiftnav-depth-0\"><a class=\"shiftnav-target\"  href=\"http://mobs.akinsparker.com/\">Home</a></li><li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-17 shiftnav-sub- shiftnav-depth-0\"><a class=\"shiftnav-target\"  href=\"http://mobs.akinsparker.com/about/\">About</a>\n<ul class=\"sub-menu sub-menu-1\">\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-153 shiftnav-depth-1\"><a class=\"shiftnav-target\"  href=\"http://mobs.akinsparker.com/about/the-program/\">The Program</a></li><li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-158 shiftnav-depth-1\"><a class=\"shiftnav-target\"  href=\"http://mobs.akinsparker.com/contact/\">Contact</a></li><li class=\"shiftnav-retract\"><a class=\"shiftnav-target\"><i class=\"fa fa-chevron-left\"></i> Back</a></li></ul>\n</li><li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-16 shiftnav-depth-0\"><a class=\"shiftnav-target\"  href=\"http://mobs.akinsparker.com/instruction/\">Instruction</a></li><li class=\"menu-item menu-item-type-post_type menu-item-object-page current-page-ancestor menu-item-20 shiftnav-depth-0\"><a class=\"shiftnav-target\"  href=\"http://mobs.akinsparker.com/sign-up/\">Sign-Up</a></li></ul></nav>    </div><!-- /.shiftnav-inner -->\n  </div><!-- /.shiftnav #shiftnav-main -->\n\n\n  <link rel='stylesheet' id='gforms_reset_css-css'  href='http://mobs.akinsparker.com/wp-content/plugins/gravityforms/css/formreset.min.css' type='text/css' media='all' />\n<link rel='stylesheet' id='gforms_formsmain_css-css'  href='http://mobs.akinsparker.com/wp-content/plugins/gravityforms/css/formsmain.min.css' type='text/css' media='all' />\n<link rel='stylesheet' id='gforms_ready_class_css-css'  href='http://mobs.akinsparker.com/wp-content/plugins/gravityforms/css/readyclass.min.css' type='text/css' media='all' />\n<link rel='stylesheet' id='gforms_browsers_css-css'  href='http://mobs.akinsparker.com/wp-content/plugins/gravityforms/css/browsers.min.css' type='text/css' media='all' />\n<script type='text/javascript'>\n/* <![CDATA[ */\nvar shiftnav_data = {\"shift_body\":\"on\",\"shift_body_wrapper\":\"\",\"lock_body\":\"on\",\"lock_body_x\":\"off\",\"swipe_close\":\"on\",\"swipe_open\":\"off\",\"swipe_tolerance_x\":\"150\",\"swipe_tolerance_y\":\"60\",\"swipe_edge_proximity\":\"80\",\"open_current\":\"off\",\"collapse_accordions\":\"off\",\"scroll_panel\":\"on\",\"breakpoint\":\"768\",\"touch_off_close\":\"on\",\"scroll_offset\":\"100\",\"disable_transforms\":\"off\"};\n/* ]]> */\n</script>\n<script type='text/javascript' src='http://mobs.akinsparker.com/wp-content/plugins/shiftnav-responsive-mobile-menu/assets/js/shiftnav.min.js'></script>\n<script type='text/javascript' src='http://mobs.akinsparker.com/wp-content/themes/AkinsParker-MOBS/library/js/scripts.js'></script>\n<script type='text/javascript' src='http://mobs.akinsparker.com/wp-content/plugins/gravityforms/js/conditional_logic.min.js'></script>\n<script type='text/javascript' src='http://mobs.akinsparker.com/wp-content/plugins/gravityforms/js/jquery.json-1.3.js'></script>\n<script type='text/javascript' src='http://mobs.akinsparker.com/wp-content/plugins/gravityforms/js/gravityforms.min.js'></script>\n<script type='text/javascript' src='http://mobs.akinsparker.com/wp-content/plugins/gravityforms/js/jquery.maskedinput.min.js'></script>\n<script type='text/javascript' src='http://mobs.akinsparker.com/wp-content/plugins/gravityforms/js/placeholders.jquery.min.js'></script>\n",
			"settings":
			{
				"buffer_size": 97071,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/sopae/Downloads/signup.html",
			"settings":
			{
				"buffer_size": 23845,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Swim/Entity/User.php.old",
			"settings":
			{
				"buffer_size": 4258,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Swim/Entity/Address.php",
			"settings":
			{
				"buffer_size": 2756,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Swim/Entity/Pool.php",
			"settings":
			{
				"buffer_size": 126,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Swim/Entity/StudentPreference.php",
			"settings":
			{
				"buffer_size": 107,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Swim/Entity/Student.php",
			"settings":
			{
				"buffer_size": 486,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Swim/Entity/Lesson.php",
			"settings":
			{
				"buffer_size": 3284,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Swim/Entity/HostRegistration.php",
			"settings":
			{
				"buffer_size": 1685,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Swim/Entity/Registration.php",
			"settings":
			{
				"buffer_size": 597,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Swim/Repository/RepositoryInterface.php",
			"settings":
			{
				"buffer_size": 1384,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Swim/Form/Type/GroupCodeType.php",
			"settings":
			{
				"buffer_size": 830,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Bash Build System/Bash.sublime-build",
					""
				],
				[
					"Packages/User/Chrome.sublime-build",
					""
				]
			],
			[
				"Packages/Bash Build System/Bash.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Better CoffeeScript/CoffeeScript.sublime-build",
					""
				],
				[
					"Packages/Better CoffeeScript/CoffeeScript.sublime-build",
					"Run"
				],
				[
					"Packages/User/Chrome.sublime-build",
					""
				]
			],
			[
				"Packages/User/Chrome.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 87.0,
		"last_filter": "PHP: Generate",
		"selected_items":
		[
			[
				"PHP: Generate",
				"PHP: Generate Getters and Setters"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"Snippet: ",
				"Snippet: html"
			],
			[
				"PHP Code Sniffer: ",
				"PHP Code Sniffer: Sniff this file"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"remov",
				"Package Control: Remove Package"
			],
			[
				"isnta",
				"Package Control: Install Package"
			],
			[
				"intall",
				"Package Control: Install Package"
			],
			[
				"isntall",
				"Package Control: Install Package"
			],
			[
				"ternjs",
				"TernJS: Reload"
			],
			[
				"instal ",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			]
		],
		"width": 656.0
	},
	"console":
	{
		"height": 482.0,
		"history":
		[
			"clear",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/sopae/Projects/AkinsParker",
		"/Users/sopae/Projects/AkinsParker/app",
		"/Users/sopae/Projects/AkinsParker/app/views",
		"/Users/sopae/Projects/AkinsParker/src",
		"/Users/sopae/Projects/AkinsParker/src/Swim",
		"/Users/sopae/Projects/AkinsParker/src/Swim/Entity",
		"/Users/sopae/Projects/AkinsParker/src/Swim/Form",
		"/Users/sopae/Projects/AkinsParker/src/Swim/Form/Type",
		"/Users/sopae/Projects/AkinsParker/src/Swim/Repository"
	],
	"file_history":
	[
		"/Users/sopae/Projects/AkinsParker/vendor/symfony/http-kernel/EventListener/DumpListener.php",
		"/Users/sopae/Projects/AkinsParker/app/views/form.html.twig",
		"/Users/sopae/Projects/AkinsParker/src/Swim/Repository/LikeRepository.php",
		"/Users/sopae/Projects/AkinsParker/web/less/font-awesome/path.less",
		"/Users/sopae/Library/Application Support/Sublime Text 3/Packages/PHP Getters and Setters/php-getters-setters.sublime-settings",
		"/Users/sopae/Library/Application Support/Sublime Text 3/Packages/Codebug/Default.sublime-keymap",
		"/Users/sopae/Library/Application Support/Sublime Text 3/Packages/User/Xdebug.sublime-settings",
		"/Users/sopae/Library/Application Support/Sublime Text 3/Packages/Xdebug Client/Xdebug.sublime-settings",
		"/Users/sopae/Projects/AkinsParker/swim.sublime-project",
		"/Users/sopae/Projects/AkinsParker/app/db.sql",
		"/Users/sopae/Projects/AkinsParker/app/views/host.signup.step2.html.twig",
		"/Users/sopae/Projects/AkinsParker/app/views/form.host.step2.html.twig",
		"/Users/sopae/Projects/AkinsParker/src/Swim/Controller/SignupController.php.org",
		"/Users/sopae/Projects/AkinsParker/app/views/form.host.html.twig",
		"/Users/sopae/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/sopae/Projects/AkinsParker/app/views/form.student.signup.html.twig",
		"/Users/sopae/Projects/AkinsParker/app/views/common/form_div_layout.html.twig",
		"/Users/sopae/Projects/AkinsParker/composer.json",
		"/Users/sopae/Projects/AkinsParker/app/views/host.signup.html.twig.backup",
		"/Users/sopae/Projects/AkinsParker/vendor/symfony/security/Symfony/Component/Security/Http/Firewall/ContextListener.php",
		"/Users/sopae/Projects/AkinsParker/src/Swim/Repository/UserRepository.php",
		"/Users/sopae/Projects/AkinsParker/app/db_dump.sql",
		"/Users/sopae/Projects/logiclink/Snacks/web/less/font-awesome/path.less",
		"/Users/sopae/Projects/logiclink/Snacks/web/less/bootstrap.less",
		"/Users/sopae/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/Users/sopae/Projects/logiclink/Snacks/infogenesis_php/updateInfosFromServer.php",
		"/Users/sopae/Projects/logiclink/Snacks/updateInfosFromServer.php",
		"/Users/sopae/Projects/logiclink/Snacks/src/Snack/Entity/Item.php",
		"/Users/sopae/Projects/logiclink/snacks/src/app.php",
		"/Users/sopae/Projects/logiclink/snacks/src/routes.php",
		"/Users/sopae/Projects/logiclink/snacks/src/Snack/Controller/UserController.php",
		"/Users/sopae/Projects/logiclink/snacks/app/views/items.html.twig",
		"/Users/sopae/Projects/logiclink/snacks/app/views/form.item.html.twig",
		"/Users/sopae/Projects/logiclink/snacks/src/Snack/Form/Type/ItemType.php",
		"/Users/sopae/Projects/logiclink/snacks/app/views/layout.html.twig",
		"/Users/sopae/Projects/logiclink/snacks/src/Snack/Controller/ItemController.php",
		"/Users/sopae/Projects/logiclink/snacks/src/Snack/Controller/AdminController.php",
		"/Users/sopae/Projects/logiclink/snacks/app/config/prod.php",
		"/Users/sopae/Projects/logiclink/snack/app/views/form.item.html.twig",
		"/Users/sopae/Projects/logiclink/snack/app/cache/twig/f/c/fc00bf45aff08ebd58089b6546ade169fb24c9a55ee1f24ef7eaecd8ba9a1fba.php",
		"/Users/sopae/Projects/logiclink/snack/src/Snack/Controller/ItemController.php",
		"/Users/sopae/Projects/logiclink/snack/composer.json",
		"/Users/sopae/Projects/logiclink/snack/src/Snack/Entity/Item.php",
		"/Users/sopae/Projects/logiclink/snack/src/Snack/Repository/ProductClassRepository.php",
		"/Users/sopae/Projects/logiclink/snack/src/Snack/Entity/ProductClass.php",
		"/Users/sopae/Projects/logiclink/snack/app/views/index.html.twig",
		"/Users/sopae/Projects/logiclink/snack/app/views/item.html.twig",
		"/Users/sopae/Projects/logiclink/snack/src/Snack/Form/Type/ItemType.php",
		"/Users/sopae/Projects/logiclink/snack/app/views/items.html.twig",
		"/Users/sopae/Projects/logiclink/snack/src/Snack/Repository/ItemRepository.php",
		"/Users/sopae/Projects/logiclink/snack/src/routes.php",
		"/Users/sopae/Projects/logiclink/snack/src/Snack/Controller/AdminProductClassController.php",
		"/Users/sopae/Projects/logiclink/snack/app/views/admin_classes.html.twig",
		"/Users/sopae/Projects/logiclink/snack/src/Snack/Form/Type/ProductClassType.php",
		"/Users/sopae/Projects/logiclink/snack/app/views/admin_layout.html.twig",
		"/Users/sopae/Projects/logiclink/snack/app/views/layout.html.twig",
		"/Users/sopae/Projects/logiclink/snack/src/app.php",
		"/Users/sopae/Projects/logiclink/snack/app/product_class.sql",
		"/Users/sopae/Projects/logiclink/snack/web/reset_admin_passwd.php",
		"/Users/sopae/Projects/logiclink/snack/vendor/composer/autoload_namespaces.php",
		"/Users/sopae/Projects/logiclink/snack/src/Snack/Service/SoundCloud.php",
		"/Users/sopae/Projects/logiclink/snack/src/Snack/Form/Type/UserType.php",
		"/Users/sopae/Projects/logiclink/snack/src/Snack/Entity/User.php",
		"/Users/sopae/Projects/logiclink/snack/src/Snack/Controller/UserController.php",
		"/Users/sopae/Projects/logiclink/snack/src/Snack/Controller/IndexController.php",
		"/Users/sopae/Projects/logiclink/snack/src/Snack/Controller/AdminUserController.php",
		"/Users/sopae/Projects/logiclink/snack/src/Snack/Controller/AdminItemController.php",
		"/Users/sopae/Projects/logiclink/snack/src/Snack/Controller/AdminController.php",
		"/Users/sopae/Projects/logiclink/snack/src/Snack/Controller/AdminArtistController.php",
		"/Users/sopae/Projects/logiclink/musicbox/app/snack.sql",
		"/Users/sopae/Projects/logiclink/musicbox/LICENSE",
		"/Users/sopae/Projects/logiclink/musicbox/src/MusicBox/Entity/ItemImage.php",
		"/Users/sopae/Projects/logiclink/kentco/administrator/components/com_advert/views/advert/tmpl/media.php",
		"/Users/sopae/Projects/logiclink/kentco/administrator/components/com_weblinks/views/weblinks/tmpl/default.php",
		"/Users/sopae/Desktop/test.html",
		"/Users/sopae/Desktop/hello.py",
		"/Users/sopae/Projects/logiclink/kentco/administrator/components/com_advert/html.helper_old.php",
		"/Users/sopae/Projects/logiclink/kentco/administrator/components/com_customers/controllers/customers.php",
		"/Users/sopae/Projects/logiclink/kentco/administrator/components/com_content/views/element/view.php",
		"/Users/sopae/Projects/logiclink/kentco/administrator/components/com_advert/models/advert.php",
		"/Users/sopae/Projects/logiclink/kentco/vendor/autoload.php",
		"/Users/sopae/Library/Application Support/Sublime Text 3/Packages/User/Plain text.sublime-settings",
		"/Users/sopae/Projects/logiclink/kentco/libraries/joomla/version.php",
		"/Users/sopae/Projects/logiclink/kentco/INSTALL.php",
		"/Users/sopae/Library/Application Support/Sublime Text 3/Packages/User/SublimeLinter.sublime-settings",
		"/Users/sopae/Projects/spark/index.coffee",
		"/Users/sopae/Projects/spark/build/.meteor/local/cordova-build/config.xml",
		"/Users/sopae/Projects/spark/client/client.coffee",
		"/Users/sopae/Projects/spark/build/cordova-build-override/config.xml",
		"/Users/sopae/Library/Application Support/Sublime Text 3/Packages/User/Default (OSX).sublime-keymap",
		"/Users/sopae/Library/Application Support/Sublime Text 3/Packages/Alignment/Default (OSX).sublime-keymap",
		"/Users/sopae/Projects/sparkgame/add_loc.js",
		"/Users/sopae/Projects/sparkgame/oracle2mongo.coffee",
		"/Users/sopae/Library/Application Support/Sublime Text 3/Packages/User/JSON.sublime-settings",
		"/Users/sopae/Library/Application Support/Sublime Text 3/Packages/Alignment/Base File.sublime-settings",
		"/Users/sopae/Projects/learnnode/ex12.js",
		"/Users/sopae/Projects/learnnode/async.coffee",
		"/Users/sopae/Projects/learnnode/async.js",
		"/Users/sopae/Projects/learnnode/ex6.coffee",
		"/Users/sopae/Projects/learnnode/ex6module.js",
		"/Users/sopae/Projects/learnnode/ex6module.coffee",
		"/Users/sopae/Documents/Projects/gc3-accounting.py",
		"/Users/sopae/Downloads/The.Walking.Dead.S05E05.720p.HDTV.x264-KILLERS.smi",
		"/Volumes/Kingston/The.Walking.Dead.S05E04.720p.HDTV.x264-KILLERS.smi",
		"/Volumes/Kingston/The.Walking.Dead.S05E04.720p.HDTV.x264-KILLERS.DivX.英文.srt",
		"/Users/sopae/Downloads/Game of Thrones/Game.of.Thrones.S04/Game.of.Thrones.S04E02.720p.HDTV.x264.Film.iVTC.AAC-SODiHD.smi",
		"/Users/sopae/Downloads/Game of Thrones/Game.of.Thrones.S02/Game of Thrones S02E10 Valar Morghulis.srt",
		"/Users/sopae/Downloads/Game of Thrones/Game.of.Thrones.S02/Game of Thrones S02E09 Blackwater.smi",
		"/Volumes/PENDRIVE/GameOfThrones_S2/E05/aa.smi",
		"/Users/sopae/Downloads/Hemlock Grove Season 1/Hemlock.Grove.S01E13.WEBRip.XviD-FUM.smi",
		"/Users/sopae/Documents/hello.py",
		"/Users/sopae/Documents/jquery.html",
		"/Users/sopae/Documents/Projects/aonline.com/.meteor/local/build/programs/client/packages/insecure.js",
		"/Users/sopae/Documents/Projects/aonline.com/.meteor/local/build/programs/ctl/npm/logging/main/node_modules/cli-color/node_modules/es5-ext/lib/Number/is-nan.js",
		"/Users/sopae/Documents/Projects/aonline.com/.meteor/local/build/programs/ctl/node_modules/npm/lib/install.js",
		"/Users/sopae/Documents/Projects/aonline.com/.meteor/local/build/programs/ctl/node_modules/npm/lib/utils/completion/installed-deep.js",
		"/Users/sopae/Documents/Projects/aonline.com/.meteor/packages",
		"/Users/sopae/Documents/Projects/aonline.com/.meteor/local/build/programs/ctl/node_modules/heapdump/src/platform-posix.cc",
		"/Users/sopae/Library/Application Support/Sublime Text 3/Packages/User/Chrome.sublime-build",
		"/Users/sopae/Documents/Projects/aonline.com/aonline.com.sublime-project",
		"/Users/sopae/Documents/Projects/aonline.com/.meteor/local/build/programs/ctl/node_modules/source-map/node_modules/amdefine/intercept.js",
		"/Users/sopae/Documents/Projects/aonline.com/aonline.com.js",
		"/Users/sopae/Documents/Projects/aonline.com.sublime-project",
		"/Users/sopae/Documents/Projects/aonline.com/packages/bootstrap-3/aonline.com.sublime-project",
		"/Users/sopae/Library/Application Support/Sublime Text 3/Packages/Package Control/Package Control.sublime-settings"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"Parents",
			"mobile",
			"spouse_lastname",
			"lastname",
			"HOST",
			"private",
			"public",
			"form",
			"f2orm",
			"form",
			"usersignup",
			"form",
			"ture",
			"dump",
			"setId",
			"setFirstname",
			"FROM address",
			"addresss",
			"select all",
			"getFristname",
			"Pool",
			"pool",
			"Lesson",
			"lesson",
			"lession",
			"Group",
			"group",
			"stud",
			"likes",
			"like",
			"$likeData",
			"session",
			"main.css",
			"for (",
			"$i",
			"title",
			"signup_host",
			"GUEST",
			"GuestRegistrationType",
			"GuestRegistration",
			"HOST_STEP",
			"HostRegistration",
			"HOST_STEP",
			"tag",
			"Doctrine",
			"$request->getSession()->start();",
			"'mapped' => 'false',",
			"dump",
			"mobile",
			"progressbar",
			"token",
			"container",
			"header",
			"problem",
			"content",
			"gf_global",
			"$id",
			"Bad credentials",
			"firstname",
			"etFirstName(",
			"];$",
			"$_POST[",
			"$app->request",
			"input_46",
			"input_46.6",
			"input_2_3",
			"name=",
			"form",
			"MUSICBOX_PUBLIC_ROOT",
			"admin_login_check",
			"MusicBox",
			"Musicbox",
			"footer",
			"SIGN-UP",
			"id=wpadminbar",
			"hello",
			"'MusicBox\\",
			"User",
			"MusicBox\\",
			"$_SESSION['sess']['perm']['sl']",
			"db_connect",
			"db_select",
			"path(",
			"item",
			"AdminVendorClassController",
			"pclass",
			"pclasses",
			"$pClasses",
			"repository.productclass",
			"ProductClass",
			"AdminProductClassController",
			"pclass",
			"pclasse",
			"pclasses",
			"product",
			"$classesData",
			"$classData",
			"productClasses",
			"$id",
			"'id'",
			"'productClasses'",
			"$productClass",
			"ProductClass",
			"update_time",
			"UpdateTime",
			"ChoiceGroup",
			"choiceGroupID",
			"breadcrumbs.separator",
			"secondaryNavigation",
			"modifierID",
			"update",
			"modifierID",
			"getImage",
			"filename",
			"getImage",
			"path",
			"button",
			"edit",
			"save",
			"td",
			"downloaditem",
			"setChoiceGroups",
			"foreach",
			"findItemChoices",
			"repository.choicegroup",
			"choicegroup",
			"findItemChoices",
			"find"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"protected",
			"private",
			"address",
			"Address",
			"address",
			"Pool",
			"pool",
			"Lesson",
			"lesson",
			"group",
			"$groupData",
			"group",
			"signup_guest",
			"HOST",
			"GUEST_STEP",
			"GuestRegistration",
			"GUEST_STEP",
			"",
			");",
			"$request->get(",
			"$request->get",
			"'Swim\\",
			"Swim\\",
			"vendor",
			"vendors",
			"$vendors",
			"repository.vendor",
			"Vendor",
			"AdminVendorController",
			"vendor",
			"vendors",
			"vendor",
			"$vendorsData",
			"$vendorData",
			"vendors",
			"$vendor_id",
			"'vendor_id'",
			"'vendors'",
			"$vendor",
			"Vendor",
			"checkin_time",
			"CheckinTime",
			"Vendor",
			"choiceGroupID",
			"th",
			"choiceGroupID",
			">\\n<\n",
			"\\n\n",
			"\\n",
			"modifier.",
			"Modifier",
			"choiceGroup",
			"ChoiceGroup",
			"name",
			"choiceGroup",
			"item_list",
			"modifier",
			"odifier",
			"modifier",
			"Modifier",
			"modifier",
			"Modifier",
			"modifier",
			"$modifier",
			"Modifier",
			"repository.productclass",
			"ProductClass",
			"$productClass",
			"SproductClass",
			"Snack"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": true,
		"wrap": false
	},
	"groups":
	[
		{
			"selected": 22,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "web/index.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 256,
						"regions":
						{
						},
						"selection":
						[
							[
								19,
								19
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 65,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/app.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4051,
						"regions":
						{
						},
						"selection":
						[
							[
								1727,
								1753
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 587.0,
						"zoom_level": 1.0
					},
					"stack_index": 24,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/Swim/Repository/UserRepository.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8950,
						"regions":
						{
						},
						"selection":
						[
							[
								8117,
								8117
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4185.0,
						"zoom_level": 1.0
					},
					"stack_index": 32,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "vendor/symfony/security/Core/Authentication/Provider/UserAuthenticationProvider.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5231,
						"regions":
						{
						},
						"selection":
						[
							[
								2434,
								2434
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 777.0,
						"zoom_level": 1.0
					},
					"stack_index": 62,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/Swim/Controller/AdminUserController.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3489,
						"regions":
						{
						},
						"selection":
						[
							[
								1331,
								1331
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 442.0,
						"zoom_level": 1.0
					},
					"stack_index": 63,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "src/Swim/Controller/AdminController.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 377,
						"regions":
						{
						},
						"selection":
						[
							[
								21,
								21
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 66,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "src/routes.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5528,
						"regions":
						{
						},
						"selection":
						[
							[
								3002,
								3002
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 111.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "src/Swim/Controller/IndexController.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 394,
						"regions":
						{
						},
						"selection":
						[
							[
								313,
								313
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 44,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "src/Swim/Controller/SignupController.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 36962,
						"regions":
						{
						},
						"selection":
						[
							[
								11739,
								11739
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"open_with_edit": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4788.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "src/Swim/Entity/Group.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2800,
						"regions":
						{
						},
						"selection":
						[
							[
								189,
								189
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 36,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "/Users/sopae/Library/Application Support/Sublime Text 3/Packages/User/php-getters-setters.sublime-settings",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 33,
						"regions":
						{
						},
						"selection":
						[
							[
								33,
								33
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/JavaScript/JSON.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 43,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "src/Swim/Repository/GroupRepository.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6887,
						"regions":
						{
						},
						"selection":
						[
							[
								74,
								74
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"history_list_is_closing": true,
							"open_with_edit": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1117.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "src/Swim/Repository/LessonRepository.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7087,
						"regions":
						{
						},
						"selection":
						[
							[
								6297,
								6297
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"open_with_edit": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3369.0,
						"zoom_level": 1.0
					},
					"stack_index": 34,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "src/Swim/Repository/PoolRepository.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6519,
						"regions":
						{
						},
						"selection":
						[
							[
								6297,
								6297
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"open_with_edit": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3216.0,
						"zoom_level": 1.0
					},
					"stack_index": 33,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "src/Swim/Repository/AddressRepository.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6674,
						"regions":
						{
						},
						"selection":
						[
							[
								2421,
								2421
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"history_list_is_closing": true,
							"open_with_edit": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1030.0,
						"zoom_level": 1.0
					},
					"stack_index": 31,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "src/Swim/Repository/HelperRepository.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6593,
						"regions":
						{
						},
						"selection":
						[
							[
								1008,
								1008
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"open_with_edit": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 42,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "app/db.sql",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4644,
						"regions":
						{
						},
						"selection":
						[
							[
								278,
								278
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/SQL/SQL.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 636.0,
						"zoom_level": 1.0
					},
					"stack_index": 41,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "src/Swim/Form/Type/UserSignupType.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 740,
						"regions":
						{
						},
						"selection":
						[
							[
								426,
								426
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 119.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "src/Swim/Form/Type/StudentSignupType.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1183,
						"regions":
						{
						},
						"selection":
						[
							[
								724,
								724
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 105.0,
						"zoom_level": 1.0
					},
					"stack_index": 29,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "src/Swim/Form/Type/GroupSignupType.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2359,
						"regions":
						{
						},
						"selection":
						[
							[
								781,
								781
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"open_with_edit": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 237.0,
						"zoom_level": 1.0
					},
					"stack_index": 26,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "src/Swim/Entity/StudentCollection.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1302,
						"regions":
						{
						},
						"selection":
						[
							[
								157,
								157
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 39,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "app/views/form.signup.student.html.twig",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3990,
						"regions":
						{
						},
						"selection":
						[
							[
								635,
								635
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/PHP-Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 30,
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "app/views/form.signup.user.html.twig",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1401,
						"regions":
						{
						},
						"selection":
						[
							[
								962,
								990
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/PHP-Twig/Syntaxes/HTML (Twig).tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 403.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "app/views/form.signup.group.html.twig",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1228,
						"regions":
						{
						},
						"selection":
						[
							[
								546,
								546
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/PHP-Twig/Syntaxes/HTML (Twig).tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 25,
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "app/views/form.signup.payment.html.twig",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3692,
						"regions":
						{
						},
						"selection":
						[
							[
								296,
								296
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/PHP-Twig/Syntaxes/HTML (Twig).tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "app/views/form.signup.payment.confirm.html.twig",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1919,
						"regions":
						{
						},
						"selection":
						[
							[
								877,
								877
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"open_with_edit": true,
							"syntax": "Packages/PHP-Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 309.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "src/Swim/Form/Type/GroupDetailSignupType.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2446,
						"regions":
						{
						},
						"selection":
						[
							[
								1258,
								1258
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 235.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "app/views/form.host.step2.html.twig",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3865,
						"regions":
						{
						},
						"selection":
						[
							[
								1652,
								1652
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP-Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 622.0,
						"zoom_level": 1.0
					},
					"stack_index": 49,
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "app/views/form.host.step1.html.twig",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5318,
						"regions":
						{
						},
						"selection":
						[
							[
								3308,
								3346
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"open_with_edit": true,
							"syntax": "Packages/PHP-Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 56,
					"type": "text"
				},
				{
					"buffer": 29,
					"file": "src/Swim/Form/field_errors.html.twig",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 303,
						"regions":
						{
						},
						"selection":
						[
							[
								303,
								303
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP-Twig/Syntaxes/HTML (Twig).tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 57,
					"type": "text"
				},
				{
					"buffer": 30,
					"file": "app/views/index.html.twig",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 83,
						"regions":
						{
						},
						"selection":
						[
							[
								62,
								62
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP-Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 61,
					"type": "text"
				},
				{
					"buffer": 31,
					"file": "app/views/index.signup.html.twig",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 290,
						"regions":
						{
						},
						"selection":
						[
							[
								290,
								290
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"open_with_edit": true,
							"syntax": "Packages/PHP-Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 84.0,
						"zoom_level": 1.0
					},
					"stack_index": 52,
					"type": "text"
				},
				{
					"buffer": 32,
					"file": "app/views/host.signup.html.twig",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 93688,
						"regions":
						{
						},
						"selection":
						[
							[
								363,
								363
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"open_with_edit": true,
							"syntax": "Packages/PHP-Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 47,
					"type": "text"
				},
				{
					"buffer": 33,
					"file": "app/views/layout.html.twig.travis",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17067,
						"regions":
						{
						},
						"selection":
						[
							[
								16589,
								16589
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP-Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 51,
					"type": "text"
				},
				{
					"buffer": 34,
					"file": "app/views/layout.html.twig",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2326,
						"regions":
						{
						},
						"selection":
						[
							[
								1103,
								1103
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"open_with_edit": true,
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 48,
					"type": "text"
				},
				{
					"buffer": 35,
					"file": "web/css/main.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 341,
						"regions":
						{
						},
						"selection":
						[
							[
								114,
								114
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/CSS/CSS.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 50,
					"type": "text"
				},
				{
					"buffer": 36,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 382371,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										359,
										367
									],
									[
										1129,
										1137
									],
									[
										1397,
										1405
									],
									[
										1624,
										1632
									],
									[
										1914,
										1922
									],
									[
										2649,
										2653
									],
									[
										3293,
										3297
									],
									[
										4024,
										4028
									],
									[
										4112,
										4116
									],
									[
										4199,
										4203
									],
									[
										4360,
										4364
									],
									[
										4450,
										4454
									],
									[
										4536,
										4540
									],
									[
										4622,
										4626
									],
									[
										4751,
										4755
									],
									[
										4841,
										4845
									],
									[
										4929,
										4933
									],
									[
										5020,
										5024
									],
									[
										5107,
										5111
									],
									[
										5195,
										5199
									],
									[
										5286,
										5290
									],
									[
										5372,
										5376
									],
									[
										5461,
										5465
									],
									[
										5779,
										5783
									],
									[
										6022,
										6026
									],
									[
										6354,
										6358
									],
									[
										6673,
										6677
									],
									[
										6831,
										6835
									],
									[
										7054,
										7058
									],
									[
										7268,
										7272
									],
									[
										7583,
										7587
									],
									[
										7905,
										7909
									],
									[
										8274,
										8278
									],
									[
										8543,
										8547
									],
									[
										8779,
										8783
									],
									[
										9082,
										9086
									],
									[
										9350,
										9354
									],
									[
										9594,
										9598
									],
									[
										10224,
										10228
									],
									[
										10616,
										10620
									],
									[
										10921,
										10925
									],
									[
										11234,
										11238
									],
									[
										11529,
										11533
									],
									[
										11764,
										11768
									],
									[
										12056,
										12060
									],
									[
										12462,
										12466
									],
									[
										12781,
										12785
									],
									[
										13205,
										13209
									],
									[
										13709,
										13713
									],
									[
										14057,
										14061
									],
									[
										14183,
										14187
									],
									[
										14398,
										14402
									],
									[
										14758,
										14762
									],
									[
										15004,
										15008
									],
									[
										15306,
										15310
									],
									[
										15639,
										15643
									],
									[
										15933,
										15937
									],
									[
										16256,
										16260
									],
									[
										16543,
										16547
									],
									[
										16830,
										16834
									],
									[
										17113,
										17117
									],
									[
										17392,
										17396
									],
									[
										17665,
										17669
									],
									[
										18008,
										18012
									],
									[
										18364,
										18368
									],
									[
										18579,
										18583
									],
									[
										19017,
										19021
									],
									[
										19228,
										19232
									],
									[
										19476,
										19480
									],
									[
										19740,
										19744
									],
									[
										19891,
										19895
									],
									[
										20239,
										20243
									],
									[
										20383,
										20387
									],
									[
										20613,
										20617
									],
									[
										20789,
										20793
									],
									[
										21167,
										21171
									],
									[
										21528,
										21532
									],
									[
										21874,
										21878
									],
									[
										22219,
										22223
									],
									[
										22492,
										22496
									],
									[
										22663,
										22667
									],
									[
										22847,
										22851
									],
									[
										23026,
										23030
									],
									[
										23276,
										23280
									],
									[
										23335,
										23339
									],
									[
										23436,
										23440
									],
									[
										23744,
										23748
									],
									[
										24092,
										24096
									],
									[
										24275,
										24279
									],
									[
										24444,
										24448
									],
									[
										24740,
										24744
									],
									[
										25134,
										25138
									],
									[
										25476,
										25480
									],
									[
										25680,
										25684
									],
									[
										26120,
										26124
									],
									[
										26165,
										26169
									],
									[
										26318,
										26322
									],
									[
										26401,
										26405
									],
									[
										26492,
										26496
									],
									[
										26893,
										26897
									],
									[
										27047,
										27051
									],
									[
										27495,
										27499
									],
									[
										27676,
										27680
									],
									[
										27875,
										27879
									],
									[
										28092,
										28096
									],
									[
										28493,
										28497
									],
									[
										28652,
										28656
									],
									[
										28860,
										28864
									],
									[
										29117,
										29121
									],
									[
										29485,
										29489
									],
									[
										29654,
										29658
									],
									[
										29914,
										29918
									],
									[
										30405,
										30409
									],
									[
										31354,
										31358
									],
									[
										31803,
										31807
									],
									[
										31873,
										31877
									],
									[
										32314,
										32318
									],
									[
										32544,
										32548
									],
									[
										32762,
										32766
									],
									[
										32995,
										32999
									],
									[
										33255,
										33259
									],
									[
										33401,
										33405
									],
									[
										33570,
										33574
									],
									[
										33720,
										33724
									],
									[
										33847,
										33851
									],
									[
										34079,
										34083
									],
									[
										34353,
										34357
									],
									[
										34701,
										34705
									],
									[
										34743,
										34747
									],
									[
										35113,
										35117
									],
									[
										35440,
										35444
									],
									[
										35720,
										35724
									],
									[
										35987,
										35991
									],
									[
										36242,
										36246
									],
									[
										36390,
										36394
									],
									[
										36491,
										36495
									],
									[
										36642,
										36646
									],
									[
										36720,
										36724
									],
									[
										36927,
										36931
									],
									[
										37033,
										37037
									],
									[
										37174,
										37178
									],
									[
										37344,
										37348
									],
									[
										37406,
										37410
									],
									[
										37522,
										37526
									],
									[
										37703,
										37707
									],
									[
										37766,
										37770
									],
									[
										37932,
										37936
									],
									[
										38022,
										38026
									],
									[
										38116,
										38120
									],
									[
										38311,
										38315
									],
									[
										38400,
										38404
									],
									[
										38806,
										38810
									],
									[
										38910,
										38914
									],
									[
										39004,
										39008
									],
									[
										39101,
										39105
									],
									[
										39179,
										39183
									],
									[
										39251,
										39255
									],
									[
										39330,
										39334
									],
									[
										39497,
										39501
									],
									[
										39555,
										39559
									],
									[
										39610,
										39614
									],
									[
										39841,
										39845
									],
									[
										40137,
										40141
									],
									[
										40199,
										40203
									],
									[
										40515,
										40519
									],
									[
										40656,
										40660
									],
									[
										40851,
										40855
									],
									[
										40946,
										40950
									],
									[
										41040,
										41044
									],
									[
										41240,
										41244
									],
									[
										41334,
										41338
									],
									[
										41760,
										41764
									],
									[
										41902,
										41906
									],
									[
										42207,
										42211
									],
									[
										42276,
										42280
									],
									[
										42604,
										42608
									],
									[
										42791,
										42795
									],
									[
										43028,
										43032
									],
									[
										43163,
										43167
									],
									[
										43286,
										43290
									],
									[
										43351,
										43355
									],
									[
										43820,
										43824
									],
									[
										43943,
										43947
									],
									[
										44142,
										44146
									],
									[
										44236,
										44240
									],
									[
										44377,
										44381
									],
									[
										44547,
										44551
									],
									[
										44609,
										44613
									],
									[
										44725,
										44729
									],
									[
										44906,
										44910
									],
									[
										44969,
										44973
									],
									[
										45214,
										45218
									],
									[
										45505,
										45509
									],
									[
										45911,
										45915
									],
									[
										46203,
										46207
									],
									[
										46428,
										46432
									],
									[
										46739,
										46743
									],
									[
										46915,
										46919
									],
									[
										47141,
										47145
									],
									[
										47403,
										47407
									],
									[
										47674,
										47678
									],
									[
										47693,
										47697
									],
									[
										48004,
										48008
									],
									[
										48299,
										48303
									],
									[
										48502,
										48506
									],
									[
										48746,
										48750
									],
									[
										48974,
										48978
									],
									[
										49364,
										49368
									],
									[
										49743,
										49747
									],
									[
										49939,
										49943
									],
									[
										50222,
										50226
									],
									[
										50588,
										50592
									],
									[
										50750,
										50754
									],
									[
										50907,
										50911
									],
									[
										51123,
										51127
									],
									[
										51435,
										51439
									],
									[
										51756,
										51760
									],
									[
										52059,
										52063
									],
									[
										52196,
										52200
									],
									[
										52357,
										52361
									],
									[
										52518,
										52522
									],
									[
										52596,
										52600
									],
									[
										52658,
										52662
									],
									[
										53338,
										53342
									],
									[
										53475,
										53479
									],
									[
										53636,
										53640
									],
									[
										53797,
										53801
									],
									[
										53875,
										53879
									],
									[
										53937,
										53941
									],
									[
										54635,
										54639
									],
									[
										54872,
										54876
									],
									[
										55033,
										55037
									],
									[
										55194,
										55198
									],
									[
										55272,
										55276
									],
									[
										55334,
										55338
									],
									[
										56051,
										56055
									],
									[
										56239,
										56243
									],
									[
										56400,
										56404
									],
									[
										56561,
										56565
									],
									[
										56639,
										56643
									],
									[
										56701,
										56705
									],
									[
										57410,
										57414
									],
									[
										57596,
										57600
									],
									[
										57757,
										57761
									],
									[
										57918,
										57922
									],
									[
										57996,
										58000
									],
									[
										58058,
										58062
									],
									[
										58646,
										58650
									],
									[
										58845,
										58849
									],
									[
										58937,
										58941
									],
									[
										59226,
										59230
									],
									[
										59462,
										59466
									],
									[
										59672,
										59676
									],
									[
										59910,
										59914
									],
									[
										60121,
										60125
									],
									[
										60439,
										60443
									],
									[
										60848,
										60852
									],
									[
										61307,
										61311
									],
									[
										61330,
										61334
									],
									[
										61592,
										61596
									],
									[
										61975,
										61979
									],
									[
										62340,
										62344
									],
									[
										62748,
										62752
									],
									[
										62883,
										62887
									],
									[
										63185,
										63189
									],
									[
										63271,
										63275
									],
									[
										63531,
										63535
									],
									[
										63552,
										63556
									],
									[
										63650,
										63654
									],
									[
										63701,
										63705
									],
									[
										63968,
										63972
									],
									[
										64019,
										64023
									],
									[
										64123,
										64127
									],
									[
										64290,
										64294
									],
									[
										64387,
										64391
									],
									[
										64438,
										64442
									],
									[
										64542,
										64546
									],
									[
										64805,
										64809
									],
									[
										65050,
										65054
									],
									[
										65112,
										65116
									],
									[
										65286,
										65290
									],
									[
										65533,
										65537
									],
									[
										65711,
										65715
									],
									[
										65974,
										65978
									],
									[
										66040,
										66044
									],
									[
										66112,
										66116
									],
									[
										66464,
										66468
									],
									[
										66824,
										66828
									],
									[
										67129,
										67133
									],
									[
										67386,
										67390
									],
									[
										67410,
										67414
									],
									[
										67495,
										67499
									],
									[
										67684,
										67688
									],
									[
										67879,
										67883
									],
									[
										67911,
										67915
									],
									[
										68099,
										68103
									],
									[
										68323,
										68327
									],
									[
										68567,
										68571
									],
									[
										68858,
										68862
									],
									[
										69077,
										69081
									],
									[
										69338,
										69342
									],
									[
										69512,
										69516
									],
									[
										69551,
										69555
									],
									[
										69833,
										69837
									],
									[
										70182,
										70186
									],
									[
										70496,
										70500
									],
									[
										70896,
										70900
									],
									[
										71172,
										71176
									],
									[
										71472,
										71476
									],
									[
										71750,
										71754
									],
									[
										71922,
										71926
									],
									[
										72190,
										72194
									],
									[
										72384,
										72388
									],
									[
										72549,
										72553
									],
									[
										72721,
										72725
									],
									[
										72888,
										72892
									],
									[
										73058,
										73062
									],
									[
										73325,
										73329
									],
									[
										73551,
										73555
									],
									[
										73741,
										73745
									],
									[
										73775,
										73779
									],
									[
										73896,
										73900
									],
									[
										73938,
										73942
									],
									[
										74255,
										74259
									],
									[
										74319,
										74323
									],
									[
										74391,
										74395
									],
									[
										74459,
										74463
									],
									[
										74562,
										74566
									],
									[
										74621,
										74625
									],
									[
										74694,
										74698
									],
									[
										74756,
										74760
									],
									[
										74826,
										74830
									],
									[
										74897,
										74901
									],
									[
										74988,
										74992
									],
									[
										75098,
										75102
									],
									[
										75166,
										75170
									],
									[
										75400,
										75404
									],
									[
										75643,
										75647
									],
									[
										76097,
										76101
									],
									[
										76480,
										76484
									],
									[
										76709,
										76713
									],
									[
										76911,
										76915
									],
									[
										76964,
										76968
									],
									[
										77155,
										77159
									],
									[
										77348,
										77352
									],
									[
										77532,
										77536
									],
									[
										77724,
										77728
									],
									[
										77919,
										77923
									],
									[
										78124,
										78128
									],
									[
										78331,
										78335
									],
									[
										78584,
										78588
									],
									[
										78930,
										78934
									],
									[
										79316,
										79320
									],
									[
										79722,
										79726
									],
									[
										80019,
										80023
									],
									[
										80233,
										80237
									],
									[
										80419,
										80423
									],
									[
										80797,
										80801
									],
									[
										81091,
										81095
									],
									[
										81492,
										81496
									],
									[
										81761,
										81765
									],
									[
										82106,
										82110
									],
									[
										82370,
										82374
									],
									[
										82757,
										82761
									],
									[
										83044,
										83048
									],
									[
										83297,
										83301
									],
									[
										83448,
										83452
									],
									[
										83468,
										83472
									],
									[
										83586,
										83590
									],
									[
										83647,
										83651
									],
									[
										83865,
										83869
									],
									[
										84055,
										84059
									],
									[
										84296,
										84300
									],
									[
										84504,
										84508
									],
									[
										84836,
										84840
									],
									[
										85026,
										85030
									],
									[
										85261,
										85265
									],
									[
										85472,
										85476
									],
									[
										85695,
										85699
									],
									[
										85935,
										85939
									],
									[
										86137,
										86141
									],
									[
										86285,
										86289
									],
									[
										86486,
										86490
									],
									[
										86606,
										86610
									],
									[
										86665,
										86669
									],
									[
										86779,
										86783
									],
									[
										86909,
										86913
									],
									[
										87034,
										87038
									],
									[
										87183,
										87187
									],
									[
										87413,
										87417
									],
									[
										87735,
										87739
									],
									[
										87843,
										87847
									],
									[
										88320,
										88324
									],
									[
										88419,
										88423
									],
									[
										88796,
										88800
									],
									[
										89165,
										89169
									],
									[
										89392,
										89396
									],
									[
										89615,
										89619
									],
									[
										89819,
										89823
									],
									[
										90045,
										90049
									],
									[
										90278,
										90282
									],
									[
										90812,
										90816
									],
									[
										91076,
										91080
									],
									[
										91338,
										91342
									],
									[
										91600,
										91604
									],
									[
										91824,
										91828
									],
									[
										92129,
										92133
									],
									[
										92409,
										92413
									],
									[
										92644,
										92648
									],
									[
										92877,
										92881
									],
									[
										93089,
										93093
									],
									[
										93152,
										93156
									],
									[
										93420,
										93424
									],
									[
										93586,
										93590
									],
									[
										93810,
										93814
									],
									[
										94034,
										94038
									],
									[
										94258,
										94262
									],
									[
										94540,
										94544
									],
									[
										94765,
										94769
									],
									[
										95057,
										95061
									],
									[
										95342,
										95346
									],
									[
										95665,
										95669
									],
									[
										95723,
										95727
									],
									[
										95784,
										95788
									],
									[
										96069,
										96073
									],
									[
										96133,
										96137
									],
									[
										96212,
										96216
									],
									[
										96273,
										96277
									],
									[
										96343,
										96347
									],
									[
										96413,
										96417
									],
									[
										96647,
										96651
									],
									[
										97001,
										97005
									],
									[
										97072,
										97076
									],
									[
										97343,
										97347
									],
									[
										97553,
										97557
									],
									[
										97604,
										97608
									],
									[
										97870,
										97874
									],
									[
										97998,
										98002
									],
									[
										98283,
										98287
									],
									[
										98379,
										98383
									],
									[
										98678,
										98682
									],
									[
										99071,
										99075
									],
									[
										99287,
										99291
									],
									[
										99430,
										99434
									],
									[
										99510,
										99514
									],
									[
										99712,
										99716
									],
									[
										99978,
										99982
									],
									[
										100215,
										100219
									],
									[
										100621,
										100625
									],
									[
										101032,
										101036
									],
									[
										101127,
										101131
									],
									[
										101393,
										101397
									],
									[
										101705,
										101709
									],
									[
										102063,
										102067
									],
									[
										102297,
										102301
									],
									[
										102577,
										102581
									],
									[
										102634,
										102638
									],
									[
										103028,
										103032
									],
									[
										103351,
										103355
									],
									[
										103408,
										103412
									],
									[
										103642,
										103646
									],
									[
										103850,
										103854
									],
									[
										104070,
										104074
									],
									[
										104308,
										104312
									],
									[
										104546,
										104550
									],
									[
										104778,
										104782
									],
									[
										105061,
										105065
									],
									[
										105373,
										105377
									],
									[
										105689,
										105693
									],
									[
										105931,
										105935
									],
									[
										106199,
										106203
									],
									[
										106534,
										106538
									],
									[
										106895,
										106899
									],
									[
										107111,
										107115
									],
									[
										107327,
										107331
									],
									[
										107540,
										107544
									],
									[
										107734,
										107738
									],
									[
										107938,
										107942
									],
									[
										108133,
										108137
									],
									[
										108341,
										108345
									],
									[
										108532,
										108536
									],
									[
										108782,
										108786
									],
									[
										109020,
										109024
									],
									[
										109235,
										109239
									],
									[
										109470,
										109474
									],
									[
										109684,
										109688
									],
									[
										109910,
										109914
									],
									[
										110145,
										110149
									],
									[
										110374,
										110378
									],
									[
										110684,
										110688
									],
									[
										111045,
										111049
									],
									[
										111440,
										111444
									],
									[
										111660,
										111664
									],
									[
										111973,
										111977
									],
									[
										112174,
										112178
									],
									[
										112426,
										112430
									],
									[
										112717,
										112721
									],
									[
										112958,
										112962
									],
									[
										113316,
										113320
									],
									[
										113699,
										113703
									],
									[
										113969,
										113973
									],
									[
										114230,
										114234
									],
									[
										114521,
										114525
									],
									[
										114768,
										114772
									],
									[
										115082,
										115086
									],
									[
										115270,
										115274
									],
									[
										115508,
										115512
									],
									[
										115784,
										115788
									],
									[
										116082,
										116086
									],
									[
										116337,
										116341
									],
									[
										116505,
										116509
									],
									[
										116623,
										116627
									],
									[
										116764,
										116768
									],
									[
										116970,
										116974
									],
									[
										117135,
										117139
									],
									[
										117399,
										117403
									],
									[
										117638,
										117642
									],
									[
										117860,
										117864
									],
									[
										118090,
										118094
									],
									[
										118440,
										118444
									],
									[
										118566,
										118570
									],
									[
										118629,
										118633
									],
									[
										118806,
										118810
									],
									[
										118983,
										118987
									],
									[
										119046,
										119050
									],
									[
										119226,
										119230
									],
									[
										119367,
										119371
									],
									[
										119488,
										119492
									],
									[
										119641,
										119645
									],
									[
										119710,
										119714
									],
									[
										119890,
										119894
									],
									[
										120085,
										120089
									],
									[
										120148,
										120152
									],
									[
										120370,
										120374
									],
									[
										120627,
										120631
									],
									[
										120795,
										120799
									],
									[
										120913,
										120917
									],
									[
										121074,
										121078
									],
									[
										121201,
										121205
									],
									[
										121371,
										121375
									],
									[
										121496,
										121500
									],
									[
										121648,
										121652
									],
									[
										121774,
										121778
									],
									[
										121926,
										121930
									],
									[
										122051,
										122055
									],
									[
										122203,
										122207
									],
									[
										122328,
										122332
									],
									[
										122480,
										122484
									],
									[
										122605,
										122609
									],
									[
										122757,
										122761
									],
									[
										122882,
										122886
									],
									[
										123012,
										123016
									],
									[
										123167,
										123171
									],
									[
										123230,
										123234
									],
									[
										123407,
										123411
									],
									[
										123566,
										123570
									],
									[
										123745,
										123749
									],
									[
										123876,
										123880
									],
									[
										124028,
										124032
									],
									[
										124153,
										124157
									],
									[
										124278,
										124282
									],
									[
										124396,
										124400
									],
									[
										124558,
										124562
									],
									[
										124704,
										124708
									],
									[
										124872,
										124876
									],
									[
										124990,
										124994
									],
									[
										125158,
										125162
									],
									[
										125276,
										125280
									],
									[
										125430,
										125434
									],
									[
										125548,
										125552
									],
									[
										125896,
										125900
									],
									[
										126132,
										126136
									],
									[
										126406,
										126410
									],
									[
										126619,
										126623
									],
									[
										126852,
										126856
									],
									[
										127106,
										127110
									],
									[
										127215,
										127219
									],
									[
										127411,
										127415
									],
									[
										127702,
										127706
									],
									[
										127859,
										127863
									],
									[
										128100,
										128104
									],
									[
										128257,
										128261
									],
									[
										128437,
										128441
									],
									[
										128466,
										128470
									],
									[
										128623,
										128627
									],
									[
										129068,
										129072
									],
									[
										129218,
										129222
									],
									[
										129431,
										129435
									],
									[
										129696,
										129700
									],
									[
										130062,
										130066
									],
									[
										130467,
										130471
									],
									[
										130485,
										130489
									],
									[
										130504,
										130508
									],
									[
										130579,
										130583
									],
									[
										130637,
										130641
									],
									[
										130697,
										130701
									],
									[
										130950,
										130954
									],
									[
										131013,
										131017
									],
									[
										131078,
										131082
									],
									[
										131355,
										131359
									],
									[
										131425,
										131429
									],
									[
										131503,
										131507
									],
									[
										131748,
										131752
									],
									[
										132104,
										132108
									],
									[
										132297,
										132301
									],
									[
										132471,
										132475
									],
									[
										132693,
										132697
									],
									[
										132915,
										132919
									],
									[
										133013,
										133017
									],
									[
										133268,
										133272
									],
									[
										133345,
										133349
									],
									[
										133518,
										133522
									],
									[
										133649,
										133653
									],
									[
										133886,
										133890
									],
									[
										133963,
										133967
									],
									[
										134145,
										134149
									],
									[
										134207,
										134211
									],
									[
										134489,
										134493
									],
									[
										134683,
										134687
									],
									[
										134986,
										134990
									],
									[
										135104,
										135108
									],
									[
										135216,
										135220
									],
									[
										135427,
										135431
									],
									[
										135566,
										135570
									],
									[
										135690,
										135694
									],
									[
										135911,
										135915
									],
									[
										136064,
										136068
									],
									[
										136136,
										136140
									],
									[
										136271,
										136275
									],
									[
										136482,
										136486
									],
									[
										136590,
										136594
									],
									[
										136816,
										136820
									],
									[
										136886,
										136890
									],
									[
										136956,
										136960
									],
									[
										137104,
										137108
									],
									[
										137223,
										137227
									],
									[
										137350,
										137354
									],
									[
										137505,
										137509
									],
									[
										137824,
										137828
									],
									[
										138190,
										138194
									],
									[
										138329,
										138333
									],
									[
										138439,
										138443
									],
									[
										138543,
										138547
									],
									[
										138651,
										138655
									],
									[
										138871,
										138875
									],
									[
										139018,
										139022
									],
									[
										139209,
										139213
									],
									[
										139491,
										139495
									],
									[
										139717,
										139721
									],
									[
										140004,
										140008
									],
									[
										140260,
										140264
									],
									[
										140364,
										140368
									],
									[
										140466,
										140470
									],
									[
										140566,
										140570
									],
									[
										140962,
										140966
									],
									[
										141194,
										141198
									],
									[
										141430,
										141434
									],
									[
										141678,
										141682
									],
									[
										141911,
										141915
									],
									[
										142141,
										142145
									],
									[
										142380,
										142384
									],
									[
										142681,
										142685
									],
									[
										142973,
										142977
									],
									[
										143288,
										143292
									],
									[
										143616,
										143620
									],
									[
										143937,
										143941
									],
									[
										144238,
										144242
									],
									[
										144531,
										144535
									],
									[
										144829,
										144833
									],
									[
										145154,
										145158
									],
									[
										145561,
										145565
									],
									[
										145793,
										145797
									],
									[
										146108,
										146112
									],
									[
										146567,
										146571
									],
									[
										146852,
										146856
									],
									[
										146950,
										146954
									],
									[
										147231,
										147235
									],
									[
										147345,
										147349
									],
									[
										147574,
										147578
									],
									[
										147714,
										147718
									],
									[
										147929,
										147933
									],
									[
										148043,
										148047
									],
									[
										148254,
										148258
									],
									[
										148495,
										148499
									],
									[
										148679,
										148683
									],
									[
										148886,
										148890
									],
									[
										149148,
										149152
									],
									[
										149327,
										149331
									],
									[
										149509,
										149513
									],
									[
										149765,
										149769
									],
									[
										149949,
										149953
									],
									[
										150136,
										150140
									],
									[
										150403,
										150407
									],
									[
										150440,
										150444
									],
									[
										150484,
										150488
									],
									[
										150808,
										150812
									],
									[
										151063,
										151067
									],
									[
										151315,
										151319
									],
									[
										151612,
										151616
									],
									[
										151647,
										151651
									],
									[
										151689,
										151693
									],
									[
										151976,
										151980
									],
									[
										152013,
										152017
									],
									[
										152059,
										152063
									],
									[
										152355,
										152359
									],
									[
										152531,
										152535
									],
									[
										152790,
										152794
									],
									[
										152982,
										152986
									],
									[
										153250,
										153254
									],
									[
										153448,
										153452
									],
									[
										153645,
										153649
									],
									[
										153849,
										153853
									],
									[
										154068,
										154072
									],
									[
										154246,
										154250
									],
									[
										154514,
										154518
									],
									[
										154722,
										154726
									],
									[
										154884,
										154888
									],
									[
										155052,
										155056
									],
									[
										155326,
										155330
									],
									[
										155533,
										155537
									],
									[
										155694,
										155698
									],
									[
										155925,
										155929
									],
									[
										156087,
										156091
									],
									[
										156241,
										156245
									],
									[
										156493,
										156497
									],
									[
										156653,
										156657
									],
									[
										156807,
										156811
									],
									[
										157058,
										157062
									],
									[
										157209,
										157213
									],
									[
										157438,
										157442
									],
									[
										157610,
										157614
									],
									[
										157988,
										157992
									],
									[
										158304,
										158308
									],
									[
										158506,
										158510
									],
									[
										158735,
										158739
									],
									[
										158984,
										158988
									],
									[
										159167,
										159171
									],
									[
										159482,
										159486
									],
									[
										159698,
										159702
									],
									[
										159924,
										159928
									],
									[
										160093,
										160097
									],
									[
										160416,
										160420
									],
									[
										160680,
										160684
									],
									[
										161003,
										161007
									],
									[
										161403,
										161407
									],
									[
										161802,
										161806
									],
									[
										162224,
										162228
									],
									[
										162428,
										162432
									],
									[
										162630,
										162634
									],
									[
										162952,
										162956
									],
									[
										163028,
										163032
									],
									[
										163039,
										163043
									],
									[
										163140,
										163144
									],
									[
										163301,
										163305
									],
									[
										163343,
										163347
									],
									[
										163625,
										163629
									],
									[
										163683,
										163687
									],
									[
										163720,
										163724
									],
									[
										163868,
										163872
									],
									[
										163996,
										164000
									],
									[
										164120,
										164124
									],
									[
										164292,
										164296
									],
									[
										164579,
										164583
									],
									[
										164940,
										164944
									],
									[
										165010,
										165014
									],
									[
										165089,
										165093
									],
									[
										165167,
										165171
									],
									[
										165244,
										165248
									],
									[
										165322,
										165326
									],
									[
										165665,
										165669
									],
									[
										165988,
										165992
									],
									[
										166188,
										166192
									],
									[
										166410,
										166414
									],
									[
										166641,
										166645
									],
									[
										166870,
										166874
									],
									[
										167098,
										167102
									],
									[
										167325,
										167329
									],
									[
										167557,
										167561
									],
									[
										167747,
										167751
									],
									[
										168211,
										168215
									],
									[
										168680,
										168684
									],
									[
										168943,
										168947
									],
									[
										169228,
										169232
									],
									[
										169455,
										169459
									],
									[
										169907,
										169911
									],
									[
										170445,
										170449
									],
									[
										170794,
										170798
									],
									[
										170944,
										170948
									],
									[
										171291,
										171295
									],
									[
										171386,
										171390
									],
									[
										171474,
										171478
									],
									[
										171752,
										171756
									],
									[
										171998,
										172002
									],
									[
										172250,
										172254
									],
									[
										172493,
										172497
									],
									[
										172722,
										172726
									],
									[
										173003,
										173007
									],
									[
										173241,
										173245
									],
									[
										173542,
										173546
									],
									[
										173723,
										173727
									],
									[
										174017,
										174021
									],
									[
										174352,
										174356
									],
									[
										174643,
										174647
									],
									[
										174954,
										174958
									],
									[
										175379,
										175383
									],
									[
										175644,
										175648
									],
									[
										175942,
										175946
									],
									[
										176063,
										176067
									],
									[
										176090,
										176094
									],
									[
										176167,
										176171
									],
									[
										176433,
										176437
									],
									[
										176575,
										176579
									],
									[
										176914,
										176918
									],
									[
										177101,
										177105
									],
									[
										177245,
										177249
									],
									[
										177268,
										177272
									],
									[
										177359,
										177363
									],
									[
										177621,
										177625
									],
									[
										177759,
										177763
									],
									[
										178085,
										178089
									],
									[
										178363,
										178367
									],
									[
										178659,
										178663
									],
									[
										179053,
										179057
									],
									[
										179302,
										179306
									],
									[
										179604,
										179608
									],
									[
										179915,
										179919
									],
									[
										180154,
										180158
									],
									[
										180462,
										180466
									],
									[
										180737,
										180741
									],
									[
										180955,
										180959
									],
									[
										181172,
										181176
									],
									[
										181557,
										181561
									],
									[
										181781,
										181785
									],
									[
										182031,
										182035
									],
									[
										182251,
										182255
									],
									[
										182544,
										182548
									],
									[
										182847,
										182851
									],
									[
										183152,
										183156
									],
									[
										183517,
										183521
									],
									[
										183627,
										183631
									],
									[
										183667,
										183671
									],
									[
										183846,
										183850
									],
									[
										184046,
										184050
									],
									[
										184219,
										184223
									],
									[
										184452,
										184456
									],
									[
										184809,
										184813
									],
									[
										184894,
										184898
									],
									[
										185037,
										185041
									],
									[
										185373,
										185377
									],
									[
										185742,
										185746
									],
									[
										186021,
										186025
									],
									[
										186343,
										186347
									],
									[
										186430,
										186434
									],
									[
										186798,
										186802
									],
									[
										187187,
										187191
									],
									[
										187556,
										187560
									],
									[
										187931,
										187935
									],
									[
										188308,
										188312
									],
									[
										188471,
										188475
									],
									[
										188626,
										188630
									],
									[
										188795,
										188799
									],
									[
										188830,
										188834
									],
									[
										188848,
										188852
									],
									[
										189040,
										189044
									],
									[
										189402,
										189406
									],
									[
										189635,
										189639
									],
									[
										189778,
										189782
									],
									[
										189941,
										189945
									],
									[
										190249,
										190253
									],
									[
										190574,
										190578
									],
									[
										190875,
										190879
									],
									[
										191318,
										191322
									],
									[
										191414,
										191418
									],
									[
										191703,
										191707
									],
									[
										192056,
										192060
									],
									[
										192196,
										192200
									],
									[
										192319,
										192323
									],
									[
										192459,
										192463
									],
									[
										192596,
										192600
									],
									[
										192755,
										192759
									],
									[
										192916,
										192920
									],
									[
										193066,
										193070
									],
									[
										193284,
										193288
									],
									[
										193367,
										193371
									],
									[
										193431,
										193435
									],
									[
										193668,
										193672
									],
									[
										194171,
										194175
									],
									[
										194481,
										194485
									],
									[
										194831,
										194835
									],
									[
										195102,
										195106
									],
									[
										195448,
										195452
									],
									[
										195825,
										195829
									],
									[
										195915,
										195919
									],
									[
										196189,
										196193
									],
									[
										196282,
										196286
									],
									[
										196673,
										196677
									],
									[
										197048,
										197052
									],
									[
										197437,
										197441
									],
									[
										197814,
										197818
									],
									[
										198229,
										198233
									],
									[
										198602,
										198606
									],
									[
										199014,
										199018
									],
									[
										199386,
										199390
									],
									[
										199714,
										199718
									],
									[
										200075,
										200079
									],
									[
										200407,
										200411
									],
									[
										200616,
										200620
									],
									[
										200821,
										200825
									],
									[
										201123,
										201127
									],
									[
										201404,
										201408
									],
									[
										201631,
										201635
									],
									[
										201860,
										201864
									],
									[
										202174,
										202178
									],
									[
										202393,
										202397
									],
									[
										202570,
										202574
									],
									[
										202843,
										202847
									],
									[
										203052,
										203056
									],
									[
										203257,
										203261
									],
									[
										203555,
										203559
									],
									[
										203766,
										203770
									],
									[
										203973,
										203977
									],
									[
										204179,
										204183
									],
									[
										204471,
										204475
									],
									[
										204678,
										204682
									],
									[
										204883,
										204887
									],
									[
										205085,
										205089
									],
									[
										205280,
										205284
									],
									[
										205588,
										205592
									],
									[
										205797,
										205801
									],
									[
										206091,
										206095
									],
									[
										206298,
										206302
									],
									[
										206503,
										206507
									],
									[
										206706,
										206710
									],
									[
										206908,
										206912
									],
									[
										207123,
										207127
									],
									[
										207331,
										207335
									],
									[
										207638,
										207642
									],
									[
										207847,
										207851
									],
									[
										208049,
										208053
									],
									[
										208261,
										208265
									],
									[
										208697,
										208701
									],
									[
										208903,
										208907
									],
									[
										209129,
										209133
									],
									[
										209419,
										209423
									],
									[
										209725,
										209729
									],
									[
										209975,
										209979
									],
									[
										210148,
										210152
									],
									[
										210319,
										210323
									],
									[
										210527,
										210531
									],
									[
										210700,
										210704
									],
									[
										211057,
										211061
									],
									[
										211454,
										211458
									],
									[
										211664,
										211668
									],
									[
										211870,
										211874
									],
									[
										212075,
										212079
									],
									[
										212501,
										212505
									],
									[
										212836,
										212840
									],
									[
										213195,
										213199
									],
									[
										213267,
										213271
									],
									[
										213489,
										213493
									],
									[
										213701,
										213705
									],
									[
										214030,
										214034
									],
									[
										214102,
										214106
									],
									[
										214316,
										214320
									],
									[
										214528,
										214532
									],
									[
										214868,
										214872
									],
									[
										214940,
										214944
									],
									[
										215130,
										215134
									],
									[
										215342,
										215346
									],
									[
										215619,
										215623
									],
									[
										215718,
										215722
									],
									[
										215948,
										215952
									],
									[
										216211,
										216215
									],
									[
										216474,
										216478
									],
									[
										216524,
										216528
									],
									[
										216619,
										216623
									],
									[
										216797,
										216801
									],
									[
										217074,
										217078
									],
									[
										217303,
										217307
									],
									[
										217412,
										217416
									],
									[
										217799,
										217803
									],
									[
										218209,
										218213
									],
									[
										218451,
										218455
									],
									[
										218522,
										218526
									],
									[
										218589,
										218593
									],
									[
										218656,
										218660
									],
									[
										218723,
										218727
									],
									[
										218798,
										218802
									],
									[
										219173,
										219177
									],
									[
										219529,
										219533
									],
									[
										219934,
										219938
									],
									[
										220284,
										220288
									],
									[
										220610,
										220614
									],
									[
										220954,
										220958
									],
									[
										221196,
										221200
									],
									[
										221438,
										221442
									],
									[
										221680,
										221684
									],
									[
										221931,
										221935
									],
									[
										222000,
										222004
									],
									[
										222078,
										222082
									],
									[
										222151,
										222155
									],
									[
										222361,
										222365
									],
									[
										222611,
										222615
									],
									[
										222842,
										222846
									],
									[
										223082,
										223086
									],
									[
										223313,
										223317
									],
									[
										223544,
										223548
									],
									[
										223783,
										223787
									],
									[
										224031,
										224035
									],
									[
										224260,
										224264
									],
									[
										224491,
										224495
									],
									[
										224677,
										224681
									],
									[
										224827,
										224831
									],
									[
										224962,
										224966
									],
									[
										225245,
										225249
									],
									[
										225459,
										225463
									],
									[
										225705,
										225709
									],
									[
										225951,
										225955
									],
									[
										226188,
										226192
									],
									[
										226438,
										226442
									],
									[
										226692,
										226696
									],
									[
										226974,
										226978
									],
									[
										227222,
										227226
									],
									[
										227468,
										227472
									],
									[
										227696,
										227700
									],
									[
										227943,
										227947
									],
									[
										228172,
										228176
									],
									[
										228390,
										228394
									],
									[
										228734,
										228738
									],
									[
										228801,
										228805
									],
									[
										228868,
										228872
									],
									[
										229045,
										229049
									],
									[
										229129,
										229133
									],
									[
										229221,
										229225
									],
									[
										229514,
										229518
									],
									[
										229680,
										229684
									],
									[
										229981,
										229985
									],
									[
										230048,
										230052
									],
									[
										230353,
										230357
									],
									[
										230424,
										230428
									],
									[
										230491,
										230495
									],
									[
										230719,
										230723
									],
									[
										231019,
										231023
									],
									[
										231187,
										231191
									],
									[
										231271,
										231275
									],
									[
										231673,
										231677
									],
									[
										231856,
										231860
									],
									[
										231940,
										231944
									],
									[
										232309,
										232313
									],
									[
										232600,
										232604
									],
									[
										232870,
										232874
									],
									[
										233039,
										233043
									],
									[
										233280,
										233284
									],
									[
										233604,
										233608
									],
									[
										233785,
										233789
									],
									[
										234085,
										234089
									],
									[
										234259,
										234263
									],
									[
										234482,
										234486
									],
									[
										234730,
										234734
									],
									[
										235041,
										235045
									],
									[
										235390,
										235394
									],
									[
										235572,
										235576
									],
									[
										236071,
										236075
									],
									[
										236157,
										236161
									],
									[
										236603,
										236607
									],
									[
										236689,
										236693
									],
									[
										236858,
										236862
									],
									[
										237066,
										237070
									],
									[
										237249,
										237253
									],
									[
										237515,
										237519
									],
									[
										237574,
										237578
									],
									[
										237739,
										237743
									],
									[
										237992,
										237996
									],
									[
										238137,
										238141
									],
									[
										238530,
										238534
									],
									[
										238739,
										238743
									],
									[
										239174,
										239178
									],
									[
										239653,
										239657
									],
									[
										239990,
										239994
									],
									[
										240057,
										240061
									],
									[
										240332,
										240336
									],
									[
										240610,
										240614
									],
									[
										240779,
										240783
									],
									[
										241170,
										241174
									],
									[
										241569,
										241573
									],
									[
										241738,
										241742
									],
									[
										242062,
										242066
									],
									[
										242252,
										242256
									],
									[
										242529,
										242533
									],
									[
										242830,
										242834
									],
									[
										243160,
										243164
									],
									[
										243227,
										243231
									],
									[
										243499,
										243503
									],
									[
										243777,
										243781
									],
									[
										244054,
										244058
									],
									[
										244331,
										244335
									],
									[
										244610,
										244614
									],
									[
										244779,
										244783
									],
									[
										245170,
										245174
									],
									[
										245558,
										245562
									],
									[
										245748,
										245752
									],
									[
										246128,
										246132
									],
									[
										246190,
										246194
									],
									[
										246263,
										246267
									],
									[
										246336,
										246340
									],
									[
										246563,
										246567
									],
									[
										246831,
										246835
									],
									[
										247234,
										247238
									],
									[
										247296,
										247300
									],
									[
										247687,
										247691
									],
									[
										247749,
										247753
									],
									[
										247824,
										247828
									],
									[
										247907,
										247911
									],
									[
										248108,
										248112
									],
									[
										248204,
										248208
									],
									[
										248542,
										248546
									],
									[
										248809,
										248813
									],
									[
										249294,
										249298
									],
									[
										249622,
										249626
									],
									[
										249850,
										249854
									],
									[
										250100,
										250104
									],
									[
										250461,
										250465
									],
									[
										250684,
										250688
									],
									[
										250816,
										250820
									],
									[
										251246,
										251250
									],
									[
										251715,
										251719
									],
									[
										252077,
										252081
									],
									[
										252097,
										252101
									],
									[
										252415,
										252419
									],
									[
										252657,
										252661
									],
									[
										252891,
										252895
									],
									[
										253152,
										253156
									],
									[
										253332,
										253336
									],
									[
										253493,
										253497
									],
									[
										253741,
										253745
									],
									[
										254005,
										254009
									],
									[
										254720,
										254724
									],
									[
										255340,
										255344
									],
									[
										255417,
										255421
									],
									[
										255627,
										255631
									],
									[
										255715,
										255719
									],
									[
										255942,
										255946
									],
									[
										256343,
										256347
									],
									[
										256779,
										256783
									],
									[
										257112,
										257116
									],
									[
										257370,
										257374
									],
									[
										257524,
										257528
									],
									[
										257811,
										257815
									],
									[
										257917,
										257921
									],
									[
										258055,
										258059
									],
									[
										258317,
										258321
									],
									[
										258369,
										258373
									],
									[
										258496,
										258500
									],
									[
										258573,
										258577
									],
									[
										258630,
										258634
									],
									[
										258707,
										258711
									],
									[
										258953,
										258957
									],
									[
										259028,
										259032
									],
									[
										259327,
										259331
									],
									[
										259449,
										259453
									],
									[
										259586,
										259590
									],
									[
										259848,
										259852
									],
									[
										259900,
										259904
									],
									[
										260027,
										260031
									],
									[
										260104,
										260108
									],
									[
										260161,
										260165
									],
									[
										260238,
										260242
									],
									[
										260484,
										260488
									],
									[
										260559,
										260563
									],
									[
										260841,
										260845
									],
									[
										261177,
										261181
									],
									[
										261407,
										261411
									],
									[
										261594,
										261598
									],
									[
										261748,
										261752
									],
									[
										261899,
										261903
									],
									[
										261985,
										261989
									],
									[
										262014,
										262018
									],
									[
										262114,
										262118
									],
									[
										262326,
										262330
									],
									[
										262660,
										262664
									],
									[
										262973,
										262977
									],
									[
										263210,
										263214
									],
									[
										263425,
										263429
									],
									[
										263659,
										263663
									],
									[
										263953,
										263957
									],
									[
										264013,
										264017
									],
									[
										264203,
										264207
									],
									[
										264387,
										264391
									],
									[
										264671,
										264675
									],
									[
										264931,
										264935
									],
									[
										265123,
										265127
									],
									[
										265347,
										265351
									],
									[
										265488,
										265492
									],
									[
										265510,
										265514
									],
									[
										265741,
										265745
									],
									[
										266031,
										266035
									],
									[
										266274,
										266278
									],
									[
										266295,
										266299
									],
									[
										266541,
										266545
									],
									[
										266826,
										266830
									],
									[
										267031,
										267035
									],
									[
										267281,
										267285
									],
									[
										267716,
										267720
									],
									[
										268013,
										268017
									],
									[
										268424,
										268428
									],
									[
										268654,
										268658
									],
									[
										268917,
										268921
									],
									[
										269105,
										269109
									],
									[
										269118,
										269122
									],
									[
										269229,
										269233
									],
									[
										269453,
										269457
									],
									[
										269773,
										269777
									],
									[
										269943,
										269947
									],
									[
										270173,
										270177
									],
									[
										270407,
										270411
									],
									[
										270647,
										270651
									],
									[
										270785,
										270789
									],
									[
										270818,
										270822
									],
									[
										270961,
										270965
									],
									[
										271403,
										271407
									],
									[
										271512,
										271516
									],
									[
										271820,
										271824
									],
									[
										272075,
										272079
									],
									[
										272215,
										272219
									],
									[
										272551,
										272555
									],
									[
										272842,
										272846
									],
									[
										272911,
										272915
									],
									[
										273091,
										273095
									],
									[
										273166,
										273170
									],
									[
										273350,
										273354
									],
									[
										273550,
										273554
									],
									[
										273866,
										273870
									],
									[
										274013,
										274017
									],
									[
										274268,
										274272
									],
									[
										274489,
										274493
									],
									[
										274722,
										274726
									],
									[
										274800,
										274804
									],
									[
										274878,
										274882
									],
									[
										275116,
										275120
									],
									[
										275483,
										275487
									],
									[
										275623,
										275627
									],
									[
										275795,
										275799
									],
									[
										276084,
										276088
									],
									[
										276448,
										276452
									],
									[
										276836,
										276840
									],
									[
										277142,
										277146
									],
									[
										277458,
										277462
									],
									[
										277512,
										277516
									],
									[
										277666,
										277670
									],
									[
										277921,
										277925
									],
									[
										278149,
										278153
									],
									[
										278361,
										278365
									],
									[
										278647,
										278651
									],
									[
										278764,
										278768
									],
									[
										279000,
										279004
									],
									[
										279128,
										279132
									],
									[
										279420,
										279424
									],
									[
										279647,
										279651
									],
									[
										279924,
										279928
									],
									[
										280041,
										280045
									],
									[
										280238,
										280242
									],
									[
										280355,
										280359
									],
									[
										280440,
										280444
									],
									[
										280742,
										280746
									],
									[
										280934,
										280938
									],
									[
										281146,
										281150
									],
									[
										281396,
										281400
									],
									[
										281602,
										281606
									],
									[
										281784,
										281788
									],
									[
										281989,
										281993
									],
									[
										282301,
										282305
									],
									[
										282607,
										282611
									],
									[
										282714,
										282718
									],
									[
										282861,
										282865
									],
									[
										283060,
										283064
									],
									[
										283168,
										283172
									],
									[
										283316,
										283320
									],
									[
										283629,
										283633
									],
									[
										283892,
										283896
									],
									[
										284171,
										284175
									],
									[
										284584,
										284588
									],
									[
										284901,
										284905
									],
									[
										285211,
										285215
									],
									[
										285521,
										285525
									],
									[
										285834,
										285838
									],
									[
										332553,
										332557
									],
									[
										332687,
										332691
									],
									[
										333416,
										333420
									],
									[
										334675,
										334679
									],
									[
										334930,
										334934
									],
									[
										378942,
										378946
									],
									[
										378975,
										378979
									],
									[
										379085,
										379089
									],
									[
										379278,
										379282
									],
									[
										379302,
										379306
									],
									[
										379363,
										379367
									],
									[
										379434,
										379438
									],
									[
										379519,
										379523
									],
									[
										379568,
										379572
									],
									[
										379725,
										379729
									],
									[
										380221,
										380225
									],
									[
										380491,
										380495
									],
									[
										380675,
										380679
									],
									[
										380882,
										380886
									],
									[
										381144,
										381148
									],
									[
										381328,
										381332
									],
									[
										381515,
										381519
									],
									[
										381782,
										381786
									],
									[
										381819,
										381823
									],
									[
										381863,
										381867
									],
									[
										382156,
										382160
									],
									[
										382193,
										382197
									],
									[
										382239,
										382243
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								380224,
								380224
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"default_dir": "/Users/sopae/Projects/AkinsParker",
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 3,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 135439.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 37,
					"file": "web/css/formsmain.min.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 64659,
						"regions":
						{
						},
						"selection":
						[
							[
								64659,
								64659
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"open_with_edit": true,
							"syntax": "Packages/CSS/CSS.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 6.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 60,
					"type": "text"
				},
				{
					"buffer": 38,
					"file": "app/views/login.html.twig",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 556,
						"regions":
						{
						},
						"selection":
						[
							[
								539,
								539
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP-Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 53,
					"type": "text"
				},
				{
					"buffer": 39,
					"file": "app/views/thankyou.html.twig",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 184,
						"regions":
						{
						},
						"selection":
						[
							[
								129,
								129
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"open_with_edit": true,
							"syntax": "Packages/PHP-Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"type": "text"
				},
				{
					"buffer": 40,
					"file": "app/views/form.signup.html.twig",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 946,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/PHP-Twig/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"type": "text"
				},
				{
					"buffer": 41,
					"file": "src/Swim/Controller/UserController.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1903,
						"regions":
						{
						},
						"selection":
						[
							[
								65,
								65
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 59,
					"type": "text"
				},
				{
					"buffer": 42,
					"file": "src/Swim/Form/Type/UserType.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2164,
						"regions":
						{
						},
						"selection":
						[
							[
								957,
								957
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 354.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 43,
					"file": "src/Swim/Entity/User.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4775,
						"regions":
						{
						},
						"selection":
						[
							[
								4693,
								4693
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3384.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 44,
					"file": "app/views/form.signup.groupcode.html.twig",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 566,
						"regions":
						{
						},
						"selection":
						[
							[
								367,
								367
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/PHP-Twig/Syntaxes/HTML (Twig).tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 12.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 45,
					"file": "src/Swim/Form/Type/HostRegistrationType.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2465,
						"regions":
						{
						},
						"selection":
						[
							[
								2017,
								2017
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"open_with_edit": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 90.0,
						"zoom_level": 1.0
					},
					"stack_index": 27,
					"type": "text"
				},
				{
					"buffer": 46,
					"file": "src/Swim/Form/Type/AddressType.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1259,
						"regions":
						{
						},
						"selection":
						[
							[
								537,
								537
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"history_list_is_closing": true,
							"open_with_edit": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 47,
					"file": "src/Swim/Form/Type/PoolType.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1312,
						"regions":
						{
						},
						"selection":
						[
							[
								1312,
								1312
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"open_with_edit": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 61.0,
						"zoom_level": 1.0
					},
					"stack_index": 54,
					"type": "text"
				},
				{
					"buffer": 48,
					"file": "src/Swim/Form/Type/PaymentType.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2864,
						"regions":
						{
						},
						"selection":
						[
							[
								457,
								685
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"open_with_edit": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 28,
					"type": "text"
				},
				{
					"buffer": 49,
					"file": "src/Swim/Entity/Payment.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 329,
						"regions":
						{
						},
						"selection":
						[
							[
								223,
								223
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 38,
					"type": "text"
				},
				{
					"buffer": 50,
					"file": "src/Swim/Form/Type/StudentType.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2054,
						"regions":
						{
						},
						"selection":
						[
							[
								1330,
								1330
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"open_with_edit": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 343.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"type": "text"
				},
				{
					"buffer": 51,
					"file": "src/Swim/Form/Type/StudentPreferenceType.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1542,
						"regions":
						{
						},
						"selection":
						[
							[
								1150,
								1150
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"open_with_edit": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 104.0,
						"zoom_level": 1.0
					},
					"stack_index": 55,
					"type": "text"
				},
				{
					"buffer": 52,
					"file": "app/config/dev.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 214,
						"regions":
						{
						},
						"selection":
						[
							[
								214,
								214
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/PHP/PHP.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 23,
					"type": "text"
				},
				{
					"buffer": 53,
					"file": "app/config/prod.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 848,
						"regions":
						{
						},
						"selection":
						[
							[
								485,
								485
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 67,
					"type": "text"
				},
				{
					"buffer": 54,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 97071,
						"regions":
						{
						},
						"selection":
						[
							[
								92498,
								92498
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"default_dir": "/Users/sopae/Projects/AkinsParker",
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6.0,
						"zoom_level": 1.0
					},
					"stack_index": 68,
					"type": "text"
				},
				{
					"buffer": 55,
					"file": "/Users/sopae/Downloads/signup.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 23845,
						"regions":
						{
						},
						"selection":
						[
							[
								20,
								23844
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 7778.0,
						"zoom_level": 1.0
					},
					"stack_index": 64,
					"type": "text"
				},
				{
					"buffer": 56,
					"file": "src/Swim/Entity/User.php.old",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4258,
						"regions":
						{
						},
						"selection":
						[
							[
								2507,
								2507
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 58,
					"type": "text"
				},
				{
					"buffer": 57,
					"file": "src/Swim/Entity/Address.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2756,
						"regions":
						{
						},
						"selection":
						[
							[
								190,
								190
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"history_list_is_closing": true,
							"open_with_edit": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 58,
					"file": "src/Swim/Entity/Pool.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 126,
						"regions":
						{
						},
						"selection":
						[
							[
								126,
								126
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"open_with_edit": true,
							"syntax": "Packages/PHP/PHP.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 37,
					"type": "text"
				},
				{
					"buffer": 59,
					"file": "src/Swim/Entity/StudentPreference.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 107,
						"regions":
						{
						},
						"selection":
						[
							[
								104,
								104
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"open_with_edit": true,
							"syntax": "Packages/PHP/PHP.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 46,
					"type": "text"
				},
				{
					"buffer": 60,
					"file": "src/Swim/Entity/Student.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 486,
						"regions":
						{
						},
						"selection":
						[
							[
								373,
								373
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"open_with_edit": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"type": "text"
				},
				{
					"buffer": 61,
					"file": "src/Swim/Entity/Lesson.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3284,
						"regions":
						{
						},
						"selection":
						[
							[
								914,
								914
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"open_with_edit": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 35,
					"type": "text"
				},
				{
					"buffer": 62,
					"file": "src/Swim/Entity/HostRegistration.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1685,
						"regions":
						{
						},
						"selection":
						[
							[
								445,
								445
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"open_with_edit": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 938.0,
						"zoom_level": 1.0
					},
					"stack_index": 40,
					"type": "text"
				},
				{
					"buffer": 63,
					"file": "src/Swim/Entity/Registration.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 597,
						"regions":
						{
						},
						"selection":
						[
							[
								375,
								375
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"open_with_edit": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 22,
					"type": "text"
				},
				{
					"buffer": 64,
					"file": "src/Swim/Repository/RepositoryInterface.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1384,
						"regions":
						{
						},
						"selection":
						[
							[
								576,
								576
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 326.0,
						"zoom_level": 1.0
					},
					"stack_index": 45,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 42,
					"file": "src/Swim/Form/Type/UserType.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2164,
						"regions":
						{
						},
						"selection":
						[
							[
								1114,
								1114
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 125.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 46,
					"file": "src/Swim/Form/Type/AddressType.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1259,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"history_list_is_closing": true,
							"open_with_edit": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 196.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "src/Swim/Form/Type/UserSignupType.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 740,
						"regions":
						{
						},
						"selection":
						[
							[
								280,
								280
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 300.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 65,
					"file": "src/Swim/Form/Type/GroupCodeType.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 830,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				0,
				1,
				1,
				2
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 102.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.xdebug":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/User/Chrome.sublime-build",
	"project": "swim.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"addresstyp",
				"src/Swim/Form/Type/AddressType.php"
			],
			[
				"",
				"app/views/form.signup.user.html.twig"
			],
			[
				"groupcode",
				"src/Swim/Form/Type/GroupCodeType.php"
			],
			[
				"usersignup",
				"src/Swim/Form/Type/UserSignupType.php"
			],
			[
				"usertype",
				"src/Swim/Form/Type/UserType.php"
			],
			[
				"usersig",
				"src/Swim/Form/Type/UserSignupType.php"
			],
			[
				"usrtype",
				"src/Swim/Form/Type/UserType.php"
			],
			[
				"usersignupty",
				"src/Swim/Form/Type/UserSignupType.php"
			],
			[
				"address.php",
				"src/Swim/Entity/Address.php"
			],
			[
				"user.",
				"src/Swim/Entity/User.php"
			],
			[
				"addresstype",
				"src/Swim/Form/Type/AddressType.php"
			],
			[
				"form.signup",
				"app/views/form.signup.user.html.twig"
			],
			[
				"signup",
				"src/Swim/Controller/SignupController.php"
			],
			[
				"groupdteail",
				"src/Swim/Form/Type/GroupDetailSignupType.php"
			],
			[
				"groupre",
				"src/Swim/Repository/GroupRepository.php"
			],
			[
				"routes",
				"src/routes.php"
			],
			[
				"user",
				"src/Swim/Entity/User.php"
			],
			[
				"form.pa",
				"app/views/form.signup.payment.confirm.html.twig"
			],
			[
				"thank",
				"app/views/thankyou.html.twig"
			],
			[
				"signupcon",
				"src/Swim/Controller/SignupController.php"
			],
			[
				"student",
				"src/Swim/Entity/Student.php"
			],
			[
				"studentype",
				"src/Swim/Form/Type/StudentType.php"
			],
			[
				"regist",
				"src/Swim/Entity/Registration.php"
			],
			[
				"form.signup.user",
				"app/views/form.signup.user.html.twig"
			],
			[
				"form.signup.pay",
				"app/views/form.signup.payment.html.twig"
			],
			[
				"dump",
				"vendor/symfony/http-kernel/EventListener/DumpListener.php"
			],
			[
				"dev",
				"app/config/dev.php"
			],
			[
				"app.",
				"src/app.php"
			],
			[
				"dev.",
				"app/config/dev.php"
			],
			[
				"form.signup.group",
				"app/views/form.signup.group.html.twig"
			],
			[
				"form.signup.group.html",
				"app/views/form.signup.group.html.twig"
			],
			[
				"form.payment",
				"app/views/form.signup.payment.html.twig"
			],
			[
				"groupsignupty",
				"src/Swim/Form/Type/GroupSignupType.php"
			],
			[
				"hostre",
				"src/Swim/Form/Type/HostRegistrationType.php"
			],
			[
				"form.signup.grou",
				"app/views/form.signup.group.html.twig"
			],
			[
				"studentsignup",
				"src/Swim/Form/Type/StudentSignupType.php"
			],
			[
				"paymenttyp",
				"src/Swim/Form/Type/PaymentType.php"
			],
			[
				"form.signup.stu",
				"app/views/form.signup.student.html.twig"
			],
			[
				"form.signup.user.",
				"app/views/form.signup.user.html.twig"
			],
			[
				"form.signup.u",
				"app/views/form.signup.user.html.twig"
			],
			[
				"addressre",
				"src/Swim/Repository/AddressRepository.php"
			],
			[
				"userre",
				"src/Swim/Repository/UserRepository.php"
			],
			[
				"form.sign",
				"app/views/form.signup.student.html.twig"
			],
			[
				"poolre",
				"src/Swim/Repository/PoolRepository.php"
			],
			[
				"lessonre",
				"src/Swim/Repository/LessonRepository.php"
			],
			[
				"address.",
				"src/Swim/Entity/Address.php"
			],
			[
				"user.php",
				"src/Swim/Entity/User.php"
			],
			[
				"user.sphp",
				"src/Swim/Form/Type/UserSignupType.php"
			],
			[
				"address",
				"src/Swim/Repository/AddressRepository.php"
			],
			[
				"app",
				"src/app.php"
			],
			[
				"userrep",
				"src/Swim/Repository/UserRepository.php"
			],
			[
				"poolrepo",
				"src/Swim/Repository/LikeRepository.php"
			],
			[
				"group",
				"src/Swim/Repository/GroupRepository.php"
			],
			[
				"less",
				"src/Swim/Entity/Lesson.php"
			],
			[
				"pool",
				"src/Swim/Entity/Pool.php"
			],
			[
				"formstu",
				"app/views/form.signup.student.html.twig"
			],
			[
				"formsignup.stu",
				"app/views/form.signup.student.html.twig"
			],
			[
				"form.signup.g",
				"app/views/form.signup.groupcode.html.twig"
			],
			[
				"sign",
				"src/Swim/Controller/SignupController.php"
			],
			[
				"pay",
				"src/Swim/Form/Type/PaymentType.php"
			],
			[
				"payment",
				"src/Swim/Entity/Payment.php"
			],
			[
				"paymentty",
				"src/Swim/Form/Type/PaymentType.php"
			],
			[
				"gorupsignup",
				"src/Swim/Form/Type/GroupSignupType.php"
			],
			[
				"stud",
				"src/Swim/Form/Type/StudentSignupType.php"
			],
			[
				"studentsing",
				"src/Swim/Form/Type/StudentSignupType.php"
			],
			[
				"stude",
				"src/Swim/Form/Type/StudentType.php"
			],
			[
				"form.",
				"app/views/form.html.twig"
			],
			[
				"form.signup.ht",
				"app/views/form.signup.html.twig"
			],
			[
				"form.signup.",
				"app/views/form.signup.guest.html.twig"
			],
			[
				"studentsign",
				"src/Swim/Form/Type/StudentSignupType.php"
			],
			[
				"studentsi",
				"src/Swim/Form/Type/StudentSignupType.php"
			],
			[
				"app.php",
				"src/app.php"
			],
			[
				"studenttyp",
				"src/Swim/Form/Type/StudentType.php"
			],
			[
				"studentsignp",
				"src/Swim/Form/Type/StudentSignupType.php"
			],
			[
				"form.signup.guw",
				"app/views/form.signup.guest.html.twig"
			],
			[
				"lesson",
				"src/Swim/Entity/Lesson.php"
			],
			[
				"g",
				"src/Swim/Repository/GroupRepository.php"
			],
			[
				"db.",
				"app/db.sql"
			],
			[
				"group.",
				"src/Swim/Entity/Group.php"
			],
			[
				"inde",
				"src/Swim/Controller/IndexController.php"
			],
			[
				"groupsign",
				"src/Swim/Form/Type/GroupSignupType.php"
			],
			[
				"route",
				"src/routes.php"
			],
			[
				"form.stu",
				"app/views/form.student.signup.html.twig"
			],
			[
				"studentty",
				"src/Swim/Form/Type/StudentType.php"
			],
			[
				"stu",
				"src/Swim/Form/Type/StudentType.php"
			],
			[
				"hel",
				"src/Swim/Repository/HelperRepository.php"
			],
			[
				"studentyp",
				"src/Swim/Form/Type/StudentType.php"
			],
			[
				"studnet",
				"src/Swim/Entity/Student.php"
			],
			[
				"db.sl",
				"app/db.sql"
			],
			[
				"db",
				"app/db.sql"
			],
			[
				"usersi",
				"src/Swim/Form/Type/UserSignupType.php"
			],
			[
				"studen",
				"src/Swim/Entity/StudentCollection.php"
			],
			[
				"lay",
				"app/views/layout.html.twig"
			],
			[
				"studenty",
				"src/Swim/Form/Type/StudentType.php"
			],
			[
				"main.css",
				"web/css/main.css"
			],
			[
				"signupco",
				"src/Swim/Controller/SignupController.php"
			],
			[
				"main.cs",
				"web/css/main.css"
			],
			[
				"main",
				"web/css/main.css"
			],
			[
				"userty",
				"src/Swim/Form/Type/UserType.php"
			],
			[
				"com",
				"composer.json"
			],
			[
				"usersign",
				"src/Swim/Form/Type/UserSignupType.php"
			],
			[
				"poolt",
				"src/Swim/Form/Type/PoolType.php"
			],
			[
				"host",
				"src/Swim/Entity/HostRegistration.php"
			],
			[
				"hostregi",
				"src/Swim/Form/Type/HostRegistrationType.php"
			],
			[
				"hos",
				"src/Swim/Form/Type/HostRegistrationType.php"
			],
			[
				"form.host.step1",
				"app/views/form.host.step1.html.twig"
			],
			[
				"form.host.ste",
				"app/views/form.host.step1.html.twig"
			],
			[
				"formhost",
				"app/views/form.host.step2.html.twig"
			],
			[
				"hostr",
				"src/Swim/Entity/HostRegistration.php"
			],
			[
				"add",
				"src/Swim/Form/Type/AddressType.php"
			],
			[
				"hor",
				"src/Swim/Entity/HostRegistration.php"
			],
			[
				"compo",
				"composer.json"
			],
			[
				"layout",
				"app/views/layout.html.twig"
			],
			[
				"p",
				"web/less/font-awesome/path.less"
			],
			[
				"db.sql",
				"app/db.sql"
			],
			[
				"usr",
				"src/Swim/Repository/UserRepository.php"
			],
			[
				"form.si",
				"app/views/form.host.step1.html.twig"
			],
			[
				"layo",
				"app/views/layout.html.twig"
			],
			[
				"form.ho",
				"app/views/form.host.step1.html.twig"
			],
			[
				"layot",
				"app/views/layout.html.twig"
			],
			[
				"indexco",
				"src/Swim/Controller/IndexController.php"
			],
			[
				"comp",
				"composer.json"
			],
			[
				"userr",
				"src/Swim/Repository/UserRepository.php"
			],
			[
				"adminuser",
				"src/Swim/Controller/AdminUserController.php"
			],
			[
				"userrepo",
				"src/Swim/Repository/UserRepository.php"
			],
			[
				"login",
				"app/views/login.html.twig"
			],
			[
				"host.",
				"app/views/host.signup.html.twig"
			],
			[
				"symfony/component/security/http/firewall/contextlistener.php",
				"vendor/symfony/security/Symfony/Component/Security/Http/Firewall/ContextListener.php"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
		"xdebug":
		{
			"hide_conflict": false,
			"restore_index":
			{
				"17":
				{
					"group": 0,
					"index": 0
				},
				"18":
				{
					"group": 0,
					"index": 1
				},
				"19":
				{
					"group": 0,
					"index": 2
				},
				"20":
				{
					"group": 0,
					"index": 3
				},
				"21":
				{
					"group": 0,
					"index": 4
				},
				"22":
				{
					"group": 0,
					"index": 5
				},
				"23":
				{
					"group": 0,
					"index": 6
				},
				"24":
				{
					"group": 0,
					"index": 7
				},
				"25":
				{
					"group": 0,
					"index": 8
				},
				"26":
				{
					"group": 0,
					"index": 9
				},
				"27":
				{
					"group": 0,
					"index": 10
				},
				"28":
				{
					"group": 0,
					"index": 11
				},
				"29":
				{
					"group": 0,
					"index": 12
				},
				"30":
				{
					"group": 0,
					"index": 13
				},
				"31":
				{
					"group": 0,
					"index": 14
				},
				"32":
				{
					"group": 0,
					"index": 15
				},
				"33":
				{
					"group": 0,
					"index": 16
				},
				"34":
				{
					"group": 0,
					"index": 17
				},
				"35":
				{
					"group": 0,
					"index": 18
				},
				"36":
				{
					"group": 0,
					"index": 19
				},
				"37":
				{
					"group": 0,
					"index": 20
				},
				"38":
				{
					"group": 0,
					"index": 21
				},
				"39":
				{
					"group": 0,
					"index": 22
				},
				"40":
				{
					"group": 0,
					"index": 23
				},
				"41":
				{
					"group": 0,
					"index": 24
				},
				"42":
				{
					"group": 0,
					"index": 25
				},
				"43":
				{
					"group": 0,
					"index": 26
				},
				"44":
				{
					"group": 0,
					"index": 27
				},
				"45":
				{
					"group": 0,
					"index": 28
				},
				"46":
				{
					"group": 0,
					"index": 29
				},
				"47":
				{
					"group": 0,
					"index": 30
				},
				"48":
				{
					"group": 0,
					"index": 31
				},
				"49":
				{
					"group": 0,
					"index": 32
				},
				"50":
				{
					"group": 0,
					"index": 33
				},
				"51":
				{
					"group": 0,
					"index": 34
				},
				"52":
				{
					"group": 0,
					"index": 35
				},
				"53":
				{
					"group": 0,
					"index": 36
				},
				"54":
				{
					"group": 0,
					"index": 37
				},
				"55":
				{
					"group": 0,
					"index": 38
				},
				"56":
				{
					"group": 0,
					"index": 39
				},
				"57":
				{
					"group": 0,
					"index": 40
				},
				"58":
				{
					"group": 0,
					"index": 41
				},
				"59":
				{
					"group": 0,
					"index": 42
				},
				"60":
				{
					"group": 0,
					"index": 43
				},
				"61":
				{
					"group": 0,
					"index": 44
				},
				"62":
				{
					"group": 0,
					"index": 45
				},
				"63":
				{
					"group": 0,
					"index": 46
				},
				"64":
				{
					"group": 0,
					"index": 47
				},
				"65":
				{
					"group": 0,
					"index": 48
				},
				"66":
				{
					"group": 0,
					"index": 49
				},
				"67":
				{
					"group": 0,
					"index": 50
				},
				"68":
				{
					"group": 0,
					"index": 51
				}
			},
			"restore_layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			}
		}
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 283.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
